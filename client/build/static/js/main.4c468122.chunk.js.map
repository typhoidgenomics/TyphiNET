{"version":3,"sources":["registerServiceWorker.js","reportWebVitals.js","assets/img/logo-typhinet-prod.png","components/Elements/Header/HeaderMUI.js","stores/hooks.ts","components/Elements/Header/Header.js","components/Layout/MainLayoutUI.js","components/Layout/MainLayout.js","components/Elements/Map/MapMUI.js","util/colorHelper.js","components/Elements/Map/mapColorHelper.js","components/Elements/Map/BottomLeftControls/BottomLeftControlsMUI.js","stores/slices/mapSlice.ts","components/Elements/Map/BottomLeftControls/BottomLeftControls.js","components/Elements/Map/TopRightControls/TopRightControlsMUI.js","util/genotypes.js","util/mapLegends.js","components/Elements/Map/TopRightControls/TopRightControls.js","stores/slices/dashboardSlice.ts","components/Elements/Map/TopLeftControls/TopLeftControlsMUI.js","components/Elements/Map/TopLeftControls/TopLeftControls.js","components/Elements/Map/BottomRightControls/BottomRightControlsMUI.js","util/imgOnLoadPromise.js","components/Elements/Map/BottomRightControls/BottomRightControls.js","util/drugs.js","stores/slices/graphSlice.ts","components/Elements/Map/TopRightControls2/TopRightControls2MUI.js","components/Elements/Map/TopRightControls2/TopRightControls2.js","components/Elements/Map/Map.js","components/Elements/Footer/FooterMUI.js","components/Elements/Footer/Footer.js","constants.js","components/Elements/Graphs/GraphsMUI.js","components/Elements/Graphs/DeterminantsGraph/DeterminantsGraphMUI.js","components/Elements/Graphs/DeterminantsGraph/DeterminantsGraph.js","components/Elements/Graphs/FrequenciesGraph/FrequenciesGraphMUI.js","components/Elements/Graphs/graphColorHelper.js","components/Elements/Graphs/FrequenciesGraph/FrequenciesGraph.js","components/Elements/Graphs/DrugResistanceGraph/DrugResistanceGraphMUI.js","components/Elements/Graphs/DrugResistanceGraph/DrugResistanceGraph.js","components/Elements/Graphs/DistributionGraph/DistributionGraphMUI.js","components/Elements/Graphs/DistributionGraph/DistributionGraph.js","util/graphCards.js","components/Elements/SelectCountry/SelectCountryMUI.js","components/Elements/SelectCountry/SelectCountry.js","components/Elements/DownloadData/DownloadDataMUI.js","assets/img/eu_flag.jpg","util/reportInfoTexts.js","components/Elements/DownloadData/DownloadData.js","components/Elements/Graphs/Graphs.js","util/drugClassesRules.js","components/Dashboard/filters.js","components/Elements/ResetButton/ResetButtonMUI.js","components/Elements/ResetButton/ResetButton.js","components/About/AboutMUI.js","components/About/About.js","components/Dashboard/Dashboard.js","stores/store.ts","App.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","reportWebVitals","onPerfEntry","Function","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","useStyles","makeStyles","theme","toolbar","borderRadius","display","flexDirection","gap","justifyContent","minHeight","padding","logoWrapper","width","backgroundColor","position","top","zIndex","boxShadow","logo","height","informationCards","paddingTop","card","alignItems","textAlign","cardContent","actualAndTotalValues","useAppDispatch","useDispatch","useAppSelector","useSelector","id","name","Header","classes","totalGenomes","dashboard","actualGenomes","totalGenotypes","actualGenotypes","_jsxs","Toolbar","className","children","_jsx","src","LogoImg","alt","map","index","Card","elevation","CardContent","Typography","variant","sx","fontWeight","fontSize","_Fragment","concat","mainLayout","overflowY","childrenWrapper","margin","rowGap","loading","bottom","alignSelf","paddingLeft","MainLayout","loadingData","loadingMap","Loader","type","color","mapWrapper","composableMap","tooltipMap","paddingBottom","marginRight","border","topControls","marginTop","country","tooltipInfo","info","getColorForGenotype","genotype","colorForDrugClasses","Azithromycin","Chloramphenicol","Ampicillin","Sulphonamides","Trimethoprim","Tetracyclines","Ceftriaxone","lightGrey","darkGrey","zeroPercentColor","hoverColor","samplesColorScale","domain","redColorScale","percentage","sensitiveColorScale","p","parseFloat","bottomLeftControls","left","mapSlice","createSlice","initialState","coordinates","zoom","mapView","tooltipContent","dataset","mapData","ifCustom","reducers","setLoadingMap","action","payload","setPosition","setMapView","setTooltipContent","setDataset","setMapData","setIfCustom","_mapSlice$actions","actions","BottomLeftControls","dispatch","Zoom","in","some","coordinate","Tooltip","title","placement","IconButton","onClick","FilterCenterFocus","_objectSpread","AddCircle","RemoveCircle","topRightControls","right","label","columnGap","labelTooltipIcon","cursor","selectInput","selectMenu","legendWrapper","maxHeight","legend","legendColorBox","legendText","bp700","genotypes","sort","a","b","localeCompare","mapLegends","value","generalSteps","sensitiveSteps","noSamplesSteps","gradientStyle","ExcludedView","mapViewsWithZeroPercentOption","TopRightControls","matches","useMediaQuery","getStepBoxColor","step","InfoOutlined","Select","onChange","event","target","inputProps","MenuProps","list","MenuItem","length","Box","style","includes","backgroundImage","getSteps","dashboardSlice","canGetData","globalOverviewLabel","italicLabel","fullLabel","actualCountry","timeInitial","timeFinal","actualTimeInitial","actualTimeFinal","years","genotypesForFilter","listPMID","setCanGetData","setGlobalOverviewLabel","setLoadingData","setActualCountry","setTotalGenotypes","setTotalGenomes","setActualGenomes","setActualGenotypes","setTimeInitial","setTimeFinal","setActualTimeInitial","setActualTimeFinal","setYears","setGenotypesForFilter","setListPMID","_dashboardSlice$actio","topLeftControls","datasetWrapper","yearsWrapper","yearWrapper","menuPaper","datasetOptions","TopLeftControls","gutterBottom","ToggleButtonGroup","exclusive","size","_event","newValue","option","ToggleButton","paper","child","props","fullWidth","filter","year","Divider","orientation","flexItem","bottomRightControls","imgOnLoadPromise","obj","Promise","resolve","reject","onload","onerror","BottomRightControls","_useState","useState","_useState2","_slicedToArray","setLoading","_useState3","_useState4","showAlert","setShowAlert","customDropdownMapView","graph","_handleClick","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","wrap","_context2","prev","next","svgAsPngUri","document","getElementById","scale","_callee","uri","canvas","ctx","mapImg","mapImgPromise","legendHeight","actualMapView","genotypesText","legendImg","legendImgPromise","legendWidth","typhinetLogo","typhinetLogoPromise","base64","_context","createElement","getContext","cHeight","fillStyle","fillRect","font","fillText","find","x","join","drawImage","textHeight","t0","abrupt","toDataURL","download","stop","_x","apply","arguments","finish","handleCloseAlert","disabled","CircularProgress","CameraAlt","Snackbar","open","autoHideDuration","onClose","Alert","severity","drugs","drugsForDrugResistanceGraph","_toConsumableArray","defaultDrugsForDrugResistanceGraph","drugClasses","countriesForFilter","genotypesYearData","drugsYearData","genotypesDrugsData","genotypesDrugClassesData","distributionGraphView","drugResistanceGraphView","frequenciesGraphView","frequenciesGraphSelectedGenotypes","determinantsGraphView","determinantsGraphDrugClass","graphSlice","setCountriesForFilter","setGenotypesYearData","setDrugsYearData","setDistributionGraphView","setDrugResistanceGraphView","setFrequenciesGraphView","setFrequenciesGraphSelectedGenotypes","setGenotypesDrugsData","setDeterminantsGraphView","setDeterminantsGraphDrugClass","setGenotypesDrugClassesData","setCustomDropdownMapView","_graphSlice$actions","minWidth","dropdown","checkbox","frequenciesGraph","borderTop","selectsWrapper","selectWrapper","labelWrapper","dataViewSelectInput","dataViewSelectMenu","genotypesSelectInput","genotypesSelectButton","whiteSpace","genotypesMenuPaper","genotypesSelectMenu","graphWrapper","graphLabel","textAnchor","overflowX","flexWrap","marginLeft","legendItemWrapper","paddingRight","colorCircle","chartTooltipLabel","tooltipWrapper","tooltip","tooltipTitle","borderBottom","gridTemplateColumns","tooltipItemWrapper","gridColumn","tooltipItemBox","flex","tooltipItemStats","overflowWrap","noGenotypeSelected","TopRightControls2","setCurrentTooltip","searchValue2","setSearchValue2","organism","getSelectGenotypeLabel","Number","Susceptible","totalCount","toFixed","handleChangeSelectedGenotypes","_ref$event","_ref$all","all","filteredData","toLowerCase","toUpperCase","multiple","displayEmpty","e","endAdornment","Button","renderValue","selected","TextField","autoFocus","placeholder","InputProps","startAdornment","InputAdornment","SearchIcon","preventDefault","onKeyDown","stopPropagation","Checkbox","disableRipple","checked","indexOf","ListItemText","primary","statKey","MDR","XDR","AzithR","CipNS","CipR","Map","handleOnMouseLeave","ComposableMap","projectionConfig","rotate","ZoomableGroup","center","onMoveEnd","handleOnMoveEnd","Sphere","stroke","strokeWidth","Graticule","Geographies","geography","_ref2","geographies","geo","_countryStats$statKey","_countryStats$statKey2","_countryStats$statKey3","countryData","item","properties","NAME","countryStats","stats","fillColor","smallerThan20","showTooltip","count","GENOTYPE","items","percentCounter","genotypes1","genotypes2","forEach","push","sumCount","_step2","_iterator2","_createForOfIteratorHelper","s","n","done","err","f","undefined","parseInt","chroma","colorScale","hex","redColorScale2","per","Geography","fill","handleOnClick","onMouseLeave","onMouseEnter","_ref$smallerThan","_ref$showTooltip","content","Object","assign","Samples","Genotypes","H58","slice","combinedCount","combinedPercentage","_step","_iterator","handleOnMouseEnter","default","outline","hover","pressed","rsmKey","ReactTooltip","keys","key","footer","button","textTransform","text","Footer","startIcon","Email","GitHub","Twitter","href","rel","API_ENDPOINT","graphsCard","overflow","cardActions","titleWrapper","downloadWrapper","determinantsGraph","maxWidth","selectLabel","select","dataViewOptions","DeterminantsGraph","plotChart","setPlotChart","matches500","getData","_genotypesDrugClasses","exclusions","genotypeDrugClassesDataPercentage","structuredClone","useEffect","_genotypesDrugClasses2","_colorForDrugClasses$","ResponsiveContainer","BarChart","data","maxBarSize","CartesianGrid","strokeDasharray","XAxis","dataKey","interval","tick","YAxis","allowDataOverflow","allowDecimals","Label","angle","Brush","Legend","entry","ChartTooltip","y","wrapperStyle","active","tooltipData","getTooltipData","lineHeight","noWrap","Bar","stackId","getColorForDrug","drug","FrequenciesGraph","genotypeDataPercentage","drugResistanceGraph","selectButton","DrugResistanceGraph","drugDataPercentage","handleChangeDrugsView","newValues","lines","getElementsByClassName","_loop","hasValue","LineChart","tickCount","Line","connectNulls","activeDot","distributionGraph","DistributionGraph","graphCards","description","SelectCountry","downloadDataWrapper","getSalmonellaTexts","date","columnsToRemove","DownloadData","loadingCSV","setLoadingCSV","loadingPDF","setLoadingPDF","_useState5","_useState6","listPIMD","_handleClickDownloadDatabase","axios","get","res","indexes","csv","split","line","curr","currentIndex","reverse","newLines","j","aux","i","newCSV","finally","formatDate","moment","format","drawFooter","pageHeight","pageWidth","setFontSize","align","drawLegend","_ref2$id","legendData","factor","rectY","_ref2$isGenotype","isGenotype","_ref2$isDrug","isDrug","xSpace","yFactor","xFactor","Math","floor","setFillColor","circle","setFont","replaceAll","_handleClickDownloadPDF","_callee3","doc","texts","euFlag","mapLegend","drugClassesBars","drugClassesFactor","genotypesFactor","graphImg","graphImgPromise","_context3","jsPDF","unit","internal","pageSize","getWidth","getHeight","Date","Image","addImage","EUFlagImg","addPage","_ref3","img","ceil","domtoimage","toPng","bgcolor","sent","rect","save","t1","LoadingButton","TableChart","loadingPosition","PictureAsPdf","Graphs","RFWG","DRT","RDWG","GD","chartLoadings","setChartLoadings","context","mobileFactor","yPosition","_ref$isGenotype","_ref$isDrug","beginPath","arc","PI","closePath","_handleClickDownload","heightFactor","logoPromise","handleLoading","quality","_defineProperty","CardActions","disableSpacing","_x2","handleClickDownload","component","d","drugRules","columnID","values","drugRulesForDrugResistanceGraph","drugClassesRules","susceptible","rules","filterData","newData","TRAVEL","DATE","checkTime","Set","genomesCount","genotypesCount","getCountryDisplayName","COUNTRY_ONLY","PMID","getMapStatsData","columnKey","statsKey","columnData","getMapData","countries","getYearsData","_ref4","_ref4$getUniqueGenoty","getUniqueGenotypes","drugsData","genotypesAndDrugsData","uniqueGenotypes","genotypesAndDrugsDataUniqueGenotypes","genotypesData","yearData","response","toString","reduce","accumulator","currentValue","drugStats","rule","drugData","unique","getGenotypesData","_ref5","genotypeData","resistantCount","drugClassResponse","drugClass","classRule","classRuleName","every","r","resetButton","ResetButton","Fab","RestartAlt","paragraph","About","euFlagImg","DashboardPage","setData","yearsForFilter","getInfoFromData","responseData","yearsData","_getData","filters","store","configureStore","reducer","deashboardReducer","mapReducer","graphReducer","middleware","getDefaultMiddleware","serializableCheck","createTheme","palette","main","typography","fontFamily","ReactDOM","render","React","StrictMode","HashRouter","Provider","ThemeProvider","Routes","Route","path","element","URL","process","origin","addEventListener","fetch","status","headers","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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AAQ,IACjBnG,EAASmG,KAAO,IAAM,EACxBmB,EAAST,GAAY,CAAEX,YAAa,CAAC,EAAG,GAAIC,KAAM,KAElDmB,EAAST,GAAWoB,wBAAC,CAAC,EAAIjI,GAAQ,IAAEkG,YAAa,CAAC,EAAG,GAAIC,KAAMnG,EAASmG,KAAO,MAEnF,EAoB2DtE,SACjDC,cAACqG,IAAY,CAACxF,SAAS,kBAMnC,E,wCCrDMzD,GAAYC,aAAW,SAACC,GAAK,MAAM,CACvCgJ,iBAAkB,CAChB7I,QAAS,OACTC,cAAe,SACfQ,SAAU,WACVC,IAAK,EACLoI,MAAO,EAEP,UAAW,CACTrI,SAAU,aAGdQ,KAAM,CAAElB,aAAc,kBACtBqB,YAAa,CACXpB,QAAS,OACTC,cAAe,SACf0D,OAAQ,OAEVoF,MAAO,CACL/I,QAAS,OACTC,cAAe,MACfiB,WAAY,SACZ8H,UAAW,OAEbC,iBAAkB,CAChBC,OAAQ,WAEVC,YAAa,CACX/F,SAAU,kBACVD,WAAY,iBACZhC,UAAW,SAEbiI,WAAY,CACV,sBAAuB,CACrBhG,SAAU,SAGdiG,cAAe,CACbxE,UAAW,MACXyE,UAAW,QACX9F,UAAW,QAEb+F,OAAQ,CACNvJ,QAAS,OACTkB,WAAY,UAEdsI,eAAgB,CACdjJ,MAAO,OACPO,OAAQ,OACR4D,YAAa,OAEf+E,WAAY,CACVrG,SAAU,QAEZsG,MAAO,CAAC,EACT,ICxDYC,GAAY,CAEvB,IACA,QACA,QACA,QACA,MACA,QACA,QACA,QACA,IACA,MACA,QACA,QACA,QACA,QACA,MACA,QACA,IACA,QACA,QACA,MACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,UACA,UACA,MACA,QACA,QACA,QACA,QACA,MACA,QACA,QACA,QACA,QACA,QACA,MACA,QACA,MACA,QACA,QACA,IACA,QACA,QACA,MACA,QACA,QACA,MACA,QACA,QACA,MACA,QACA,QACA,YACA,YACA,MACA,MACA,QACA,QACA,QACA,QACA,UACA,UACA,UACA,IACA,MACA,QACA,MACA,QACA,QACA,QACA,QACA,UACA,aACA,cACA,UACA,cACA,cACA,YACA,cACA,UACA,eACAC,MAAK,SAACC,EAAGC,GAAC,OAAKD,EAAEE,cAAcD,EAAE,IC1FtBE,GAAa,CACxB,CAAEC,MAAO,MAAOlB,MAAO,6BACvB,CAAEkB,MAAO,MAAOlB,MAAO,oCACvB,CAAEkB,MAAO,SAAUlB,MAAO,0BAC1B,CAAEkB,MAAO,QAASlB,MAAO,yCACzB,CAAEkB,MAAO,OAAQlB,MAAO,kCAExB,CAAEkB,MAAO,2BAA4BlB,MAAO,4BAC5C,CAAEkB,MAAO,oBAAqBlB,MAAO,qBACrC,CAAEkB,MAAO,sBAAuBlB,MAAO,uBACvC,CAAEkB,MAAO,gBAAiBlB,MAAO,gBACjC,CAAEkB,MAAO,cAAelB,MAAO,gBCF3BmB,GAAe,CAAC,kBAAc,oBAAgB,qBAAiB,QAC/DC,GAAiB,CAAC,UAAW,WAAY,WAAY,WAAY,aACjEC,GAAiB,CAAC,QAAS,UAAW,UAAW,YAAa,UAC9DC,GAAgB,CAAC,kBAAmB,iBAAkB,kBAAmB,oBACzEC,GAAe,CAAC,uBAChBC,GAAgC,CAAC,QAAS,OAAQ,SAAU,MAAO,MAAO,gBAAiB,OAAQ,OAAQ,uBAEpGC,GAAmB,WAC9B,IAAM3I,EAAUlC,KACV8K,EAAUC,YAAc,qBAExB3C,EAAWzG,IACX0F,EAAUxF,GAAe,SAAC5C,GAAK,OAAKA,EAAM+D,IAAIqE,OAAO,IACrDH,EAAUrF,GAAe,SAAC5C,GAAK,OAAKA,EAAM+D,IAAIkE,OAAO,IA+B3D,SAAS8D,EAAgBC,EAAMhI,GAC7B,OAAQiE,GAEN,IAAK,2BAEH,OAAOV,EADK,CAAC,KAAM,KAAM,KAAM,KAAM,OACNvD,IACjC,IAAK,cAEH,OAAOmD,EADK,CAAC,EAAG,GAAI,GAAI,IAAK,KACAnD,IAE/B,IAAK,oBACH,OAAOqC,EAAoB2F,GAC7B,QAEE,OAAO3E,EADM,CAAC,OAAQ,OAAQ,QAAS,SACbrD,IAEhC,CAEA,OACEL,cAAA,OAAKF,UAAS,GAAAiB,OAAKzB,EAAQgH,iBAAgB,KAAAvF,OAAImH,EAAU5I,EAAQ6H,MAAQ,IAAKpH,SAC5EC,cAACM,IAAI,CAACC,UAAW,EAAGT,UAAWR,EAAQZ,KAAKqB,SAC1CH,eAACY,IAAW,CAACV,UAAWR,EAAQT,YAAYkB,SAAA,CAC1CH,eAAA,OAAKE,UAAWR,EAAQkH,MAAMzG,SAAA,CAC5BC,cAACS,IAAU,CAACC,QAAQ,UAASX,SAAC,oBAC9BC,cAAC6F,KAAO,CACNC,MAAM,iFAENC,UAAU,MAAKhG,SAEfC,cAACsI,KAAY,CAACxG,MAAM,SAASjB,SAAS,QAAQf,UAAWR,EAAQoH,wBAGrE1G,cAACuI,KAAM,CACL7H,QAAQ,WACRgH,MAAOpD,EACPkE,SAhEV,SAA6BC,GACD,wBAAvBA,EAAMC,OAAOhB,MACdlC,EAASJ,IAAY,IAErBI,EAASJ,IAAY,IAEvBI,EAASR,GAAWyD,EAAMC,OAAOhB,OACnC,EA0DUiB,WAAY,CAAE7I,UAAWR,EAAQsH,aACjCgC,UAAW,CAAEtJ,QAAS,CAAEuJ,KAAMvJ,EAAQuH,aAAe9G,SAEpD0H,GAAWrH,KAAI,SAAC4G,EAAQ3G,GACvB,OACEL,cAAC8I,KAAQ,CAAyBpB,MAAOV,EAAOU,MAAM3H,SACnDiH,EAAOR,OADKnG,EAAQ,UAI3B,MAEDoE,EAAQsE,OAAS,GAChBnJ,eAAA,OAAKE,UAAWR,EAAQwH,cAAc/G,SAAA,CACpCH,eAAA,OAAKE,UAAWR,EAAQ0H,OAAOjH,SAAA,CAC7BC,cAACgJ,KAAG,CAAClJ,UAAWR,EAAQ2H,eAAgBgC,MAAO,CAAEhL,gBAAiBmF,KAClEpD,cAAA,QAAMF,UAAWR,EAAQ4H,WAAWnH,SAAC,yBAtE1CiI,GAA8BkB,SAAS5E,IAyElC1E,eAAA,OAAKE,UAAWR,EAAQ0H,OAAOjH,SAAA,CAC7BC,cAACgJ,KAAG,CAAClJ,UAAWR,EAAQ2H,eAAgBgC,MAAO,CAAEhL,gBAAiBoF,KAClErD,cAAA,QAAMF,UAAWR,EAAQ4H,WAAWnH,SAAC,UAGxCgI,GAAamB,SAAS5E,GACrB1E,eAAA,OAAoBE,UAAWR,EAAQ0H,OAAOjH,SAAA,CAC5CC,cAACgJ,KAAG,CACFlJ,UAAWR,EAAQ2H,eACnBgC,MAAO,CACL1K,OAAQ,OACR+D,UAAU,MACV6G,gBAAiB,0DAGrBnJ,cAAA,QAAMF,UAAWR,EAAQ4H,WAAWnH,SAClCH,eAAA,OAAKqJ,MAAO,CAACrK,UAAU,OAAQL,OAAQ,QAAQwB,SAAA,CAC7CC,cAAA,OAAAD,SAAK,OACLC,cAAA,SACAA,cAAA,SACAA,cAAA,OAAAD,SAAK,gBAEF,UA5FvB,WACE,OAAQuE,GAEN,IAAK,2BACH,OAAOsD,GACT,IAAK,cACH,OAAOC,GACT,IAAK,oBACH,OAAOT,GACT,IAAK,sBACH,OAAOU,GACT,QACE,OAAOH,GAEb,CAiFcyB,GAAWhJ,KAAI,SAACiI,EAAMhI,GAAK,OACzBT,eAAA,OAA2BE,UAAWR,EAAQ0H,OAAOjH,SAAA,CACnDC,cAACgJ,KAAG,CAAClJ,UAAWR,EAAQ2H,eAAgBgC,MAAO,CAAEhL,gBAAiBmK,EAAgBC,EAAMhI,MACxFL,cAAA,QAAMF,UAAWR,EAAQ4H,WAAWnH,SAAEsI,MAAY,QAAAtH,OAFlCV,GAGZ,aASxB,ECtGagJ,GAAiBnF,aAAY,CACxC9E,KAAM,YACN+E,aApBmC,CACnCmF,YAAY,EACZC,oBAAqB,CAAEC,YAAa,aAAchD,MAAO,QAASiD,UAAW,oBAC7E/H,aAAa,EACbgI,cAAe,MACfhK,eAAgB,EAChBH,aAAc,EACdE,cAAe,EACfE,gBAAiB,EACjBgK,YAAa,EACbC,UAAW,EACXC,kBAAmB,GACnBC,gBAAiB,GACjBC,MAAO,GACPC,mBAAoB,GACpBC,SAAU,IAMVtF,SAAU,CACRuF,cAAe,SAAC7N,EAAOwI,GACrBxI,EAAMiN,WAAazE,EAAOC,OAC5B,EACAqF,uBAAwB,SAAC9N,EAAOwI,GAC9BxI,EAAMkN,oBAAsB1E,EAAOC,OACrC,EACAsF,eAAgB,SAAC/N,EAAOwI,GACtBxI,EAAMqF,YAAcmD,EAAOC,OAC7B,EACAuF,iBAAkB,SAAChO,EAAOwI,GACxBxI,EAAMqN,cAAgB7E,EAAOC,OAC/B,EACAwF,kBAAmB,SAACjO,EAAOwI,GACzBxI,EAAMqD,eAAiBmF,EAAOC,OAChC,EACAyF,gBAAiB,SAAClO,EAAOwI,GACvBxI,EAAMkD,aAAesF,EAAOC,OAC9B,EACA0F,iBAAkB,SAACnO,EAAOwI,GACxBxI,EAAMoD,cAAgBoF,EAAOC,OAC/B,EACA2F,mBAAoB,SAACpO,EAAOwI,GAC1BxI,EAAMsD,gBAAkBkF,EAAOC,OACjC,EACA4F,eAAgB,SAACrO,EAAOwI,GACtBxI,EAAMsN,YAAc9E,EAAOC,OAC7B,EACA6F,aAAc,SAACtO,EAAOwI,GACpBxI,EAAMuN,UAAY/E,EAAOC,OAC3B,EACA8F,qBAAsB,SAACvO,EAAOwI,GAC5BxI,EAAMwN,kBAAoBhF,EAAOC,OACnC,EACA+F,mBAAoB,SAACxO,EAAOwI,GAC1BxI,EAAMyN,gBAAkBjF,EAAOC,OACjC,EACAgG,SAAU,SAACzO,EAAOwI,GAChB,IAAMkF,EAAQlF,EAAOC,QAErBzI,EAAM0N,MAAQA,EACd1N,EAAMsN,YAAcI,EAAM,GAC1B1N,EAAMwN,kBAAoBE,EAAM,GAChC1N,EAAMuN,UAAYG,EAAMA,EAAMhB,OAAS,GACvC1M,EAAMyN,gBAAkBC,EAAMA,EAAMhB,OAAS,EAC/C,EACAgC,sBAAuB,SAAC1O,EAAOwI,GAC7BxI,EAAM2N,mBAAqBnF,EAAOC,OACpC,EACAkG,YAAa,SAAC3O,EAAOwI,GACnBxI,EAAM4N,SAAWpF,EAAOC,OAC1B,KAIGmG,GAgBH5B,GAAe/D,QAfjB4E,GAAae,GAAbf,cAEAE,IADsBa,GAAtBd,uBACcc,GAAdb,gBACAC,GAAgBY,GAAhBZ,iBACAC,GAAiBW,GAAjBX,kBACAC,GAAeU,GAAfV,gBACAC,GAAgBS,GAAhBT,iBACAC,GAAkBQ,GAAlBR,mBAGAG,IAFcK,GAAdP,eACYO,GAAZN,aACoBM,GAApBL,sBACAC,GAAkBI,GAAlBJ,mBACAC,GAAQG,GAARH,SACAC,GAAqBE,GAArBF,sBACAC,GAAWC,GAAXD,YAGa3B,MAAsB,QCtH/BjM,GAAYC,aAAW,SAACC,GAAK,MAAM,CACvC4N,gBAAiB,CACfzN,QAAS,OACTC,cAAe,SACfQ,SAAU,WACVC,IAAK,EACL6F,KAAM,EAEN,UAAW,CACT9F,SAAU,WAEV,iBAAkB,CAChBF,MAAO,QAET,0CAA2C,CACzCA,MAAO,UAIbU,KAAM,CAAElB,aAAc,kBACtBqB,YAAa,CACXpB,QAAS,OACTC,cAAe,SACf0D,OAAQ,MACRxC,UAAW,SAEbuM,eAAgB,CACd1N,QAAS,OACTC,cAAe,UAEjBkJ,YAAa,CACX/F,SAAU,kBACVD,WAAY,iBACZhC,UAAW,SAEbiI,WAAY,CACV,sBAAuB,CACrBhG,SAAU,SAGduK,aAAc,CACZ3N,QAAS,OACTgJ,UAAW,MACXhI,WAAY,OAEd4M,YAAa,CACXrN,MAAO,QAETsN,UAAW,CACTvE,UAAW,oBAEbI,MAAO,CAAC,EACT,I,8BCtCKoE,GAAiB,CAAC,MAAO,QAAS,UAE3BC,GAAkB,WAC7B,IAAMlM,EAAUlC,KACV8K,EAAUC,YAAc,qBAExB3C,EAAWzG,IACXyF,EAAUvF,GAAe,SAAC5C,GAAK,OAAKA,EAAM+D,IAAIoE,OAAO,IACrDqF,EAAoB5K,GAAe,SAAC5C,GAAK,OAAKA,EAAMmD,UAAUqK,iBAAiB,IAC/EC,EAAkB7K,GAAe,SAAC5C,GAAK,OAAKA,EAAMmD,UAAUsK,eAAe,IAC3EC,EAAQ9K,GAAe,SAAC5C,GAAK,OAAKA,EAAMmD,UAAUuK,KAAK,IAgB7D,OACE/J,cAAA,OAAKF,UAAS,GAAAiB,OAAKzB,EAAQ4L,gBAAe,KAAAnK,OAAImH,EAAU5I,EAAQ6H,MAAQ,IAAKpH,SAC3EC,cAACM,IAAI,CAACC,UAAW,EAAGT,UAAWR,EAAQZ,KAAKqB,SAC1CH,eAACY,IAAW,CAACV,UAAWR,EAAQT,YAAYkB,SAAA,CAC1CC,cAACS,IAAU,CAACC,QAAQ,KAAIX,SAAC,YACzBH,eAAA,OAAKE,UAAWR,EAAQ6L,eAAepL,SAAA,CACrCC,cAACS,IAAU,CAACgL,cAAY,EAAC/K,QAAQ,UAASX,SAAC,mBAG3CC,cAAC0L,KAAiB,CAAChE,MAAOlD,EAASmH,WAAS,EAACC,KAAK,QAAQpD,SAvBpE,SAAsBqD,EAAQC,GACX,OAAbA,GACFtG,EAASN,GAAW4G,GAExB,EAmB2F/L,SAC9EwL,GAAenL,KAAI,SAAC2L,EAAQ1L,GAAK,OAChCL,cAACgM,KAAY,CAA0BtE,MAAOqE,EAAQjK,MAAM,UAAS/B,SAClEgM,GAAM,WAAAhL,OADqBV,GAEf,SAIrBT,eAAA,OAAKE,UAAWR,EAAQ8L,aAAarL,SAAA,CACnCH,eAAA,OAAKE,UAAWR,EAAQ+L,YAAYtL,SAAA,CAClCC,cAACS,IAAU,CAACgL,cAAY,EAAC/K,QAAQ,UAASX,SAAC,eAG3CC,cAACuI,KAAM,CACL7H,QAAQ,WACRiI,WAAY,CAAE7I,UAAWR,EAAQsH,aACjCgC,UAAW,CAAEtJ,QAAS,CAAE2M,MAAO3M,EAAQgM,UAAWzC,KAAMvJ,EAAQuH,aAChEa,MAAOmC,EACPrB,SAnCd,SAA6BqD,EAAQK,GACnC1G,EAASoF,GAAqBsB,EAAMC,MAAMzE,OAC5C,EAkCc0E,WAAS,EAAArM,SAERgK,EACEsC,QAAO,SAACC,GAAI,OAAKA,GAAQxC,CAAe,IACxC1J,KAAI,SAACkM,EAAMjM,GACV,OACEL,cAAC8I,KAAQ,CAA+BpB,MAAO4E,EAAKvM,SACjDuM,GAAI,gBAAAvL,OADwBV,GAInC,SAGNL,cAACuM,KAAO,CAACC,YAAY,WAAWC,UAAQ,IACxC7M,eAAA,OAAKE,UAAWR,EAAQ+L,YAAYtL,SAAA,CAClCC,cAACS,IAAU,CAACgL,cAAY,EAAC/K,QAAQ,UAASX,SAAC,aAG3CC,cAACuI,KAAM,CACL7H,QAAQ,WACRiI,WAAY,CAAE7I,UAAWR,EAAQsH,aACjCgC,UAAW,CAAEtJ,QAAS,CAAE2M,MAAO3M,EAAQgM,UAAWzC,KAAMvJ,EAAQuH,aAChEa,MAAOoC,EACPtB,SAvDd,SAA2BqD,EAAQK,GACjC1G,EAASqF,GAAmBqB,EAAMC,MAAMzE,OAC1C,EAsDc0E,WAAS,EAAArM,SAERgK,EACEsC,QAAO,SAACC,GAAI,OAAKA,GAAQzC,CAAiB,IAC1CzJ,KAAI,SAACkM,EAAMjM,GACV,OACEL,cAAC8I,KAAQ,CAA6BpB,MAAO4E,EAAKvM,SAC/CuM,GAAI,cAAAvL,OADsBV,GAIjC,kBAQlB,E,8BC9GMjD,GAAYC,aAAW,SAACC,GAAK,MAAM,CACvCoP,oBAAqB,CACnBjP,QAAS,OACTC,cAAe,SACfQ,SAAU,WACVoD,OAAQ,EACRiF,MAAO,GAEV,I,oBCTM,SAASoG,GAAiBC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BH,EAAII,OAAS,kBAAMF,EAAQF,EAAK,EAChCA,EAAIK,QAAUF,CAChB,GACF,C,yBCMaG,GAAsB,WACjC,IAAM5N,EAAUlC,KAChB+P,EAA8BC,oBAAS,GAAMC,EAAAC,YAAAH,EAAA,GAAtC9L,EAAOgM,EAAA,GAAEE,EAAUF,EAAA,GAC1BG,EAAkCJ,oBAAS,GAAMK,EAAAH,YAAAE,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAExBjI,EAAWzG,IACXuF,EAAUrF,GAAe,SAAC5C,GAAK,OAAKA,EAAM+D,IAAIkE,OAAO,IACrDE,EAAUvF,GAAe,SAAC5C,GAAK,OAAKA,EAAM+D,IAAIoE,OAAO,IACrDqF,EAAoB5K,GAAe,SAAC5C,GAAK,OAAKA,EAAMmD,UAAUqK,iBAAiB,IAC/EC,EAAkB7K,GAAe,SAAC5C,GAAK,OAAKA,EAAMmD,UAAUsK,eAAe,IAC3EP,EAAsBtK,GAAe,SAAC5C,GAAK,OAAKA,EAAMmD,UAAU+J,mBAAmB,IACnFqE,EAAwB3O,GAAe,SAAC5C,GAAK,OAAKA,EAAMwR,MAAMD,qBAAqB,IAE/D,SAAAE,IA2GzB,OA3GyBA,EAAAC,YAAAC,cAAAC,MAA1B,SAAAC,IAAA,OAAAF,cAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAE0D,OADxDf,GAAW,GACX/H,EAAST,GAAY,CAAEX,YAAa,CAAC,EAAG,GAAIC,KAAM,KAAM+J,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGhDC,uBAAYC,SAASC,eAAe,uBAAwB,CAChEC,MAAO,EACPzQ,gBAAiB,QACjBD,MAAO,KACPgG,MAAO,MACNjI,KAAI,eAAAe,EAAAiR,YAAAC,cAAAC,MAAC,SAAAU,EAAOC,GAAG,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAzB,cAAAG,MAAA,SAAAuB,GAAA,cAAAA,EAAArB,KAAAqB,EAAApB,MAAA,OAMC,OALbO,EAASL,SAASmB,cAAc,UAChCb,EAAMD,EAAOe,WAAW,MAExBb,EAASP,SAASmB,cAAc,OAChCX,EAAgBrC,GAAiBoC,GACrCA,EAAO9O,IAAM2O,EAAIc,EAAApB,KAAA,EACXU,EAAc,KAAD,EAEJ,KACC,KACG,IACbC,EAAe,IAErBJ,EAAO7Q,MALQ,KAMf6Q,EAAOtQ,OAASsR,KAAuBZ,EAEvCH,EAAIgB,UAAY,QAChBhB,EAAIiB,SAAS,EAAG,EAAGlB,EAAO7Q,MAAO6Q,EAAOtQ,QAExCuQ,EAAIkB,KAAO,yBACXlB,EAAIgB,UAAY,QAChBhB,EAAIlQ,UAAY,SAChBkQ,EAAImB,SAAS,sBAADlP,OAAuBwI,EAAoBE,WAAaoF,EAAO7Q,MAAQ,EAAG,IACtF8Q,EAAIkB,KAAO,kBACXlB,EAAIlQ,UAAY,SAEVsQ,EAAgBzH,GAAWyI,MAAK,SAACC,GAAC,OAAKA,EAAEzI,QAAUpD,CAAO,IAAEkC,MAElEsI,EAAImB,SAAS,aAAef,EAAeL,EAAO7Q,MAAQ,EAAG,KAC7D8Q,EAAImB,SAAS,YAAczL,EAASqK,EAAO7Q,MAAQ,EAAG,KACtD8Q,EAAImB,SAAS,gBAAkBpG,EAAoB,OAASC,EAAiB+E,EAAO7Q,MAAQ,EAAG,KACjF,wBAAZsG,IACqC,IAAjCsJ,EAAsB7E,OACxB+F,EAAImB,SAAS,uBAAyBrC,EAAuBiB,EAAO7Q,MAAQ,EAAG,KACtE4P,EAAsB7E,OAAS,IAClCoG,EAAgBvB,EAAsBwC,KAAK,MACjDtB,EAAImB,SAAS,uBAAyBd,EAAeN,EAAO7Q,MAAQ,EAAG,OAG3E8Q,EAAIuB,UAAUtB,EAAQ,EAAGuB,IAAezB,EAAO7Q,MA9B/B,MA+BVoR,EAAYZ,SAASmB,cAAc,OACnCN,EAAmB1C,GAAiByC,GACtCE,EAAc,IAAGI,EAAAa,GAEbjM,EAAOoL,EAAApB,KACR,sBADQoB,EAAAa,GACW,GAInB,gBAJmBb,EAAAa,GAIN,GAIb,6BAJab,EAAAa,GAIa,GAG1B,wBAH0Bb,EAAAa,GAGL,oBAT+B,OADvDjB,EAAc,KACdF,EAAUnP,IAAG,uCAA0CyP,EAAAc,OAAA,oBAGP,OAAhDpB,EAAUnP,IAAM,gCAAgCyP,EAAAc,OAAA,oBAIA,OAAhDpB,EAAUnP,IAAM,gCAAgCyP,EAAAc,OAAA,oBAGC,OAAjDpB,EAAUnP,IAAM,iCAAiCyP,EAAAc,OAAA,oBAGJ,OAA7CpB,EAAUnP,IAAM,6BAA6ByP,EAAAc,OAAA,uBAGjC,sBAAZlM,EAA+B,CAAAoL,EAAApB,KAAA,gBAAAoB,EAAApB,KAAA,GAC7Be,EAAiB,KAAD,GACtBP,EAAIuB,UACFjB,EACAP,EAAO7Q,MAAQ,EAAIsR,EAAc,EACjCT,EAAOtQ,OAAS0Q,EAAe,GAC/BK,EACAL,GACAS,EAAApB,KAAA,wBAAAoB,EAAApB,KAAA,GAEIe,EAAiB,KAAD,GACtBP,EAAIuB,UACFjB,EACAP,EAAO7Q,MAAS6Q,EAAO7Q,MAAQ,EAC/B,EACAsR,EACAL,GACA,QAIyB,OAFrBM,EAAef,SAASmB,cAAc,OACtCH,EAAsB7C,GAAiB4C,GAC7CA,EAAatP,IAAMC,EAAQwP,EAAApB,KAAA,GACrBkB,EAAoB,KAAD,GAGQ,OAFjCV,EAAIuB,UAAUd,EAAc,GAAI,GAAI,IAAK,KAEnCE,EAASZ,EAAO4B,YAAWf,EAAApB,KAAA,GAC3BoC,KAASjB,EAAQ,mDAAmD,KAAD,oBAAAC,EAAAiB,OAAA,GAAAhC,EAAA,KAC1E,gBAAAiC,GAAA,OAAA9T,EAAA+T,MAAA,KAAAC,UAAE,CAAF,CA3FM,IA2FJ,KAAD,EAAA1C,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAmC,GAAAnC,EAAA,SAEFT,GAAa,GAAM,QAED,OAFCS,EAAAC,KAAA,GAEnBd,GAAW,GAAOa,EAAA2C,OAAA,6BAAA3C,EAAAuC,OAAA,GAAAzC,EAAA,wBAErBJ,EAAA+C,MAAA,KAAAC,UAAA,CAED,SAASE,IACPrD,GAAa,EACf,CAEA,OACE/N,eAAA,OAAKE,UAAWR,EAAQoN,oBAAoB3M,SAAA,CAC1CC,cAAC6F,KAAO,CAACC,MAAM,sBAAsBC,UAAU,OAAMhG,SACnDC,cAAA,QAAAD,SACEC,cAACgG,KAAU,CAAClE,MAAM,UAAUmE,QAvHuD,WAEjE,OAAA6H,EAAA+C,MAAC,KAADC,UAAA,EAqHgCG,SAAU5P,EAAQtB,SACjEsB,EAAUrB,cAACkR,KAAgB,CAACpP,MAAM,UAAU8J,KAAM,KAAS5L,cAACmR,KAAS,CAACtQ,SAAS,gBAItFb,cAACoR,KAAQ,CAACC,KAAM3D,EAAW4D,iBAAkB,IAAMC,QAASP,EAAiBjR,SAC3EC,cAACwR,KAAK,CAACD,QAASP,EAAkBS,SAAS,QAAQ9Q,GAAI,CAAE3C,MAAO,QAAS+B,SAAC,wEAMlF,E,6DCzJa2R,GAAQ,CACnB,aACA,eACA,kBAEA,gCAEA,cAEA,mBAEA,kBACA,gBACA,cACA,gBACA,gBACArK,MAAK,SAACC,EAAGC,GAAC,OAAKD,EAAEE,cAAcD,EAAE,IAEtBoK,GAA8B,GAAA5Q,OAAA6Q,YAAIF,IAAK,CAAE,MAAO,QAAOrK,MAAK,SAACC,EAAGC,GAAC,OAAKD,EAAEE,cAAcD,EAAE,IAExFsK,GAAqC,CAChD,eACA,cACA,mBACA,kBACA,MACA,cACA,gCACA,OAIWC,GAAc,CACzB,aACA,eACA,kBAEA,gCAEA,cAEA,mBACA,gBACA,gBACA,gBC5BI3N,GAA2B,CAC/B4N,mBAAoB,GACpBC,kBAAmB,GACnBC,cAAe,GACfC,mBAAoB,GACpBC,yBAA0B,GAC1BC,sBAAuB,SACvBC,wBAAyBR,GACzBS,qBAAsB,aACtBC,kCAAmC,GACnCC,sBAAuB,aACvBC,2BAA4B,mBAC5B7E,sBAAuB,IAGZ8E,GAAaxO,aAAY,CACpC9E,KAAM,QACN+E,gBACAQ,SAAU,CACRgO,sBAAuB,SAACtW,EAAOwI,GAC7BxI,EAAM0V,mBAAqBlN,EAAOC,OACpC,EACA8N,qBAAsB,SAACvW,EAAOwI,GAC5BxI,EAAM2V,kBAAoBnN,EAAOC,OACnC,EACA+N,iBAAkB,SAACxW,EAAOwI,GACxBxI,EAAM4V,cAAgBpN,EAAOC,OAC/B,EACAgO,yBAA0B,SAACzW,EAAOwI,GAChCxI,EAAM+V,sBAAwBvN,EAAOC,OACvC,EACAiO,2BAA4B,SAAC1W,EAAOwI,GAClCxI,EAAMgW,wBAA0BxN,EAAOC,OACzC,EACAkO,wBAAyB,SAAC3W,EAAOwI,GAC/BxI,EAAMiW,qBAAuBzN,EAAOC,OACtC,EACAmO,qCAAsC,SAAC5W,EAAOwI,GAC5CxI,EAAMkW,kCAAoC1N,EAAOC,OACnD,EACAoO,sBAAuB,SAAC7W,EAAOwI,GAC7BxI,EAAM6V,mBAAqBrN,EAAOC,OACpC,EACAqO,yBAA0B,SAAC9W,EAAOwI,GAChCxI,EAAMmW,sBAAwB3N,EAAOC,OACvC,EACAsO,8BAA+B,SAAC/W,EAAOwI,GACrCxI,EAAMoW,2BAA6B5N,EAAOC,OAC5C,EACAuO,4BAA6B,SAAChX,EAAOwI,GACnCxI,EAAM8V,yBAA2BtN,EAAOC,OAC1C,EACAwO,yBAA0B,SAACjX,EAAOwI,GAChCxI,EAAMuR,sBAAwB/I,EAAOC,OACvC,KAIGyO,GAaHb,GAAWpN,QAZbqN,GAAqBY,GAArBZ,sBACAG,GAAwBS,GAAxBT,yBACAF,GAAoBW,GAApBX,qBACAC,GAAgBU,GAAhBV,iBACAE,GAA0BQ,GAA1BR,2BACAC,GAAuBO,GAAvBP,wBACAC,GAAoCM,GAApCN,qCACAC,GAAqBK,GAArBL,sBACAC,GAAwBI,GAAxBJ,yBACAC,GAA6BG,GAA7BH,8BACAC,GAA2BE,GAA3BF,4BACAC,GAAwBC,GAAxBD,yBAGaZ,MAAkB,QCxF3BtV,GAAYC,aAAW,SAACC,GAAK,MAAM,CACvCgJ,iBAAkB,CAChB7I,QAAS,OACTC,cAAe,SACfQ,SAAU,WACVC,IAAK,EACLoI,MAAO,EACPjE,UAAW,QACXkR,SAAS,QAET,6BAA8B,CAC5B,EAEF,4BAA6B,CAC3BtV,SAAU,WACVoE,UAAW,MACXtE,MAAM,SAQVyV,SAAS,CACP,wBAAyB,CACvB5S,SAAU,OACVtC,OAAO,OACPT,QAAQ,QAIZ4V,SAAS,CACP,sBAAuB,CACrBzV,gBAAgB,OAChB6D,MAAM,MACNhE,QAAQ,QAIZY,KAAM,CAAElB,aAAc,kBACtBqB,YAAa,CACXpB,QAAS,OACTC,cAAe,SACf0D,OAAQ,OAEVuS,iBAAkB,CAChBlW,QAAS,OACTC,cAAe,SACfkW,UAAW,gCACXhV,UAAW,WAEbiV,eAAgB,CACdpW,QAAS,OACTC,cAAe,SACf0D,OAAQ,OAEV0S,cAAe,CACbrW,QAAS,OACTC,cAAe,SACf0D,OAAQ,OAEV2S,aAAc,CACZtW,QAAS,OACTC,cAAe,MACfiB,WAAY,SACZ8H,UAAW,OAEbC,iBAAkB,CAChBC,OAAQ,WAETH,MAAO,CACN/I,QAAS,OACTC,cAAe,MACfiB,WAAY,SACZ8H,UAAW,OAEbuN,oBAAqB,CACnBnT,SAAU,kBACVD,WAAY,iBACZ9C,QAAS,+BAEXmW,mBAAoB,CAClB,sBAAuB,CACrBpT,SAAU,SAGdqT,qBAAsB,CACpBrT,SAAU,kBACVD,WAAY,iBACZ9C,QAAS,gCACTqE,YAAa,oBAEfgS,sBAAuB,CACrB5V,OAAQ,OACRsC,SAAU,iBACV/C,QAAS,qBACTsW,WAAY,SACZlW,SAAU,WACVqI,MAAO,QAET8N,mBAAoB,CAClBtN,UAAW,oBAEbuN,oBAAqB,CACnB,sBAAuB,CACrBxW,QAAS,mBAEX,wBAAyB,CACvB+C,SAAU,SAGd0T,aAAc,CACZ9V,WAAY,OACZhB,QAAS,OACTC,cAAe,MACfC,IAAK,OACLY,OAAQ,QAER,6BAA8B,CAC5Bb,cAAe,SACfa,OAAQ,SAGZsP,MAAO,CACLtP,OAAQ,OACRP,MAAO,MAEP,6BAA8B,CAC5BA,MAAO,QAGT,4BAA6B,CAC3BA,MAAO,OACPO,OAAQ,UAGZiW,WAAY,CACVC,WAAY,UAEd3N,cAAe,CACbrJ,QAAS,OACTC,cAAe,SACfgX,UAAW,OACXC,SAAU,OACVpW,OAAQ,QACRZ,IAAK,MACLG,QAAS,cACT8W,WAAY,QAEdC,kBAAmB,CACjBpX,QAAS,OACTkB,WAAY,SACZ8H,UAAW,MACXqO,aAAc,OAEhBC,YAAa,CACXxW,OAAQ,OACRP,MAAO,OACPR,aAAc,MACdgW,SAAU,QAEZwB,kBAAmB,CACjB/W,gBAAiB,OACjBH,QAAS,MACTsE,OAAQ,iCAEV6S,eAAgB,CACdjX,MAAO,MACPR,aAAc,MACdS,gBAAiB,UACjBgD,UAAW,OAEX,6BAA8B,CAC5BjD,MAAO,OACPO,OAAQ,UAGZ2W,QAAS,CACPlX,MAAO,OACPO,OAAQ,OACRd,QAAS,OACTC,cAAe,UAEjByX,aAAc,CACZ1X,QAAS,OACTC,cAAe,MACf+I,UAAW,MACX9H,WAAY,WACZb,QAAS,gBACTsX,aAAc,kBAEhB7Q,eAAgB,CACd9G,QAAS,OACT4X,oBAAqB,kBACrBV,SAAU,OACVhX,IAAK,OACLG,QAAS,OACTmD,UAAW,QAEbqU,mBAAoB,CAClB7X,QAAS,OACTC,cAAe,MACf+I,UAAW,MACX8O,WAAY,UAEdC,eAAgB,CACdjX,OAAQ,OACRP,MAAO,OACPoE,OAAQ,iCACRqT,KAAM,QAERC,iBAAkB,CAChBjY,QAAS,OACTC,cAAe,SAEf,yBAA0B,CACxBiY,aAAc,aAGlBC,mBAAoB,CAClBnY,QAAS,OACTG,eAAgB,SAChBe,WAAY,SACZJ,OAAQ,QAEX,I,UCzNYsX,GAAoB,WAC/B,IAAMvW,EAAUlC,KAChB+P,EAA8BC,mBAAS,MAA9B0I,EAAmCxI,YAAAH,EAAA,GAAlB,GAC1BK,EAAwCJ,mBAAS,IAAGK,EAAAH,YAAAE,EAAA,GAA7CuI,EAAYtI,EAAA,GAAEuI,EAAevI,EAAA,GAC9BjI,EAAWzG,IACXkX,EAAWhX,GAAe,SAAC5C,GAAK,OAAKA,EAAMmD,UAAUyW,QAAQ,IAC7D/D,EAAqBjT,GAAe,SAAC5C,GAAK,OAAKA,EAAMwR,MAAMqE,kBAAkB,IAC7EtE,EAAwB3O,GAAe,SAAC5C,GAAK,OAAKA,EAAMwR,MAAMD,qBAAqB,IAMzF,SAASsI,EAAuBvT,GAC9B,IAAMgB,EAAawS,QAASxT,EAASyT,YAAczT,EAAS0T,WAAc,KAAKC,QAAQ,IAEvF,MAAM,GAANvV,OAAU4B,EAASvD,KAAI,cAAA2B,OAAmC,IAAtB4B,EAAS0T,WAAiB,EAAE,GAADtV,OAAI4B,EAAS0T,WAAU,KAAAtV,OAAI4C,EAAU,iBAAe,IACrH,CAGA,SAAS4S,EAA6BzZ,GAAiC,IAAD0Z,EAAA1Z,EAA7B2L,aAAK,IAAA+N,EAAG,KAAIA,EAAAC,EAAA3Z,EAAE4Z,IACrD,QADwD,IAAAD,GAAQA,EAI9D,OAFAjR,EAAS8N,GAAyB,UAClCwC,EAAkB,MAIpB,IACYpO,EACRe,EADFC,OAAUhB,MAGyB,KAAjCkG,EAAsB7E,QAAiBrB,EAAMqB,OAAS,KAIrC,IAAjBrB,EAAMqB,QACR+M,EAAkB,MAEpBtQ,EAAS8N,GAAyB5L,IACpC,CAOF,IAAMiP,EAAezE,EAAmB7F,QAAO,SAAC1J,GAAQ,OACtDA,EAASvD,KAAK8J,SAAS6M,EAAaa,gBAAkBjU,EAASvD,KAAK8J,SAAS6M,EAAac,cAAc,IAGxG,OACE7W,cAAA,OAAKF,UAAS,GAAAiB,OAAKzB,EAAQgH,kBAAmBvG,SAC5CC,cAACM,IAAI,CAACC,UAAW,EAAGT,UAAWR,EAAQZ,KAAKqB,SAC1CH,eAACY,IAAW,CAACV,UAAWR,EAAQqU,iBAAiB5T,SAAA,CAC/CH,eAAA,OAAKE,UAAWR,EAAQkH,MAAMzG,SAAA,CAC5BC,cAACS,IAAU,CAACC,QAAQ,UAASX,SAAC,oBAC9BC,cAAC6F,KAAO,CACNC,MAAM,4BACNC,UAAU,MAAKhG,SAEfC,cAACsI,KAAY,CAACxG,MAAM,SAASjB,SAAS,QAAQf,UAAWR,EAAQoH,wBAGnE9G,eAAC2I,KAAM,CACLuO,UAAQ,EAER3X,GAAG,gBACHuI,MAAOkG,EACPpF,SAAU,SAACC,GAAK,OAAK8N,EAA8B,CAAE9N,SAAQ,EAC7DwI,SAAuB,SAAbgF,EACVc,cAAY,EACZxF,QAAS,SAACyF,GAAC,OAAKhB,EAAgB,GAAG,EACnCiB,aACEjX,cAACkX,KAAM,CACPtL,KAAK,QACLlL,QAAQ,WACRZ,UAAWR,EAAQ6U,sBACnBlO,QAAS,kBAAMsQ,EAA8B,CAAEG,KAAK,GAAO,EAC3DzF,SAA2C,IAAjCrD,EAAsB7E,OAChCjH,MAAM,QAAO/B,SACd,UAID4I,WAAY,CAAE7I,UAAWR,EAAQ4U,sBACjCtL,UAAW,CAAEtJ,QAAS,CAAE2M,MAAO3M,EAAQ+U,mBAAoBxL,KAAMvJ,EAAQgV,sBACzE6C,YAAa,SAACC,GAAQ,OACA,IAApBA,EAASrO,OACP/I,cAACS,IAAU,CAACC,QAAQ,UAASX,SAAEqX,IAE/BpX,cAACS,IAAU,CAACC,QAAQ,UAASX,SAAA,GAAAgB,OAAKqW,EAASrO,OAAM,eAClD,EACFhJ,SAAA,CAEDC,cAACqX,KAAS,CACRzL,KAAK,QACL0L,WAAS,EACTC,YAAY,oBACZ/Q,MAAM,kBACN9F,QAAQ,WACR8W,WAAY,CACVC,eACEzX,cAAC0X,KAAc,CAACxZ,SAAS,QAAO6B,SAC9BC,cAAC2X,KAAU,MAGfV,aACEjX,cAAC0X,KAAc,CAACxZ,SAAS,MAAK6B,SAC5BC,cAACkX,KAAM,CACLtL,KAAK,QACLlL,QAAQ,WACRZ,UAAWR,EAAQ6U,sBACnBlO,QAAS,SAAC+Q,GACRT,EAA8B,CAAEG,KAAK,GACvC,EACAzF,SAA2C,IAAjCrD,EAAsB7E,OAChCjH,MAAM,QAAO/B,SACd,aAMPY,GAAI,CAAE3C,MAAM,MAAOmD,OAAO,SAC1BqH,SAAU,SAAAwO,GAAC,OAnFFvO,EAmFqBuO,GAlFtCY,sBACN5B,EAAgBvN,EAAMC,OAAOhB,OAF9B,IAAwBe,CAmFuB,EAChCoP,UAAW,SAACb,GAAC,OAAKA,EAAEc,iBAAiB,IAEtCnB,EAAavW,KAAI,SAACuC,EAAUtC,GAAK,OAChCT,eAACkJ,KAAQ,CAAqCpB,MAAO/E,EAASvD,KAAMU,UAAWR,EAAQmU,SAAS1T,SAAA,CAC9FC,cAAC+X,KAAQ,CAACC,eAAa,EAACrX,GAAI,CAAC7C,QAAS,MAAOqE,YAAY,OAAQ8V,QAASrK,EAAsBsK,QAAQvV,EAASvD,OAAS,IAC1HY,cAACmY,KAAY,CAACC,QAASlC,EAAuBvT,OAAe,sBAAA5B,OAF1BV,GAG1B,aAO3B,ECnIMgY,GAAU,CACdC,IAAK,MACL,gBAAiB,MACjBC,IAAK,MACLC,OAAQ,SACRC,MAAO,QACPC,KAAM,OAEN,2BAA4B,eAGjBC,GAAM,WACjB,IAAMrZ,EAAUlC,IACV8K,EAAUC,YAAc,qBAExB3C,EAAWzG,IACXb,EAAWe,GAAe,SAAC5C,GAAK,OAAKA,EAAM+D,IAAIlC,QAAQ,IACvDuG,EAAUxF,GAAe,SAAC5C,GAAK,OAAKA,EAAM+D,IAAIqE,OAAO,IACrDH,EAAUrF,GAAe,SAAC5C,GAAK,OAAKA,EAAM+D,IAAIkE,OAAO,IACrDC,EAAiBtF,GAAe,SAAC5C,GAAK,OAAKA,EAAM+D,IAAImE,cAAc,IACnEgF,EAAsBtK,GAAe,SAAC5C,GAAK,OAAKA,EAAMmD,UAAU+J,mBAAmB,IAEnFqE,EAAwB3O,GAAe,SAAC5C,GAAK,OAAKA,EAAMwR,MAAMD,qBAAqB,IACnFlJ,EAAWzF,GAAe,SAAC5C,GAAK,OAAKA,EAAM+D,IAAIsE,QAAQ,IAS7D,SAASkU,IACPpT,EAASP,GAAkB,MAC7B,CAkGA,OACEjF,cAACM,IAAI,CAACR,UAAWR,EAAQZ,KAAM6B,UAAW,EAAER,SAC1CH,eAACY,IAAW,CAACV,UAAWR,EAAQT,YAAYkB,SAAA,CAC1CH,eAACa,IAAU,CAACgL,cAAY,EAAC/K,QAAQ,KAAKE,WAAY,OAAOb,SAAA,CAAC,kBACxC,IAChBH,eAAA,QAAAG,SAAA,CAAM,MACDC,cAAA,KAAAD,SAAIwJ,EAAoBC,cAAgB,IAAED,EAAoB/C,YAGrE5G,eAAA,OAAKE,UAAWR,EAAQyC,WAAWhC,SAAA,CACjCC,cAAC6Y,gBAAa,CACZ/Y,UAAWR,EAAQ0C,cACnB7C,GAAG,sBACH,WAAS,GACT2Z,iBAAkB,CAChBC,OAAQ,EAAE,GAAI,EAAG,GACjBrK,MAAO,KACP3O,SAEFH,eAACoZ,gBAAa,CACZ3U,KAAMnG,EAASmG,KACf4U,OAAQ/a,EAASkG,YACjB8U,UAAW,SAACxR,IA9BxB,SAAyBA,GACvBlC,EAAST,GAAY2C,GACvB,CA6BcyR,CAAgBzR,EAClB,EAAE3H,SAAA,CAEFC,cAACoZ,SAAM,CAACC,OAAO,UAAUC,YAAa,KACtCtZ,cAACuZ,YAAS,CAACF,OAAO,UAAUC,YAAa,KACzCtZ,cAACwZ,cAAW,CAACC,UAAWA,EAAU1Z,SAC/B,SAAA2Z,GACC,OADaA,EAAXC,YACiBvZ,KAAI,SAACwZ,GAAS,IAADC,EAAAC,EAAAC,EACxBC,EAAcvV,EAAQyL,MAAK,SAAC+J,GAAI,OAAKA,EAAK7a,OAASwa,EAAIM,WAAWC,IAAI,IACtEC,EAA0B,OAAXJ,QAAW,IAAXA,OAAW,EAAXA,EAAaK,MAC9BC,EAAYlX,EACZmX,GAAgB,EAChBC,GAAc,EAElB,GAAIR,EAAa,CACf,IAAIS,EAAQ,EAEZ,OAAQnW,GACN,IAAK,cAEDgW,EADEN,EAAYS,MAAQ,EACVjX,EAAkBwW,EAAYS,OnBqCxC,UmBjCJ,MACF,IAAK,oBACH,IAAMrT,EAAYgT,EAAaM,SAASC,MACxCL,EAAY5X,EAAoB0E,EAAU,GAAGhI,MAC7C,MACF,IAAK,sBACH,IAAIwb,EAAiB,EACfC,EAAaT,EAAaM,SAASC,MACrCG,EAAa,GACjBD,EAAWE,SAAQ,SAACpY,GACdiL,EAAsB1E,SAASvG,EAASvD,OACxC0b,EAAWE,KAAKrY,GAClBiY,GAAkBjY,EAAS8X,KAC/B,IAEA,IAAIQ,EAAW,EAEf,GAAIH,EAAW/R,OAAS,EAAI,CAAC,IACMmS,EADPC,EAAAC,YACHN,GAAU,IAAjC,IAAAK,EAAAE,MAAAH,EAAAC,EAAAG,KAAAC,MAAmC,CACjCN,GADiBC,EAAAxT,MACI+S,KAEvB,CAAC,OAAAe,GAAAL,EAAAnE,EAAAwE,EAAA,SAAAL,EAAAM,GAAA,CACH,CACIzB,EAAYS,OAAS,IAAMK,EAAW/R,OAAS,OAC9B2S,IAAfZ,IACFR,ElBhMA,SAAC3W,GAC7B,IAAME,EAAI8X,SAAShY,GAWnB,OARmBiY,IAAOlN,MAAM,CAAC,UAAW,UAAW,UAAW,WAMpDmN,CAHehY,EAAI,KAGciY,KAGjD,CkBmL0CC,EAAiBd,EAASL,EAAgB,KAAKtE,QAAQ,KAG9D0D,EAAYS,OAAO,KAC1BH,EAAYjX,EACZkX,GAAgB,GAGlB,MAEF,IAAK,2BACL,IAAK,gBACL,IAAK,MACL,IAAK,MACL,IAAK,SACL,IAAK,OACHE,EAAsC,QAAjCZ,EAAGO,EAAa/B,GAAQ/T,WAAS,IAAAuV,OAAA,EAA9BA,EAAgCY,MACpCT,EAAYS,OAAS,IAAMA,EAAQ,GAEnCH,EADc,6BAAZhW,EACUV,EAAoBwW,EAAa/B,GAAQ/T,IAAUX,YAEnDD,EAAc0W,EAAa/B,GAAQ/T,IAAUX,YAE3D6W,GAAc,GACLR,EAAYS,OAAS,KAE5BH,EADc,6BAAZhW,EACUhB,EAEAD,EAEdkX,GAAgB,GAElB,MACF,IAAK,QAGHE,GAF6C,QAAhCX,EAAGM,EAAa/B,GAAc,aAAE,IAAAyB,OAAA,EAA7BA,EAA+BW,QACA,QAAjCV,EAAGK,EAAa/B,GAAe,cAAE,IAAA0B,OAAA,EAA9BA,EAAgCU,OAGjD,IAAIuB,EAAM5B,EAAa/B,GAAe,OAAG1U,WAAayW,EAAa/B,GAAc,MAAG1U,WACpFpH,QAAQC,IAAI,MAAO4d,EAAa/B,GAAe,OAAI2D,GAC/ChC,EAAYS,OAAS,IAAMA,EAAQ,GAEnCH,EADc,6BAAZhW,EACUV,EAAoBoY,GAEpBtY,EAAcsY,GAE5BxB,GAAc,GACLR,EAAYS,OAAS,KAE5BH,EADc,6BAAZhW,EACUhB,EAEAD,EAEdkX,GAAgB,GAMxB,CAEA,OACEva,cAACic,YAAS,CAERxC,UAAWG,EACXjT,OAAO,UACPuV,KAAM5B,EACNrU,QAAS,kBArP/B,SAAuB+T,QACD0B,IAAhB1B,GACFxU,EAAS6E,GAAiB2P,EAAY5a,MAE1C,CAiPqC+c,CAAcnC,EAAY,EACzCoC,aAAcxD,EACdyD,aAAc,kBA7OpC,SAA2Bvf,GAAkF,IAA/E8c,EAAG9c,EAAH8c,IAAKQ,EAAYtd,EAAZsd,aAAcJ,EAAWld,EAAXkd,YAAWsC,EAAAxf,EAAEyd,qBAAa,IAAA+B,GAAQA,EAAAC,EAAAzf,EAAE0d,mBAAW,IAAA+B,GAAQA,EAEhGrH,EAAU,CACd9V,KAFewa,EAAIM,WAAbC,KAGNqC,QAAS,CAAC,EACVjC,iBAGF,QAAoBmB,IAAhB1B,EACF,OAAQ1V,GACN,IAAK,cACHmY,OAAOC,OAAOxH,EAAS,CACrBsH,QAAS,CACPG,QAAS3C,EAAYS,MACrBmC,UAAWxC,EAAaM,SAASD,MACjCoC,IAAI,GAAD9b,OAAKqZ,EAAayC,IAAIlZ,WAAU,KACnC2U,IAAI,GAADvX,OAAKqZ,EAAa9B,IAAI3U,WAAU,KACnC4U,IAAI,GAADxX,OAAKqZ,EAAa7B,IAAI5U,WAAU,KACnC6U,OAAO,GAADzX,OAAKqZ,EAAa5B,OAAO7U,WAAU,KACzC+U,KAAK,GAAD3X,OAAKqZ,EAAa1B,KAAK/U,WAAU,KACrC8U,MAAM,GAAD1X,OAAKqZ,EAAa3B,MAAM9U,WAAU,KACvCyS,YAAY,GAADrV,OAAKqZ,EAAahE,YAAYzS,WAAU,QAGvD,MACF,IAAK,oBACeyW,EAAaM,SAASC,MAAMmC,MAAM,EAAG,GAC7C/B,SAAQ,SAACpY,GACjBuS,EAAQsH,QAAQ7Z,EAASvD,MAAQuD,EAAS8X,KAC5C,IACA,MACF,IAAK,gBACL,IAAK,MACL,IAAK,2BACL,IAAK,MACL,IAAK,SACL,IAAK,OACCD,IACFtF,EAAQsH,QAAQnE,GAAQ/T,IAAY,CAClCmW,MAAOL,EAAa/B,GAAQ/T,IAAUmW,MACtC9W,WAAW,GAAD5C,OAAKqZ,EAAa/B,GAAQ/T,IAAUX,WAAU,OAG5D,MACF,IAAK,QACH,GAAI6W,EAAa,CACf,IAAMuC,GAAiB3C,EAAa/B,GAAc,MAAGoC,OAAS,IAAML,EAAa/B,GAAe,OAAGoC,OAAS,GACtGuC,GACH5C,EAAa/B,GAAc,MAAG1U,YAAc,IAAMyW,EAAa/B,GAAe,OAAG1U,YAAc,GAClGuR,EAAQsH,QAAe,MAAI,CACzB/B,MAAOsC,EACPpZ,WAAW,GAAD5C,OAAKic,EAAmB1G,QAAQ,GAAE,KAEhD,CAEA,MACF,IAAK,sBACD,IAAIsE,EAAiB,EACfC,EAAaT,EAAaM,SAASC,MACrCG,EAAa,GAUjB,GATAD,EAAWE,SAAQ,SAACpY,GACbiL,EAAsB1E,SAASvG,EAASvD,OACzC0b,EAAWE,KAAKrY,GAClBiY,GAAkBjY,EAAS8X,KAC/B,IACAI,EAAWE,SAAQ,SAACpY,GACbiL,EAAsB1E,SAASvG,EAASvD,QAC3C8V,EAAQsH,QAAQ7Z,EAASvD,MAAK,GAAA2B,OAAM4B,EAAS8X,MAAK,MAAA1Z,QAAO4B,EAAS8X,MAAMG,EAAgB,KAAKtE,QAAQ,GAAE,OAC3G,IACIwE,EAAW/R,OAAS,EAAG,CACzB,IACiCkU,EAD7BhC,EAAW,EAAEiC,EAAA9B,YACMN,GAAU,IAAjC,IAAAoC,EAAA7B,MAAA4B,EAAAC,EAAA5B,KAAAC,MACEN,GADiBgC,EAAAvV,MACI+S,KACtB,OAAAe,GAAA0B,EAAAlG,EAAAwE,EAAA,SAAA0B,EAAAzB,GAAA,CACEzB,EAAYS,OAAO,IAAMK,EAAW/R,OAAS,IAC9CmM,EAAQsH,QAAQ,0BAAyB,GAAAzb,OAAMka,EAAQ,MAAAla,QAAOka,EAASL,EAAgB,KAAKtE,QAAQ,GAAE,OAE1G,EAQR9Q,EAASP,GAAkBiQ,GAC7B,CAwJwBiI,CAAmB,CACjBvD,MACAQ,eACAJ,cACAO,gBACAC,eACA,EAEJvR,MAAO,CACLmU,QAAS,CACPC,QAAS,QAEXC,MAAO,CACLjE,OAAQ,UACRC,YAAa,EACb+D,QAAS,QAEXE,QAAS,CACPrB,KAAM,UACN7C,OAAQ,UACRC,YAAa,EACb+D,QAAS,UA5BRzD,EAAI4D,OAiCf,GACF,UAIJtV,GACAtI,eAAAkB,WAAA,CAAAf,SAAA,CACEC,cAACwL,GAAe,IAChBxL,cAACiI,GAAgB,IAChBvD,EAAW1E,cAAC6V,GAAiB,IAAK,QAGvC7V,cAACuF,GAAkB,IACnBvF,cAACkN,GAAmB,OAErBhF,GACCtI,eAAA,OAAKE,UAAWR,EAAQ+C,YAAYtC,SAAA,CAClCC,cAACiI,GAAgB,IAChBvD,EAAW1E,cAAC6V,GAAiB,IAAK,KACnC7V,cAACwL,GAAe,OAGpBxL,cAACyd,IAAY,CAAA1d,SACVwE,GACC3E,eAAA,OAAKE,UAAWR,EAAQ2C,WAAWlC,SAAA,CACjCC,cAAA,QAAMF,UAAWR,EAAQiD,QAAQxC,SAAEwE,EAAenF,OAClDQ,eAAA,OAAKE,UAAWR,EAAQkD,YAAYzC,SAAA,CACjC0c,OAAOiB,KAAKnZ,EAAeiY,SAASpc,KAAI,SAACud,EAAKtd,GAC7C,OACET,eAAA,OAA8BE,UAAWR,EAAQmD,KAAK1C,SAAA,CACvC,sBAAZuE,GACCtE,cAAA,OACEF,UAAWR,EAAQwC,MACnBmH,MAAO,CACLhL,gBAAiByE,EAAoBib,MAI3C/d,eAAA,QAAAG,SAAA,CACEH,eAAA,QAAAG,SAAA,CAAO4d,EAAI,OAlNvB,CAAC,oBAAoB,sBAAsB,eAAezU,SAAS5E,GAsNrDtE,cAAA,QAAAD,SAAA,IAAAgB,OAAWwD,EAAeiY,QAAQmB,MAFlC3d,cAAA,QAAAD,SAAA,IAAAgB,OAAWwD,EAAeiY,QAAQmB,GAAKlD,MAAK,MAAA1Z,OAAKwD,EAAeiY,QAAQmB,GAAKha,WAAU,SAGxF,QAAA5C,OANgBV,MAOZ,WAAAU,OAhBYV,GAmBzB,IACgD,IAA/Coc,OAAOiB,KAAKnZ,EAAeiY,SAASzT,QACnC/I,cAAA,QAAAD,SAAOwE,EAAegW,cAAgB,KAAO,kCAS/D,ECvXMnd,GAAYC,aAAW,iBAAO,CAClCugB,OAAQ,CACNngB,QAAS,OACTC,cAAe,SACfiB,WAAY,SACZb,QAAS,eACT2I,UAAW,OACXrF,OAAQ,QAEVkE,QAAS,CACP7H,QAAS,OACTE,IAAK,MACLK,MAAO,OACPJ,eAAgB,eAEhB,4BAA6B,CAC3BF,cAAe,WAGnBmgB,OAAQ,CACN/b,MAAO,kBACPgc,cAAe,kBACfrf,WAAY,iBACZyD,cAAe,iBACf1E,aAAc,mBACdqD,SAAU,kBACVD,WAAY,iBACZrC,OAAQ,OAER,4BAA6B,CAC3BP,MAAO,SAGX+f,KAAM,CACJnf,UAAW,UAEd,I,8BClCYof,GAAS,WACpB,IAAM1e,EAAUlC,KAkBhB,OACEwC,eAAA,OAAKE,UAAWR,EAAQse,OAAO7d,SAAA,CAC7BH,eAAA,OAAKE,UAAWR,EAAQgG,QAAQvF,SAAA,CAC9BC,cAACkX,KAAM,CAACpX,UAAWR,EAAQue,OAAQnd,QAAQ,YAAYuF,QAnB7D,WACE3K,OAAO+V,KAAK,6BAA8B,SAC5C,EAiB0F4M,UAAWje,cAACke,KAAK,IAAIne,SAAC,YAG1GC,cAACkX,KAAM,CACLpX,UAAWR,EAAQue,OACnBnd,QAAQ,YACRuF,QArBR,WACE3K,OAAO+V,KAAK,2CAA4C,SAC1D,EAoBQ4M,UAAWje,cAACme,KAAM,IAAIpe,SACvB,kBAGDC,cAACkX,KAAM,CAACpX,UAAWR,EAAQue,OAAQnd,QAAQ,YAAYuF,QAtB7D,WACE3K,OAAO+V,KAAK,sCAAuC,SACrD,EAoByF4M,UAAWje,cAACme,KAAM,IAAIpe,SAAC,WAG1GC,cAACkX,KAAM,CAACpX,UAAWR,EAAQue,OAAQnd,QAAQ,YAAYuF,QArB7D,WACE3K,OAAO+V,KAAK,+BAAgC,SAC9C,EAmB0F4M,UAAWje,cAACoe,KAAO,IAAIre,SAAC,eAI9GH,eAACa,IAAU,CAACX,UAAWR,EAAQye,KAAKhe,SAAA,CAAC,sBACf,IACpBC,cAAA,KAAGqe,KAAK,yBAAyBC,IAAI,aAAa5V,OAAO,SAAQ3I,SAAC,2BAE7D,IAAI,iBACM,IACfC,cAAA,KAAGqe,KAAK,sBAAsBC,IAAI,aAAa5V,OAAO,SAAQ3I,SAAC,kBAMvE,ECvDawe,GAAe,6B,uCCCtBnhB,GAAYC,aAAW,SAACC,GAAK,MAAM,CACvCkhB,WAAY,CACV/gB,QAAS,OACT4X,oBAAqB,kBACrB3X,cAAe,SACfC,IAAK,OACLG,QAAS,OACT2gB,SAAU,qBAEV,4BAA6B,CAC3Brd,OAAQ,MACRtD,QAAS,OAGX,iBAAkB,CAChBN,aAAc,SAGlBkB,KAAM,CACJ6W,WAAY,SACZkJ,SAAU,qBACVhhB,QAAS,OACTC,cAAe,SAEf,iBAAkB,CAChBF,aAAc,QAGhB,6BAA8B,CAC5B+X,WAAY,YAGhBmJ,YAAa,CACXjhB,QAAS,OACTgJ,UAAW,MACX/I,cAAe,SACfE,eAAgB,gBAChBE,QAAS,4BAEXe,YAAa,CACXN,OAAQ,OACRd,QAAS,OACTC,cAAe,SACfiB,WAAY,UAEdggB,aAAc,CACZlhB,QAAS,OACTC,cAAe,MACfiB,WAAY,SACZ8H,UAAW,OACX7H,UAAW,UAEbggB,gBAAiB,CACfnhB,QAAS,OACTkB,WAAY,SACZ8H,UAAW,OAEd,ICzDKrJ,GAAYC,aAAW,SAACC,GAAK,MAAM,CACvCuhB,kBAAmB,CACjBphB,QAAS,OACTC,cAAe,SACfiB,WAAY,SACZJ,OAAQ,OACRugB,SAAU,QACV9gB,MAAO,0BAET6V,eAAgB,CACdpW,QAAS,OACTC,cAAe,SACf0D,OAAQ,MACRpD,MAAO,MAEP,6BAA8B,CAC5BA,MAAO,SAGX8V,cAAe,CACbrW,QAAS,OACTC,cAAe,SACf0D,OAAQ,MACRpD,MAAO,OACPW,WAAY,UAEdogB,YAAa,CACX/gB,MAAO,QAETghB,OAAQ,CACNhhB,MAAO,QAET4I,YAAa,CACX/F,SAAU,kBACVD,WAAY,iBACZ9C,QAAS,+BAEX+I,WAAY,CACV,sBAAuB,CACrBhG,SAAU,SAGd0T,aAAc,CACZ9V,WAAY,OACZhB,QAAS,OACTC,cAAe,MACfC,IAAK,OACLY,OAAQ,QACRP,MAAO,OAEP,4BAA6B,CAC3BO,OAAQ,UAGZsP,MAAO,CACLtP,OAAQ,OACRP,MAAO,QAETwW,WAAY,CACVC,WAAY,UAEd3N,cAAe,CACbrJ,QAAS,OACTC,cAAe,SACfgX,UAAW,OACXC,SAAU,OACVpW,OAAQ,QACRZ,IAAK,MACLG,QAAS,cACT8W,WAAY,QAEdC,kBAAmB,CACjBpX,QAAS,OACTkB,WAAY,SACZ8H,UAAW,MACXqO,aAAc,OAEhBC,YAAa,CACXxW,OAAQ,OACRP,MAAO,OACPR,aAAc,MACdgW,SAAU,QAEZ0B,QAAS,CACPzX,QAAS,OACTC,cAAe,SACfO,gBAAiB,OACjBH,QAAS,OACTsE,OAAQ,gCACRhB,OAAQ,QAEV+T,aAAc,CACZ1X,QAAS,OACTC,cAAe,MACf+I,UAAW,MACX9H,WAAY,YAEd4F,eAAgB,CACd9G,QAAS,OACTE,IAAK,MACL0X,oBAAqB,kBACrBrX,MAAO,QAEP,6BAA8B,CAC5BA,MAAO,SAGT,6BAA8B,CAC5BA,MAAO,SAGT,4BAA6B,CAC3BA,MAAO,SAGT,4BAA6B,CAC3BA,MAAO,UAGXsX,mBAAoB,CAClBC,WAAY,SACZ9X,QAAS,OACTC,cAAe,MACf+I,UAAW,OAEb+O,eAAgB,CACdjX,OAAQ,OACRP,MAAO,OACPoE,OAAQ,iCACRqT,KAAM,QAERC,iBAAkB,CAChBjY,QAAS,OACTC,cAAe,SAEf,yBAA0B,CACxBiY,aAAc,aAGnB,I,mGCxHKsJ,GAAkB,CACtB,CAAEzY,MAAO,oBAAqBkB,MAAO,SAAU8M,WAAY,yBAC3D,CAAEhO,MAAO,0BAA2BkB,MAAO,aAAc8M,WAAY,cAG1D0K,GAAoB,WAC/B,IAAM5f,EAAUlC,KAChB+P,EAAkCC,oBAAS,WAAO,IAAEC,EAAAC,YAAAH,EAAA,GAA7CgS,EAAS9R,EAAA,GAAE+R,EAAY/R,EAAA,GACxBgS,EAAalX,YAAc,qBAE3B3C,EAAWzG,IACXuK,EAAarK,GAAe,SAAC5C,GAAK,OAAKA,EAAMmD,UAAU8J,UAAU,IACjE6I,EAA2BlT,GAAe,SAAC5C,GAAK,OAAKA,EAAMwR,MAAMsE,wBAAwB,IACzFK,EAAwBvT,GAAe,SAAC5C,GAAK,OAAKA,EAAMwR,MAAM2E,qBAAqB,IACnFC,EAA6BxT,GAAe,SAAC5C,GAAK,OAAKA,EAAMwR,MAAM4E,0BAA0B,IAMnG,SAAS6M,IAAW,IAADC,EACjB,GAA8B,WAA1B/M,EACF,OAAOL,EAAyBM,GAGlC,IAAM+M,EAAa,CAAC,OAAQ,aAAc,kBACtCC,EAAoCC,gBAAoE,QAArDH,EAACpN,EAAyBM,UAA2B,IAAA8M,IAAI,IAYhH,OAXAE,EAAoCA,EAAkCrf,KAAI,SAAC6Z,GAQzE,OAPawC,OAAOiB,KAAKzD,GAAM5N,QAAO,SAAC8D,GAAC,OAAMqP,EAAWtW,SAASiH,EAAE,IAE/D4K,SAAQ,SAAC4C,GACT1D,EAAK5D,WAAW,IACjB4D,EAAK0D,GAAOxH,QAAS8D,EAAK0D,GAAO1D,EAAK5D,WAAc,KAAKC,QAAQ,IACrE,IAEO2D,CACT,GAGF,CA4IA,OAzGA0F,qBAAU,WACJrW,GACF8V,GAAa,WAAO,IAADQ,EAAAC,EACjB,OACE7f,cAAC8f,KAAmB,CAAC9hB,MAAM,OAAM+B,SAC/BH,eAACmgB,KAAQ,CAACC,KAAMV,IAAWW,WAAY,GAAGlgB,SAAA,CACxCC,cAACkgB,KAAa,CAACC,gBAAgB,QAC/BngB,cAACogB,KAAK,CAACC,QAAQ,OAAOC,SAAS,mBAAmBC,KAAM,CAAE1f,SAAU,MACpEb,cAACwgB,KAAK,CAAC/c,OAjEgB,WAA1B+O,OAAqCkJ,EAAY,CAAC,EAAG,KAiEtB+E,mBAAmB,EAAMC,eAAe,EAAM3gB,SACxEC,cAAC2gB,KAAK,CAACC,OAAQ,GAAI1iB,SAAS,aAAa4B,UAAWR,EAAQkV,WAAWzU,SACpEkf,GAAgB/O,MAAK,SAACnE,GAAM,OAAKA,EAAOrE,QAAU8K,CAAqB,IAAEhM,WAGxB,QAArDoZ,EAACzN,EAAyBM,UAA2B,IAAAmN,IAAI,IAAI7W,OAAS,GACrE/I,cAAC6gB,KAAK,CAACR,QAAQ,OAAO9hB,OAAQ,GAAI8a,OAAQ,sBAG5CrZ,cAAC8gB,KAAM,CACLtE,QAAS,SAACrQ,GACR,IAAQrH,EAAYqH,EAAZrH,QACR,OACE9E,cAAA,OAAKF,UAAWR,EAAQwH,cAAc/G,SACnC+E,EAAQ1E,KAAI,SAAC2gB,EAAO1gB,GACnB,IAAQggB,EAAmBU,EAAnBV,QAASve,EAAUif,EAAVjf,MACjB,OACElC,eAAA,OAA0CE,UAAWR,EAAQuV,kBAAkB9U,SAAA,CAC7EC,cAACgJ,KAAG,CAAClJ,UAAWR,EAAQyV,YAAa9L,MAAO,CAAEhL,gBAAiB6D,KAC/D9B,cAACS,IAAU,CAACC,QAAQ,UAASX,SAAEsgB,MAAqB,uBAAAtf,OAFrBV,GAKrC,KAGN,IAGFL,cAACghB,KAAY,CACX9iB,SAAU,CAAEiS,EAAGkP,EAAa,EAAI,GAAI4B,EAAG5B,EAAa,IAAM,KAC1D1Y,OAAQ,CAAEuV,KAAM3Y,GAChB2d,aAAc,CAAE7D,QAAS,OAAQjf,OAAQ,GACzCoe,QAAS,SAAA1f,GAAiC,IAA9BgI,EAAOhI,EAAPgI,QAASqc,EAAMrkB,EAANqkB,OAAQ3a,EAAK1J,EAAL0J,MAC3B,GAAgB,OAAZ1B,GAAoBqc,EAAQ,CAC9B,IAAMnB,EA3ExB,SAAwBxZ,EAAO1B,GAC7B,IAAMkb,EAAO7N,EAAyBM,GAA4BvC,MAAK,SAAC+J,GAAI,OAAKA,EAAK7a,OAASoH,CAAK,IAEpG,GAAIwZ,EAAM,CACR,IAAMoB,EAAc,GAiBpB,OAfAtc,EAAQiW,SAAQ,SAACd,GACf,GAAmB,IAAfA,EAAKvS,MAAT,CAIA,IAAM+S,EAAQuF,EAAK/F,EAAK7a,MACxBgiB,EAAYpG,KAAK,CACf5b,KAAM6a,EAAK7a,KACX0C,MAAOmY,EAAKnY,MACZ2Y,QACA9W,WAAYwS,QAASsE,EAAQuF,EAAK3J,WAAc,KAAKC,QAAQ,KAP/D,CASF,IAEA8K,EAAY/Z,MAAK,SAACC,EAAGC,GAAC,OAAKD,EAAElI,KAAKoI,cAAcD,EAAEnI,KAAK,IAChDgiB,CACT,CACF,CAoD+BC,CAAe7a,EAAO1B,GAEnC,OACElF,eAAA,OAAKE,UAAWR,EAAQ4V,QAAQnV,SAAA,CAC9BH,eAAA,OAAKE,UAAWR,EAAQ6V,aAAapV,SAAA,CACnCC,cAACS,IAAU,CAACC,QAAQ,KAAKE,WAAW,MAAKb,SACtCyG,IAEHxG,cAACS,IAAU,CAACC,QAAQ,YAAWX,SAAA,OAAAgB,OAAS+D,EAAQ,GAAGA,QAAQuR,iBAE5DvR,EAAQ,GAAGA,QAAQuR,WAAa,EAC/BrW,cAAA,OAAKF,UAAWR,EAAQiF,eAAexE,SACtCigB,EAAK5f,KAAI,SAAC6Z,EAAM5Z,GACf,OACET,eAAA,OAAsCE,UAAWR,EAAQgW,mBAAmBvV,SAAA,CAC1EC,cAACgJ,KAAG,CACFlJ,UAAWR,EAAQkW,eACnBvM,MAAO,CACLhL,gBAAiBgc,EAAKnY,SAG1BlC,eAAA,OAAKE,UAAWR,EAAQoW,iBAAiB3V,SAAA,CACvCC,cAACS,IAAU,CAACC,QAAQ,QAAQE,WAAW,MAAM0gB,gBAAY5F,EAAU3b,SAChEka,EAAK7a,OAERY,cAACS,IAAU,CACTI,SAAS,OACT0gB,QAAM,EACND,gBAAY5F,EAAU3b,SAAA,OAAAgB,OACfkZ,EAAKQ,SACdza,cAACS,IAAU,CACTI,SAAS,OACTygB,gBAAY5F,EAAU3b,SAAA,GAAAgB,OACnBkZ,EAAKtW,WAAU,YAChB,mBAAA5C,OApBqBV,GAuBjC,MACM,OAGd,CACA,OAAO,IACT,IAG8C,QAF9Cwf,EAEDjd,EAAoB6P,UAA2B,IAAAoN,OAAA,EAA/CA,EAAiDzf,KAAI,SAAC2L,EAAQ1L,GAAK,OAClEL,cAACwhB,KAAG,CAEFnB,QAAStU,EAAO3M,KAChBA,KAAM2M,EAAO3M,KACbqiB,QAAS,EACTvF,KAAMnQ,EAAOjK,OAAM,oBAAAf,OAJMV,GAKzB,QAKZ,GAGJ,GAAG,CAAC8R,EAA0BK,EAAuBC,EAA4B4M,IAG/Ezf,eAACY,IAAW,CAACV,UAAWR,EAAQuf,kBAAkB9e,SAAA,CAChDH,eAAA,OAAKE,UAAWR,EAAQuU,eAAe9T,SAAA,CACrCH,eAAA,OAAKE,UAAWR,EAAQwU,cAAc/T,SAAA,CACpCC,cAACS,IAAU,CAACC,QAAQ,UAAUZ,UAAWR,EAAQyf,YAAYhf,SAAC,sBAG9DC,cAACuI,KAAM,CACLzI,UAAWR,EAAQ0f,OACnBtX,MAAO+K,EACPjK,SAvHV,SAA+BC,GAC7BjD,EAAS4N,GAA8B3K,EAAMC,OAAOhB,OACtD,EAsHUiB,WAAY,CAAE7I,UAAWR,EAAQsH,aACjCgC,UAAW,CAAEtJ,QAAS,CAAEuJ,KAAMvJ,EAAQuH,aAAe9G,SAEpD+R,GAAY1R,KAAI,SAAC2L,EAAQ1L,GACxB,OACEL,cAAC8I,KAAQ,CAA2CpB,MAAOqE,EAAOhM,SACpD,qBAAXgM,EAAgC,gBAAkBA,GADtC1L,EAAQ,4BAI3B,SAGJT,eAAA,OAAKE,UAAWR,EAAQwU,cAAc/T,SAAA,CACpCC,cAACS,IAAU,CAACC,QAAQ,UAAUZ,UAAWR,EAAQyf,YAAYhf,SAAC,cAG9DC,cAACuI,KAAM,CACLzI,UAAWR,EAAQ0f,OACnBtX,MAAO8K,EACPhK,SA/IV,SAA8BC,GAC5BjD,EAAS2N,GAAyB1K,EAAMC,OAAOhB,OACjD,EA8IUiB,WAAY,CAAE7I,UAAWR,EAAQsH,aACjCgC,UAAW,CAAEtJ,QAAS,CAAEuJ,KAAMvJ,EAAQuH,aAAe9G,SAEpDkf,GAAgB7e,KAAI,SAAC2L,EAAQ1L,GAC5B,OACEL,cAAC8I,KAAQ,CAAuCpB,MAAOqE,EAAOrE,MAAM3H,SACjEgM,EAAOvF,OADKnG,EAAQ,wBAI3B,YAINL,cAAA,OAAKF,UAAWR,EAAQiV,aAAaxU,SACnCC,cAAA,OAAKF,UAAWR,EAAQuO,MAAO1O,GAAG,OAAMY,SACrCof,QAKX,ECzPM/hB,GAAYC,aAAW,SAACC,GAAK,MAAM,CACvCqW,iBAAkB,CAChBlW,QAAS,OACTC,cAAe,SACfiB,WAAY,SACZJ,OAAQ,OACRugB,SAAU,QACV9gB,MAAO,0BAET6V,eAAgB,CACdpW,QAAS,OACTC,cAAe,SACf0D,OAAQ,MACRpD,MAAO,MAEP,6BAA8B,CAC5BA,MAAO,SAGX8V,cAAe,CACbrW,QAAS,OACTC,cAAe,SACf0D,OAAQ,MACRpD,MAAO,OACPW,WAAY,UAEdqgB,OAAQ,CACNhhB,MAAO,QAET+V,aAAc,CACZtW,QAAS,OACTC,cAAe,MACfiB,WAAY,SACZ8H,UAAW,OAEbC,iBAAkB,CAChBC,OAAQ,WAEVqN,oBAAqB,CACnBnT,SAAU,kBACVD,WAAY,iBACZ9C,QAAS,+BAEXmW,mBAAoB,CAClB,sBAAuB,CACrBpT,SAAU,SAGdqT,qBAAsB,CACpBrT,SAAU,kBACVD,WAAY,iBACZ9C,QAAS,8BACTqE,YAAa,oBAEfgS,sBAAuB,CACrB5V,OAAQ,OACRsC,SAAU,kBACV/C,QAAS,qBACTsW,WAAY,SACZlW,SAAU,WACVqI,MAAO,QAET8N,mBAAoB,CAClBtN,UAAW,oBAEbuN,oBAAqB,CACnB,sBAAuB,CACrBxW,QAAS,mBAEX,wBAAyB,CACvB+C,SAAU,SAGd0T,aAAc,CACZ9V,WAAY,OACZhB,QAAS,OACTC,cAAe,MACfC,IAAK,OACLY,OAAQ,QACRP,MAAO,OAEP,4BAA6B,CAC3BO,OAAQ,UAGZsP,MAAO,CACLtP,OAAQ,OACRP,MAAO,QAETwW,WAAY,CACVC,WAAY,UAEd3N,cAAe,CACbrJ,QAAS,OACTC,cAAe,SACfgX,UAAW,OACXC,SAAU,OACVpW,OAAQ,QACRZ,IAAK,MACLG,QAAS,cACT8W,WAAY,QAEdC,kBAAmB,CACjBpX,QAAS,OACTkB,WAAY,SACZ8H,UAAW,MACXqO,aAAc,OAEhBC,YAAa,CACXxW,OAAQ,OACRP,MAAO,OACPR,aAAc,MACdgW,SAAU,QAEZ0B,QAAS,CACPzX,QAAS,OACTC,cAAe,SACfO,gBAAiB,OACjBH,QAAS,OACTsE,OAAQ,gCACRhB,OAAQ,QAEV+T,aAAc,CACZ1X,QAAS,OACTC,cAAe,MACf+I,UAAW,MACX9H,WAAY,YAEd4F,eAAgB,CACd9G,QAAS,OACTE,IAAK,MACL0X,oBAAqB,kBACrBrX,MAAO,QAEP,6BAA8B,CAC5BA,MAAO,SAGT,6BAA8B,CAC5BA,MAAO,SAGT,4BAA6B,CAC3BA,MAAO,SAGT,4BAA6B,CAC3BA,MAAO,UAGXsX,mBAAoB,CAClBC,WAAY,SACZ9X,QAAS,OACTC,cAAe,MACf+I,UAAW,OAEb+O,eAAgB,CACdjX,OAAQ,OACRP,MAAO,OACPoE,OAAQ,iCACRqT,KAAM,QAERC,iBAAkB,CAChBjY,QAAS,OACTC,cAAe,SAEf,yBAA0B,CACxBiY,aAAc,aAGnB,IC1KY+L,GAAkB,SAACC,GAC9B,OAAQA,GACN,IAAK,aACL,IAAK,kBACH,MAAO,mBAET,IAAK,eACL,IAAK,cACH,MAAO,mBAET,IAAK,kBACL,IAAK,4BACH,MAAO,mBAGT,IAAK,gCACL,IAAK,0DACH,MAAO,mBAGT,IAAK,cACL,IAAK,WACH,MAAO,UAGT,IAAK,aACH,MAAO,UAGT,IAAK,mBACL,IAAK,cACH,MAAO,mBAGT,IAAK,kBACL,IAAK,mBACH,MAAO,UAET,IAAK,gBACL,IAAK,eACH,MAAO,mBAET,IAAK,cACH,OAAOve,EAET,IAAK,gBACL,IAAK,eACH,MAAO,mBAET,IAAK,eACH,MAAO,mBAET,IAAK,4CACH,MAAO,UAET,IAAK,YACH,MAAO,UAET,IAAK,cACH,MAAO,UAET,IAAK,MACH,MAAO,OAET,IAAK,MACH,MAAO,UAET,QACE,MAAO,UAEb,ECtCM6b,GAAkB,CACtB,CAAEzY,MAAO,oBAAqBkB,MAAO,UACrC,CAAElB,MAAO,6BAA8BkB,MAAO,eAGnCka,GAAmB,WAC9B,IAAMtiB,EAAUlC,KAChB+P,EAAkCC,oBAAS,WAAO,IAAEC,EAAAC,YAAAH,EAAA,GAA7CgS,EAAS9R,EAAA,GAAE+R,EAAY/R,EAAA,GACxBgS,EAAalX,YAAc,qBAE3B3C,EAAWzG,IACXuK,EAAarK,GAAe,SAAC5C,GAAK,OAAKA,EAAMmD,UAAU8J,UAAU,IACjE4I,EAAqBjT,GAAe,SAAC5C,GAAK,OAAKA,EAAMwR,MAAMqE,kBAAkB,IAC7EI,EAAuBrT,GAAe,SAAC5C,GAAK,OAAKA,EAAMwR,MAAMyE,oBAAoB,IACjFC,EAAoCtT,GAAe,SAAC5C,GAAK,OAAKA,EAAMwR,MAAM0E,iCAAiC,IAEjH,SAAS2D,EAAuBvT,GAC9B,IAAMgB,EAAawS,QAASxT,EAASyT,YAAczT,EAAS0T,WAAc,KAAKC,QAAQ,IACvF,MAAM,GAANvV,OAAU4B,EAASvD,KAAI,cAAA2B,OAAmC,IAAtB4B,EAAS0T,WAAiB,EAAE,GAADtV,OAAI4B,EAAS0T,WAAU,KAAAtV,OAAI4C,EAAU,iBAAe,IAErH,CAMA,SAAS2b,IACP,IAAMU,EAAO9N,EAAmB7F,QAAO,SAAC1J,GAAQ,OAAK4P,EAAkCrJ,SAASvG,EAASvD,KAAK,IAE9G,GAA6B,WAAzBkT,EACF,OAAO0N,EAGT,IAAMR,EAAa,CAAC,OAAQ,aAAc,kBACtCqC,EAAyBnC,gBAAgBM,GAW7C,OAVA6B,EAAyBA,EAAuBzhB,KAAI,SAAC6Z,GAOnD,OANawC,OAAOiB,KAAKzD,GAAM5N,QAAO,SAAC8D,GAAC,OAAMqP,EAAWtW,SAASiH,EAAE,IAE/D4K,SAAQ,SAAC4C,GACZ1D,EAAK0D,GAAOxH,QAAS8D,EAAK0D,GAAO1D,EAAK5D,WAAc,KAAKC,QAAQ,GACnE,IAEO2D,CACT,GAGF,CA+BA,SAAS1D,EAA6BzZ,GAAiC,IAAD0Z,EAAA1Z,EAA7B2L,aAAK,IAAA+N,EAAG,KAAIA,EAAAC,EAAA3Z,EAAE4Z,IACrD,QADwD,IAAAD,GAAQA,EAE9DjR,EAASyN,GAAqC,SADhD,CAKA,IACYvL,EACRe,EADFC,OAAUhB,MAGqC,IAA7C6K,EAAkCxJ,QAAgBrB,EAAMqB,OAAS,GAIrEvD,EAASyN,GAAqCvL,GAV9C,CAWF,CAmGA,OAjGAiY,qBAAU,WACJrW,GACF8V,GAAa,WACX,OACEpf,cAAC8f,KAAmB,CAAC9hB,MAAM,OAAM+B,SAC/BH,eAACmgB,KAAQ,CAACC,KAAMV,IAAUvf,SAAA,CACxBC,cAACkgB,KAAa,CAACC,gBAAgB,QAC/BngB,cAACogB,KAAK,CAACC,QAAQ,OAAOC,SAAS,mBAAmBC,KAAM,CAAE1f,SAAU,MACpEb,cAACwgB,KAAK,CAAC/c,OA/Ee,WAAzB6O,OAAoCoJ,EAAY,CAAC,EAAG,KA+ErBgF,eAAe,EAAM3gB,SAC/CC,cAAC2gB,KAAK,CAACC,OAAQ,GAAI1iB,SAAS,aAAa4B,UAAWR,EAAQkV,WAAWzU,SACpEkf,GAAgB/O,MAAK,SAACnE,GAAM,OAAKA,EAAOrE,QAAU4K,CAAoB,IAAE9L,UAG5E0L,EAAmBnJ,OAAS,GAAK/I,cAAC6gB,KAAK,CAACR,QAAQ,OAAO9hB,OAAQ,GAAI8a,OAAQ,sBAE5ErZ,cAAC8gB,KAAM,CACLtE,QAAS,SAACrQ,GACR,IAAQrH,EAAYqH,EAAZrH,QACR,OACE9E,cAAA,OAAKF,UAAWR,EAAQwH,cAAc/G,SACnC+E,EAAQ1E,KAAI,SAAC2gB,EAAO1gB,GACnB,IAAQggB,EAAmBU,EAAnBV,QAASve,EAAUif,EAAVjf,MACjB,OACElC,eAAA,OAAyCE,UAAWR,EAAQuV,kBAAkB9U,SAAA,CAC5EC,cAACgJ,KAAG,CAAClJ,UAAWR,EAAQyV,YAAa9L,MAAO,CAAEhL,gBAAiB6D,KAC/D9B,cAACS,IAAU,CAACC,QAAQ,UAASX,SAAEsgB,MAAqB,sBAAAtf,OAFtBV,GAKpC,KAGN,IAGFL,cAACghB,KAAY,CACX9iB,SAAU,CAAEiS,EAAGkP,EAAa,EAAI,GAAI4B,EAAG5B,EAAa,IAAM,KAC1D1Y,OAAQ,CAAEuV,KAAM3Y,GAChB2d,aAAc,CAAE7D,QAAS,OAAQjf,OAAQ,GACzCoe,QAAS,SAAA9C,GAAiC,IAA9B5U,EAAO4U,EAAP5U,QAASqc,EAAMzH,EAANyH,OAAQ3a,EAAKkT,EAALlT,MAC3B,GAAgB,OAAZ1B,GAAoBqc,EAAQ,CAC9B,IAAMnB,EAlFxB,SAAwBxZ,EAAO1B,GAC7B,IAAMkb,EAAO9N,EAAmBhC,MAAK,SAAC+J,GAAI,OAAKA,EAAK7a,OAASoH,CAAK,IAElE,GAAIwZ,EAAM,CACR,IAAMoB,EAAc,GAiBpB,OAfAtc,EAAQiW,SAAQ,SAACd,GACf,GAAmB,IAAfA,EAAKvS,MAAT,CAIA,IAAM+S,EAAQuF,EAAK/F,EAAK7a,MACxBgiB,EAAYpG,KAAK,CACf5b,KAAM6a,EAAK7a,KACX0C,MAAOmY,EAAKnY,MACZ2Y,QACA9W,WAAYwS,QAASsE,EAAQuF,EAAK3J,WAAc,KAAKC,QAAQ,KAP/D,CASF,IAEA8K,EAAY/Z,MAAK,SAACC,EAAGC,GAAC,OAAKA,EAAEkT,MAAQnT,EAAEmT,KAAK,IACrC2G,CACT,CACF,CA2D+BC,CAAe7a,EAAO1B,GAEnC,OACElF,eAAA,OAAKE,UAAWR,EAAQ4V,QAAQnV,SAAA,CAC9BH,eAAA,OAAKE,UAAWR,EAAQ6V,aAAapV,SAAA,CACnCC,cAACS,IAAU,CAACC,QAAQ,KAAKE,WAAW,MAAKb,SACtCyG,IAEHxG,cAACS,IAAU,CAACC,QAAQ,YAAWX,SAAA,OAAAgB,OAAS+D,EAAQ,GAAGA,QAAQuR,iBAE5DvR,EAAQ,GAAGA,QAAQuR,WAAa,EACjCrW,cAAA,OAAKF,UAAWR,EAAQiF,eAAexE,SACpCigB,EAAK5f,KAAI,SAAC6Z,EAAM5Z,GACf,OACET,eAAA,OAAsCE,UAAWR,EAAQgW,mBAAmBvV,SAAA,CAC1EC,cAACgJ,KAAG,CACFlJ,UAAWR,EAAQkW,eACnBvM,MAAO,CACLhL,gBAAiBgc,EAAKnY,SAG1BlC,eAAA,OAAKE,UAAWR,EAAQoW,iBAAiB3V,SAAA,CACvCC,cAACS,IAAU,CAACC,QAAQ,QAAQE,WAAW,MAAM0gB,gBAAY5F,EAAU3b,SAChEka,EAAK7a,OAERY,cAACS,IAAU,CACTI,SAAS,OACT0gB,QAAM,EACND,gBAAY5F,EAAU3b,SAAA,OAAAgB,OACfkZ,EAAKQ,SACdza,cAACS,IAAU,CACTI,SAAS,OACTygB,gBAAY5F,EAAU3b,SAAA,GAAAgB,OACnBkZ,EAAKtW,WAAU,YAChB,mBAAA5C,OApBqBV,GAuBjC,MACM,OAGd,CACA,OAAO,IACT,IAGDqR,GAAMtR,KAAI,SAAC2L,EAAQ1L,GAAK,OACvBL,cAACwhB,KAAG,CAAkCnB,QAAStU,EAAQmQ,KAAMwF,GAAgB3V,IAAQ,mBAAAhL,OAAxDV,GAA2D,QAKlG,GAGJ,GAAG,CAAC6R,EAAoBI,EAAsBC,EAAmC8M,IAG/Ezf,eAACY,IAAW,CAACV,UAAWR,EAAQqU,iBAAiB5T,SAAA,CAC/CH,eAAA,OAAKE,UAAWR,EAAQuU,eAAe9T,SAAA,CACrCH,eAAA,OAAKE,UAAWR,EAAQyU,aAAahU,SAAA,CACnCC,cAACS,IAAU,CAACC,QAAQ,UAASX,SAAC,cAC9BC,cAAC6F,KAAO,CAACC,MAAM,2BAA2BC,UAAU,MAAKhG,SACvDC,cAACsI,KAAY,CAACxG,MAAM,SAASjB,SAAS,QAAQf,UAAWR,EAAQoH,wBAGrE9G,eAAA,OAAKE,UAAWR,EAAQwU,cAAc/T,SAAA,CACpCC,cAACuI,KAAM,CACLzI,UAAWR,EAAQ0f,OACnBtX,MAAO4K,EACP9J,SA5JV,SAA8BC,GAC5BjD,EAASwN,GAAwBvK,EAAMC,OAAOhB,OAChD,EA2JUiB,WAAY,CAAE7I,UAAWR,EAAQ0U,qBACjCpL,UAAW,CAAEtJ,QAAS,CAAEuJ,KAAMvJ,EAAQ2U,qBAAuBlU,SAE5Dkf,GAAgB7e,KAAI,SAAC2L,EAAQ1L,GAC5B,OACEL,cAAC8I,KAAQ,CAAsCpB,MAAOqE,EAAOrE,MAAM3H,SAChEgM,EAAOvF,OADKnG,EAAQ,uBAI3B,MAEFL,cAACuI,KAAM,CACLzI,UAAWR,EAAQ0f,OACnBlI,UAAQ,EACRpP,MAAO6K,EACP/J,SAAU,SAACC,GAAK,OAAK8N,EAA8B,CAAE9N,SAAQ,EAC7DsO,cAAY,EACZE,aACEjX,cAACkX,KAAM,CACLxW,QAAQ,WACRZ,UAAWR,EAAQ6U,sBACnBlO,QAAS,kBAAMsQ,EAA8B,CAAEG,KAAK,GAAO,EAC3DzF,SAAuD,IAA7CsB,EAAkCxJ,OAC5CjH,MAAM,QAAO/B,SACd,cAIH4I,WAAY,CAAE7I,UAAWR,EAAQ4U,sBACjCtL,UAAW,CAAEtJ,QAAS,CAAE2M,MAAO3M,EAAQ+U,mBAAoBxL,KAAMvJ,EAAQgV,sBACzE6C,YAAa,SAACC,GAAQ,OAAKpX,cAAA,OAAAD,SAAA,GAAAgB,OAASqW,EAASrO,OAAM,QAAAhI,OAAOmR,EAAmBnJ,OAAM,cAAkB,EAAChJ,SAErGmS,EAAmB9R,KAAI,SAACuC,EAAUtC,GAAK,OACtCT,eAACkJ,KAAQ,CAAqCpB,MAAO/E,EAASvD,KAAKW,SAAA,CACjEC,cAAC+X,KAAQ,CAACE,QAAS1F,EAAkC2F,QAAQvV,EAASvD,OAAS,IAC/EY,cAACmY,KAAY,CAACC,QAASlC,EAAuBvT,OAAa,sBAAA5B,OAFxBV,GAG1B,YAKnBL,cAAA,OAAKF,UAAWR,EAAQiV,aAAaxU,SACnCC,cAAA,OAAKF,UAAWR,EAAQuO,MAAO1O,GAAG,OAAMY,SACrCof,QAKX,EC7RM/hB,GAAYC,aAAW,SAACC,GAAK,MAAM,CACvCwkB,oBAAqB,CACnBrkB,QAAS,OACTC,cAAe,SACfiB,WAAY,SACZf,eAAgB,WAChBW,OAAQ,OACRugB,SAAU,QACV9gB,MAAO,0BAET8V,cAAe,CACbrW,QAAS,OACTC,cAAe,SACfM,MAAO,MACPW,WAAY,SAEZ,6BAA8B,CAC5BX,MAAO,SAGXghB,OAAQ,CACNhhB,MAAO,QAET+V,aAAc,CACZtW,QAAS,OACTC,cAAe,MACfiB,WAAY,SACZ8H,UAAW,MACXvE,cAAe,MACflE,MAAO,QAET0I,iBAAkB,CAChBC,OAAQ,WAEVC,YAAa,CACX/F,SAAU,kBACVD,WAAY,iBACZ9C,QAAS,8BACTqE,YAAa,oBAEf4f,aAAc,CACZxjB,OAAQ,OACRsC,SAAU,kBACV/C,QAAS,qBACTsW,WAAY,SACZlW,SAAU,WACVqI,MAAO,QAET+E,UAAW,CACTvE,UAAW,oBAEbF,WAAY,CACV,sBAAuB,CACrB/I,QAAS,mBAEX,wBAAyB,CACvB+C,SAAU,SAGd0T,aAAc,CACZ9V,WAAY,OACZhB,QAAS,OACTC,cAAe,MACfC,IAAK,OACLY,OAAQ,QACRP,MAAO,OAEP,4BAA6B,CAC3BO,OAAQ,UAGZsP,MAAO,CACLtP,OAAQ,OACRP,MAAO,QAETwW,WAAY,CACVC,WAAY,UAEd3N,cAAe,CACbrJ,QAAS,OACTC,cAAe,SACfgX,UAAW,OACXC,SAAU,OACVpW,OAAQ,QACRZ,IAAK,MACLG,QAAS,cACT8W,WAAY,QAEdC,kBAAmB,CACjBpX,QAAS,OACTkB,WAAY,SACZ8H,UAAW,MACXqO,aAAc,OAEhBC,YAAa,CACXxW,OAAQ,OACRP,MAAO,OACPR,aAAc,MACdgW,SAAU,QAEZ0B,QAAS,CACPzX,QAAS,OACTC,cAAe,SACfO,gBAAiB,OACjBH,QAAS,OACTsE,OAAQ,gCACRhB,OAAQ,QAEV+T,aAAc,CACZ1X,QAAS,OACTC,cAAe,MACf+I,UAAW,MACX9H,WAAY,YAEd4F,eAAgB,CACd9G,QAAS,OACTE,IAAK,MACL0X,oBAAqB,kBACrBrX,MAAO,QAEP,6BAA8B,CAC5BA,MAAO,SAGT,6BAA8B,CAC5BA,MAAO,SAGT,4BAA6B,CAC3BA,MAAO,SAGT,4BAA6B,CAC3BA,MAAO,UAGXsX,mBAAoB,CAClBC,WAAY,SACZ9X,QAAS,OACTC,cAAe,MACf+I,UAAW,OAEb+O,eAAgB,CACdjX,OAAQ,OACRP,MAAO,OACPoE,OAAQ,iCACRqT,KAAM,QAERC,iBAAkB,CAChBjY,QAAS,OACTC,cAAe,SAEf,yBAA0B,CACxBiY,aAAc,aAGnB,I,oBC5HYqM,GAAsB,WACjC,IAAM1iB,EAAUlC,KAChB+P,EAAkCC,oBAAS,WAAO,IAAEC,EAAAC,YAAAH,EAAA,GAA7CgS,EAAS9R,EAAA,GAAE+R,EAAY/R,EAAA,GACxBgS,EAAalX,YAAc,qBAE3B3C,EAAWzG,IACXsT,EAA0BpT,GAAe,SAAC5C,GAAK,OAAKA,EAAMwR,MAAMwE,uBAAuB,IACvFJ,EAAgBhT,GAAe,SAAC5C,GAAK,OAAKA,EAAMwR,MAAMoE,aAAa,IACnE3I,EAAarK,GAAe,SAAC5C,GAAK,OAAKA,EAAMmD,UAAU8J,UAAU,IACjEK,EAAc1K,GAAe,SAAC5C,GAAK,OAAKA,EAAMmD,UAAUmK,WAAW,IACnEC,EAAY3K,GAAe,SAAC5C,GAAK,OAAKA,EAAMmD,UAAUoK,SAAS,IAErE,SAAS0V,IACP,IAAME,EAAa,CAAC,OAAQ,SACxByC,EAAqBvC,gBAAgBzN,GAWzC,OAVAgQ,EAAqBA,EAAmB7hB,KAAI,SAAC6Z,GAO3C,OANawC,OAAOiB,KAAKzD,GAAM5N,QAAO,SAAC8D,GAAC,OAAMqP,EAAWtW,SAASiH,EAAE,IAE/D4K,SAAQ,SAAC4C,GACZ1D,EAAK0D,GAAOxH,QAAS8D,EAAK0D,GAAO1D,EAAKQ,MAAS,KAAKnE,QAAQ,GAC9D,IAEO2D,CACT,GAGF,CA2BA,SAASiI,EAAqBplB,GAAiC,IAAD0Z,EAAA1Z,EAA7B2L,aAAK,IAAA+N,EAAG,KAAIA,EAAAC,EAAA3Z,EAAE4Z,IACzCyL,EAAY,QADgC,IAAA1L,GAAQA,EAKpD0L,EADE9P,EAAwBtJ,SAAW4I,GAA4B5I,OACrD,GAEA4I,GAA4BmL,QAM1CqF,EADI1Z,EADFC,OAAUhB,MAKdya,EAAU9a,MAAK,SAACC,EAAGC,GAAC,OAAKD,EAAEE,cAAcD,EAAE,IAC3C/B,EAASuN,GAA2BoP,GACtC,CA0HA,OAxHAxC,qBAAU,WACR,GAAIrW,EAAY,CAId,IAHA,IACM8Y,EADM5T,SAASC,eAAe,OAClB4T,uBAAuB,iBAAiBC,EAAA,SAAAjiB,GAGxD,IAAMkiB,EAAWlQ,EAAwB1M,MAAK,SAAC+B,GAAK,OAAKiK,GAA4BuG,QAAQxQ,KAAWrH,CAAK,IAC7G+hB,EAAM/hB,GAAO4I,MAAMxL,QAAU8kB,EAAW,QAAU,MACpD,EAHSliB,EAAQ,EAAGA,EAAQ+hB,EAAMrZ,OAAQ1I,IAAOiiB,EAAAjiB,GAKjD+e,GAAa,WACX,OACEpf,cAAC8f,KAAmB,CAAC9hB,MAAM,OAAM+B,SAC/BH,eAAC4iB,KAAS,CAACxC,KAAMV,IAAUvf,SAAA,CACzBC,cAACkgB,KAAa,CAACC,gBAAgB,QAC/BngB,cAACogB,KAAK,CACJqC,UAAW,GACX/B,eAAe,EACf5iB,QAAS,CAAEkG,KAAM,GAAIuC,MAAO,IAC5B8Z,QAAQ,OACR5c,OAAQ,CAAC,UAAW,WACpB6c,SAAU,mBACVC,KAAM,CAAE1f,SAAU,MAEpBb,cAACwgB,KAAK,CAACiC,UAAW,EAAG3kB,QAAS,CAAEK,IAAK,GAAImD,OAAQ,IAAMof,eAAe,EAAM3gB,SAC1EC,cAAC2gB,KAAK,CAACC,OAAQ,GAAI1iB,SAAS,aAAa4B,UAAWR,EAAQkV,WAAWzU,SAAC,oBAIzEkS,EAAclJ,OAAS,GAAK/I,cAAC6gB,KAAK,CAACR,QAAQ,OAAO9hB,OAAQ,GAAI8a,OAAQ,sBAEvErZ,cAAC8gB,KAAM,CACLtE,QAAS,SAACrQ,GACR,IAAQrH,EAAYqH,EAAZrH,QACR,OACE9E,cAAA,OAAKF,UAAWR,EAAQwH,cAAc/G,SACnC+E,EAAQ1E,KAAI,SAAC2gB,EAAO1gB,GACnB,IAAQggB,EAAmBU,EAAnBV,QAASve,EAAUif,EAAVjf,MACjB,OACElC,eAAA,OAA6CE,UAAWR,EAAQuV,kBAAkB9U,SAAA,CAChFC,cAACgJ,KAAG,CAAClJ,UAAWR,EAAQyV,YAAa9L,MAAO,CAAEhL,gBAAiB6D,KAC/D9B,cAACS,IAAU,CAACC,QAAQ,UAASX,SAAEsgB,MAAqB,0BAAAtf,OAFlBV,GAKxC,KAGN,IAGFL,cAACghB,KAAY,CACX9iB,SAAU,CAAEiS,EAAGkP,EAAa,EAAI,GAAI4B,EAAG5B,EAAa,IAAM,KAC1D1Y,OAAQ,CAAEuV,KAAM3Y,GAChB2d,aAAc,CAAE7D,QAAS,OAAQjf,OAAQ,GACzCoe,QAAS,SAAA9C,GAAiC,IAA9B5U,EAAO4U,EAAP5U,QAASqc,EAAMzH,EAANyH,OAAQ3a,EAAKkT,EAALlT,MAC3B,GAAgB,OAAZ1B,GAAoBqc,EAAQ,CAC9B,IAAMnB,EArGxB,SAAwBxZ,EAAO1B,GAC7B,IAAMkb,EAAO/N,EAAc/B,MAAK,SAAC+J,GAAI,OAAKA,EAAK7a,OAASoH,CAAK,IAE7D,GAAIwZ,EAAM,CACR,IAAMoB,EAAc,GAiBpB,OAfAtc,EAAQiW,SAAQ,SAACd,GACf,GAAmB,IAAfA,EAAKvS,MAAT,CAIA,IAAM+S,EAAQuF,EAAK/F,EAAK7a,MACxBgiB,EAAYpG,KAAK,CACf5b,KAAM6a,EAAK7a,KACX0C,MAAOmY,EAAKnY,MACZ2Y,QACA9W,WAAYwS,QAASsE,EAAQuF,EAAKvF,MAAS,KAAKnE,QAAQ,KAP1D,CASF,IAEA8K,EAAY/Z,MAAK,SAACC,EAAGC,GAAC,OAAKA,EAAEkT,MAAQnT,EAAEmT,KAAK,IACrC2G,CACT,CACF,CA8E+BC,CAAe7a,EAAO1B,GAEnC,OACElF,eAAA,OAAKE,UAAWR,EAAQ4V,QAAQnV,SAAA,CAC9BH,eAAA,OAAKE,UAAWR,EAAQ6V,aAAapV,SAAA,CACnCC,cAACS,IAAU,CAACC,QAAQ,KAAKE,WAAW,MAAKb,SACtCyG,IAEHxG,cAACS,IAAU,CAACC,QAAQ,YAAWX,SAAA,OAAAgB,OAAS+D,EAAQ,GAAGA,QAAQ2V,YAE7Dza,cAAA,OAAKF,UAAWR,EAAQiF,eAAexE,SACpCigB,EAAK5f,KAAI,SAAC6Z,EAAM5Z,GACf,OACET,eAAA,OAAsCE,UAAWR,EAAQgW,mBAAmBvV,SAAA,CAC1EC,cAACgJ,KAAG,CACFlJ,UAAWR,EAAQkW,eACnBvM,MAAO,CACLhL,gBAAiBgc,EAAKnY,SAG1BlC,eAAA,OAAKE,UAAWR,EAAQoW,iBAAiB3V,SAAA,CACvCC,cAACS,IAAU,CAACC,QAAQ,QAAQE,WAAW,MAAM0gB,gBAAY5F,EAAU3b,SAChEka,EAAK7a,OAERY,cAACS,IAAU,CACTI,SAAS,OACT0gB,QAAM,EACND,gBAAY5F,EAAU3b,SAAA,OAAAgB,OACfkZ,EAAKQ,SACdza,cAACS,IAAU,CACTI,SAAS,OACTygB,gBAAY5F,EAAU3b,SAAA,GAAAgB,OACnBkZ,EAAKtW,WAAU,YAChB,mBAAA5C,OApBqBV,GAuBjC,QAIR,CACA,OAAO,IACT,IAGDsR,GAA4BvR,KAAI,SAAC2L,EAAQ1L,GAAK,OAC7CL,cAAC0iB,KAAI,CAEHrC,QAAStU,EACTuN,YAAa,EACbD,OAAQqI,GAAgB3V,GACxB4W,cAAY,EACZ9gB,KAAK,WACL+gB,UAAWjZ,IAAgBC,GAAyB,uBAAA7I,OANxBV,GAO5B,QAKZ,GACF,CAEF,GAAG,CAAC4R,EAAeI,EAAyBgN,IAG1Czf,eAACY,IAAW,CAACV,UAAWR,EAAQwiB,oBAAoB/hB,SAAA,CAClDH,eAAA,OAAKE,UAAWR,EAAQwU,cAAc/T,SAAA,CACpCH,eAAA,OAAKE,UAAWR,EAAQyU,aAAahU,SAAA,CACnCC,cAACS,IAAU,CAACC,QAAQ,UAASX,SAAC,eAC9BC,cAAC6F,KAAO,CACNC,MAAM,uLACNC,UAAU,MAAKhG,SAEfC,cAACsI,KAAY,CAACxG,MAAM,SAASjB,SAAS,QAAQf,UAAWR,EAAQoH,wBAGrE1G,cAACuI,KAAM,CACLzI,UAAWR,EAAQ0f,OACnBlI,UAAQ,EACRpP,MAAO2K,EACP7J,SAAU,SAACC,GAAK,OAAKyZ,EAAsB,CAAEzZ,SAAQ,EACrDsO,cAAY,EACZE,aACEjX,cAACkX,KAAM,CACLxW,QAAQ,WACRZ,UAAWR,EAAQyiB,aACnB9b,QAAS,kBAAMic,EAAsB,CAAExL,KAAK,GAAO,EACnD5U,MAAOuQ,EAAwBtJ,SAAW4I,GAA4B5I,OAAS,QAAU,UAAUhJ,SAElGsS,EAAwBtJ,SAAW4I,GAA4B5I,OAAS,YAAc,eAG3FJ,WAAY,CAAE7I,UAAWR,EAAQsH,aACjCgC,UAAW,CAAEtJ,QAAS,CAAE2M,MAAO3M,EAAQgM,UAAWzC,KAAMvJ,EAAQuH,aAChEsQ,YAAa,SAACC,GAAQ,OACpBpX,cAAA,OAAAD,SAAA,GAAAgB,OAASqW,EAASrO,OAAM,QAAAhI,OAAO4Q,GAA4B5I,OAAM,cAAkB,EACnFhJ,SAED4R,GAA4BvR,KAAI,SAACuhB,EAAMthB,GAAK,OAC3CT,eAACkJ,KAAQ,CAAyCpB,MAAOia,EAAK5hB,SAAA,CAC5DC,cAAC+X,KAAQ,CAACE,QAAS5F,EAAwB6F,QAAQyJ,IAAS,IAC5D3hB,cAACmY,KAAY,CAACC,QAASuJ,MAAQ,0BAAA5gB,OAFQV,GAG9B,SAIjBL,cAAA,OAAKF,UAAWR,EAAQiV,aAAaxU,SACnCC,cAAA,OAAKF,UAAWR,EAAQuO,MAAO1O,GAAG,MAAKY,SACpCof,QAKX,EClRM/hB,GAAYC,aAAW,SAACC,GAAK,MAAM,CACvCulB,kBAAmB,CACjBplB,QAAS,OACTC,cAAe,SACfiB,WAAY,SACZf,eAAgB,WAChBW,OAAQ,OACRugB,SAAU,QACV9gB,MAAO,0BAET8V,cAAe,CACbrW,QAAS,OACTC,cAAe,SACfM,MAAO,MACPW,WAAY,SAEZ,6BAA8B,CAC5BX,MAAO,SAGXghB,OAAQ,CACNhhB,MAAO,QAET4I,YAAa,CACX/F,SAAU,kBACVD,WAAY,iBACZ9C,QAAS,+BAEX+I,WAAY,CACV,sBAAuB,CACrBhG,SAAU,SAGdke,YAAa,CACX7c,cAAe,MACflE,MAAO,QAETuW,aAAc,CACZ9V,WAAY,OACZhB,QAAS,OACTC,cAAe,MACfC,IAAK,OACLY,OAAQ,QACRP,MAAO,OAEP,4BAA6B,CAC3BO,OAAQ,UAGZsP,MAAO,CACLtP,OAAQ,OACRP,MAAO,QAETwW,WAAY,CACVC,WAAY,UAEd3N,cAAe,CACbrJ,QAAS,OACTC,cAAe,SACfgX,UAAW,OACXC,SAAU,OACVpW,OAAQ,QACRZ,IAAK,MACLG,QAAS,cACT8W,WAAY,QAEdC,kBAAmB,CACjBpX,QAAS,OACTkB,WAAY,SACZ8H,UAAW,MACXqO,aAAc,OAEhBC,YAAa,CACXxW,OAAQ,OACRP,MAAO,OACPR,aAAc,MACdgW,SAAU,QAEZ0B,QAAS,CACPzX,QAAS,OACTC,cAAe,SACfO,gBAAiB,OACjBH,QAAS,OACTsE,OAAQ,gCACRhB,OAAQ,QAEV+T,aAAc,CACZ1X,QAAS,OACTC,cAAe,MACf+I,UAAW,MACX9H,WAAY,YAEd4F,eAAgB,CACd9G,QAAS,OACTE,IAAK,MACL0X,oBAAqB,kBACrBrX,MAAO,QAEP,6BAA8B,CAC5BqX,oBAAqB,kBACrBrX,MAAO,SAGT,6BAA8B,CAC5BA,MAAO,SAGT,6BAA8B,CAC5BA,MAAO,SAGT,4BAA6B,CAC3BA,MAAO,SAGT,4BAA6B,CAC3BA,MAAO,UAGXsX,mBAAoB,CAClBC,WAAY,SACZ9X,QAAS,OACTC,cAAe,MACf+I,UAAW,MAEX,6BAA8B,CAC5B8O,WAAY,UAGd,6BAA8B,CAC5BA,WAAY,UAGd,6BAA8B,CAC5BA,WAAY,UAGd,4BAA6B,CAC3BA,WAAY,WAGhBC,eAAgB,CACdjX,OAAQ,OACRP,MAAO,OACPoE,OAAQ,iCACRqT,KAAM,QAERC,iBAAkB,CAChBjY,QAAS,OACTC,cAAe,SAEf,yBAA0B,CACxBiY,aAAc,aAGnB,IC1IKsJ,GAAkB,CACtB,CAAEzY,MAAO,oBAAqBkB,MAAO,UACrC,CAAElB,MAAO,sBAAuBkB,MAAO,eAG5Bob,GAAoB,WAC/B,IAAMxjB,EAAUlC,KAChB+P,EAAkCC,oBAAS,WAAO,IAAEC,EAAAC,YAAAH,EAAA,GAA7CgS,EAAS9R,EAAA,GAAE+R,EAAY/R,EAAA,GACxBgS,EAAalX,YAAc,qBAE3B3C,EAAWzG,IACXqT,EAAwBnT,GAAe,SAAC5C,GAAK,OAAKA,EAAMwR,MAAMuE,qBAAqB,IACnFJ,EAAoB/S,GAAe,SAAC5C,GAAK,OAAKA,EAAMwR,MAAMmE,iBAAiB,IAC3EhI,EAAqB/K,GAAe,SAAC5C,GAAK,OAAKA,EAAMmD,UAAUwK,kBAAkB,IACjFV,EAAarK,GAAe,SAAC5C,GAAK,OAAKA,EAAMmD,UAAU8J,UAAU,IAMvE,SAASgW,IACP,GAA8B,WAA1BlN,EACF,OAAOJ,EAGT,IAAMwN,EAAa,CAAC,OAAQ,SACxBqC,EAAyBnC,gBAAgB1N,GAW7C,OAVA6P,EAAyBA,EAAuBzhB,KAAI,SAAC6Z,GAOnD,OANawC,OAAOiB,KAAKzD,GAAM5N,QAAO,SAAC8D,GAAC,OAAMqP,EAAWtW,SAASiH,EAAE,IAE/D4K,SAAQ,SAAC4C,GACZ1D,EAAK0D,GAAOxH,QAAS8D,EAAK0D,GAAO1D,EAAKQ,MAAS,KAAKnE,QAAQ,GAC9D,IAEO2D,CACT,GAGF,CAqIA,OAtGA0F,qBAAU,WACJrW,GACF8V,GAAa,WACX,OACEpf,cAAC8f,KAAmB,CAAC9hB,MAAM,OAAM+B,SAC/BH,eAACmgB,KAAQ,CAACC,KAAMV,IAAWW,WAAY,GAAGlgB,SAAA,CACxCC,cAACkgB,KAAa,CAACC,gBAAgB,QAC/BngB,cAACogB,KAAK,CAACC,QAAQ,OAAOC,SAAS,mBAAmBC,KAAM,CAAE1f,SAAU,MACpEb,cAACwgB,KAAK,CAAC/c,OA5DgB,WAA1B2O,OAAqCsJ,EAAY,CAAC,EAAG,KA4DtB+E,mBAAmB,EAAMC,eAAe,EAAM3gB,SACxEC,cAAC2gB,KAAK,CAACC,OAAQ,GAAI1iB,SAAS,aAAa4B,UAAWR,EAAQkV,WAAWzU,SACpEkf,GAAgB/O,MAAK,SAACnE,GAAM,OAAKA,EAAOrE,QAAU0K,CAAqB,IAAE5L,UAG7EwL,EAAkBjJ,OAAS,GAAK/I,cAAC6gB,KAAK,CAACR,QAAQ,OAAO9hB,OAAQ,GAAI8a,OAAQ,sBAE3ErZ,cAAC8gB,KAAM,CACLtE,QAAS,SAACrQ,GACR,IAAQrH,EAAYqH,EAAZrH,QACR,OACE9E,cAAA,OAAKF,UAAWR,EAAQwH,cAAc/G,SACnC+E,EAAQ1E,KAAI,SAAC2gB,EAAO1gB,GACnB,IAAQggB,EAAmBU,EAAnBV,QAASve,EAAUif,EAAVjf,MACjB,OACElC,eAAA,OAA0CE,UAAWR,EAAQuV,kBAAkB9U,SAAA,CAC7EC,cAACgJ,KAAG,CAAClJ,UAAWR,EAAQyV,YAAa9L,MAAO,CAAEhL,gBAAiB6D,KAC/D9B,cAACS,IAAU,CAACC,QAAQ,UAASX,SAAEsgB,MAAqB,uBAAAtf,OAFrBV,GAKrC,KAGN,IAGFL,cAACghB,KAAY,CACX9iB,SAAU,CAAEiS,EAAGkP,EAAa,EAAI,GAAI4B,EAAG5B,EAAa,IAAM,KAC1D1Y,OAAQ,CAAEuV,KAAM3Y,GAChB2d,aAAc,CAAE7D,QAAS,OAAQjf,OAAQ,GACzCoe,QAAS,SAAA1f,GAAiC,IAA9BgI,EAAOhI,EAAPgI,QAASqc,EAAMrkB,EAANqkB,OAAQ3a,EAAK1J,EAAL0J,MAC3B,GAAgB,OAAZ1B,GAAoBqc,EAAQ,CAC9B,IAAMnB,EArExB,SAAwBxZ,EAAO1B,GAC7B,IAAMkb,EAAOhO,EAAkB9B,MAAK,SAAC+J,GAAI,OAAKA,EAAK7a,OAASoH,CAAK,IAEjE,GAAIwZ,EAAM,CACR,IAAMoB,EAAc,GAiBpB,OAfAtc,EAAQiW,SAAQ,SAACd,GACf,GAAmB,IAAfA,EAAKvS,MAAT,CAIA,IAAM+S,EAAQuF,EAAK/F,EAAK7a,MACxBgiB,EAAYpG,KAAK,CACf5b,KAAM6a,EAAK7a,KACX0C,MAAOmY,EAAKnY,MACZ2Y,QACA9W,WAAYwS,QAASsE,EAAQuF,EAAKvF,MAAS,KAAKnE,QAAQ,KAP1D,CASF,IAEA8K,EAAY/Z,MAAK,SAACC,EAAGC,GAAC,OAAKA,EAAEnI,KAAKoI,cAAcF,EAAElI,KAAK,IAChDgiB,CACT,CACF,CA8C+BC,CAAe7a,EAAO1B,GAEnC,OACElF,eAAA,OAAKE,UAAWR,EAAQ4V,QAAQnV,SAAA,CAC9BH,eAAA,OAAKE,UAAWR,EAAQ6V,aAAapV,SAAA,CACnCC,cAACS,IAAU,CAACC,QAAQ,KAAKE,WAAW,MAAKb,SACtCyG,IAEHxG,cAACS,IAAU,CAACC,QAAQ,YAAWX,SAAA,OAAAgB,OAAS+D,EAAQ,GAAGA,QAAQ2V,YAE7Dza,cAAA,OAAKF,UAAWR,EAAQiF,eAAexE,SACpCigB,EAAK5f,KAAI,SAAC6Z,EAAM5Z,GACf,OACET,eAAA,OAAsCE,UAAWR,EAAQgW,mBAAmBvV,SAAA,CAC1EC,cAACgJ,KAAG,CACFlJ,UAAWR,EAAQkW,eACnBvM,MAAO,CACLhL,gBAAiBgc,EAAKnY,SAG1BlC,eAAA,OAAKE,UAAWR,EAAQoW,iBAAiB3V,SAAA,CACvCC,cAACS,IAAU,CAACC,QAAQ,QAAQE,WAAW,MAAM0gB,gBAAY5F,EAAU3b,SAChEka,EAAK7a,OAERY,cAACS,IAAU,CACTI,SAAS,OACT0gB,QAAM,EACND,gBAAY5F,EAAU3b,SAAA,OAAAgB,OACfkZ,EAAKQ,SACdza,cAACS,IAAU,CACTI,SAAS,OACTygB,gBAAY5F,EAAU3b,SAAA,GAAAgB,OACnBkZ,EAAKtW,WAAU,YAChB,mBAAA5C,OApBqBV,GAuBjC,QAIR,CACA,OAAO,IACT,IAGD2J,EAAmB5J,KAAI,SAAC2L,EAAQ1L,GAAK,OACpCL,cAACwhB,KAAG,CAEFnB,QAAStU,EACT3M,KAAM2M,EACN0V,QAAS,EACTvF,KAAMxZ,EAAoBqJ,IAAQ,oBAAAhL,OAJTV,GAKzB,QAKZ,GAGJ,GAAG,CAAC2R,EAAmBI,EAAuBiN,IAG5Czf,eAACY,IAAW,CAACV,UAAWR,EAAQujB,kBAAkB9iB,SAAA,CAChDH,eAAA,OAAKE,UAAWR,EAAQwU,cAAc/T,SAAA,CACpCC,cAACS,IAAU,CAACC,QAAQ,UAAUZ,UAAWR,EAAQyf,YAAYhf,SAAC,cAG9DC,cAACuI,KAAM,CACLzI,UAAWR,EAAQ0f,OACnBtX,MAAO0K,EACP5J,SAnHR,SAA8BC,GAC5BjD,EAASsN,GAAyBrK,EAAMC,OAAOhB,OACjD,EAkHQiB,WAAY,CAAE7I,UAAWR,EAAQsH,aACjCgC,UAAW,CAAEtJ,QAAS,CAAEuJ,KAAMvJ,EAAQuH,aAAe9G,SAEpDkf,GAAgB7e,KAAI,SAAC2L,EAAQ1L,GAC5B,OACEL,cAAC8I,KAAQ,CAAuCpB,MAAOqE,EAAOrE,MAAM3H,SACjEgM,EAAOvF,OADKnG,EAAQ,wBAI3B,SAGJL,cAAA,OAAKF,UAAWR,EAAQiV,aAAaxU,SACnCC,cAAA,OAAKF,UAAWR,EAAQuO,MAAO1O,GAAG,KAAIY,SACnCof,QAKX,E,qBC3Na4D,GAAa,CACxB,CACEjd,MAAO,0CACPkd,YAAa,CAAC,2BACd7jB,GAAI,QAEN,CACE2G,MAAO,yBACPkd,YAAa,CAAC,uDACd7jB,GAAI,OAEN,CACE2G,MAAO,2CACPkd,YAAa,CAAC,4BACd7jB,GAAI,QAEN,CACE2G,MAAO,wBACPkd,YAAa,GACb7jB,GAAI,OCjBF/B,GAAYC,aAAW,SAACC,GAAK,MAAM,CACvCoB,KAAM,CACJ6W,WAAY,UAEZ,iBAAkB,CAChB/X,aAAc,SAGlBqB,YAAa,CACXpB,QAAS,OACTC,cAAe,SACfiB,WAAY,SACZyC,OAAQ,OAEV2d,YAAa,CACXtgB,WAAY,QAEdmI,YAAa,CACX/F,SAAU,kBACVD,WAAY,iBACZhC,UAAW,QACX4U,SAAU,oBAEZ3M,WAAY,CACV,sBAAuB,CACrBhG,SAAU,SAGdyK,UAAW,CACTvE,UAAW,oBAEd,IC5BYkc,GAAgB,WAC3B,IAAM3jB,EAAUlC,KACVoI,EAAWzG,IACX2K,EAAgBzK,GAAe,SAAC5C,GAAK,OAAKA,EAAMmD,UAAUkK,aAAa,IACvEqI,EAAqB9S,GAAe,SAAC5C,GAAK,OAAKA,EAAMwR,MAAMkE,kBAAkB,IAC7EvN,EAAUvF,GAAe,SAAC5C,GAAK,OAAKA,EAAM+D,IAAIoE,OAAO,IACrDqF,EAAoB5K,GAAe,SAAC5C,GAAK,OAAKA,EAAMmD,UAAUqK,iBAAiB,IAC/EC,EAAkB7K,GAAe,SAAC5C,GAAK,OAAKA,EAAMmD,UAAUsK,eAAe,IAMjF,OACE9J,cAACM,IAAI,CAACR,UAAWR,EAAQZ,KAAM6B,UAAW,EAAER,SAC1CH,eAACY,IAAW,CAACV,UAAWR,EAAQT,YAAYkB,SAAA,CAC1CC,cAACS,IAAU,CAACC,QAAQ,KAAKE,WAAY,IAAKhC,UAAU,SAAQmB,SAAA,gBAAAgB,OACzCyD,EAAO,eAAAzD,OAAgC,QAAlB2I,EAA0B,gBAAkBA,EAAa,UAAA3I,OAC7F8I,GAAqB,OAAM,QAAA9I,OACtB+I,GAAmB,UAE5B9J,cAACS,IAAU,CAACX,UAAWR,EAAQyf,YAAare,QAAQ,YAAYE,WAAY,IAAIb,SAAC,kCAGjFH,eAAC2I,KAAM,CACL7H,QAAQ,WACRgH,MAAOgC,EACPlB,SAlBR,SAAsBC,GACpBjD,EAAS6E,GAAiB5B,EAAMC,OAAOhB,OACzC,EAiBQiB,WAAY,CAAE7I,UAAWR,EAAQsH,aACjCgC,UAAW,CAAEtJ,QAAS,CAAE2M,MAAO3M,EAAQgM,UAAWzC,KAAMvJ,EAAQuH,aAAe9G,SAAA,CAE/EC,cAAC8I,KAAQ,CAACpB,MAAM,MAAK3H,SAAC,QACrBgS,EAAmB3R,KAAI,SAACmC,EAASlC,GAChC,OACEL,cAAC8I,KAAQ,CAAyBpB,MAAOnF,EAAQxC,SAC9CwC,GADYlC,EAAQ,UAI3B,WAKV,EC9CMjD,GAAYC,aAAW,SAACC,GAAK,MAAM,CACvC4lB,oBAAqB,CACnBzlB,QAAS,OACTG,eAAgB,SAChBE,QAAS,WACTyX,WAAY,UACZ9O,UAAW,OAEX,4BAA6B,CAC3B/I,cAAe,SACf0D,OAAQ,QAGZyc,OAAQ,CACN/b,MAAO,kBACPgc,cAAe,kBACfrf,WAAY,iBACZyD,cAAe,iBACf1E,aAAc,mBAEd,4BAA6B,CAC3BQ,MAAO,SAGZ,I,wCC1Bc,OAA0B,oC,qBCAlC,SAASmlB,GAAmBC,GACjC,MAAO,CAAC,gCAADriB,OAC2BqiB,EAAI,mMACpC,gJACA,gLACA,gMACA,0NACA,kSACA,yOAEJ,CCcA,IAAMC,GAAkB,CACtB,mBACA,YACA,eACA,oBACA,WACA,WACA,WACA,YACA,YACA,uBACA,4BACA,wBACA,YACA,UACA,gBACA,cACA,eACA,aACA,aACA,WACA,eACA,kBACA,UACA,gBACA,iBACA,eACA,eACA,WACA,WACA,gBACA,2BACA,wBACA,sBACA,iBACA,gBACA,WACA,UACA,UACA,kBACA,gBACA,oBACA,MACA,iBACA,oBACA,aAGWC,GAAe,WAC1B,IAAMhkB,EAAUlC,KACViiB,EAAalX,YAAc,qBACjCgF,EAAoCC,oBAAS,GAAMC,EAAAC,YAAAH,EAAA,GAA5CoW,EAAUlW,EAAA,GAAEmW,EAAanW,EAAA,GAChCG,EAAoCJ,oBAAS,GAAMK,EAAAH,YAAAE,EAAA,GAA5CiW,EAAUhW,EAAA,GAAEiW,EAAajW,EAAA,GAChCkW,EAAkCvW,oBAAS,GAAMwW,EAAAtW,YAAAqW,EAAA,GAA1CjW,EAASkW,EAAA,GAAEjW,EAAYiW,EAAA,GAExBpe,EAAWzG,IACX2K,EAAgBzK,GAAe,SAAC5C,GAAK,OAAKA,EAAMmD,UAAUkK,aAAa,IACvEma,EAAW5kB,GAAe,SAAC5C,GAAK,OAAKA,EAAMmD,UAAUyK,QAAQ,IAC7DV,EAAsBtK,GAAe,SAAC5C,GAAK,OAAKA,EAAMmD,UAAU+J,mBAAmB,IACnF9J,EAAgBR,GAAe,SAAC5C,GAAK,OAAKA,EAAMmD,UAAUC,aAAa,IACvEoK,EAAoB5K,GAAe,SAAC5C,GAAK,OAAKA,EAAMmD,UAAUqK,iBAAiB,IAC/EC,EAAkB7K,GAAe,SAAC5C,GAAK,OAAKA,EAAMmD,UAAUsK,eAAe,IAC3ExF,EAAUrF,GAAe,SAAC5C,GAAK,OAAKA,EAAM+D,IAAIkE,OAAO,IACrDE,EAAUvF,GAAe,SAAC5C,GAAK,OAAKA,EAAM+D,IAAIoE,OAAO,IACrDiO,EAA6BxT,GAAe,SAAC5C,GAAK,OAAKA,EAAMwR,MAAM4E,0BAA0B,IAC7FzI,EAAqB/K,GAAe,SAAC5C,GAAK,OAAKA,EAAMmD,UAAUwK,kBAAkB,IACjF4D,EAAwB3O,GAAe,SAAC5C,GAAK,OAAKA,EAAMwR,MAAMD,qBAAqB,IAE/C,SAAAkW,IAyDzC,OAzDyCA,EAAA/V,YAAAC,cAAAC,MAA1C,SAAAU,IAAA,OAAAX,cAAAG,MAAA,SAAAuB,GAAA,cAAAA,EAAArB,KAAAqB,EAAApB,MAAA,OACsB,OAApBkV,GAAc,GAAM9T,EAAApB,KAAA,EACdyV,KACHC,IAAI,GAADjjB,OAAIwd,GAAY,kBACnBxiB,MAAK,SAACkoB,GAKL,IAJA,IAAIC,EAAU,GACVC,EAAMF,EAAIjE,KAAKoE,MAAM,MACrBhC,EAAQ,GAEH/hB,EAAQ,EAAGA,EAAQ8jB,EAAIpb,OAAQ1I,IAAS,CAC/C,IAAIgkB,EAAOF,EAAI9jB,GAAO+jB,MAAM,KAC5BhC,EAAMpH,KAAKqJ,EACb,CACAjC,EAAM,GAAGrH,SAAQ,SAACuJ,EAAMjkB,GACT,mBAATikB,IACFlC,EAAM,GAAG/hB,GAAS,MAEtB,IAEA,IAAK,IAAIA,EAAQ,EAAGA,EAAQgjB,GAAgBta,OAAQ1I,IAAS,CAC3D,IAAIkkB,EAAenC,EAAM,GAAGlK,QAAQmL,GAAgBhjB,IACpD6jB,EAAQlJ,KAAKuJ,EACf,CACAL,EAAQ7c,OACR6c,EAAQM,UAGR,IADA,IAAIC,EAAW,GACNC,EAAI,EAAGA,EAAItC,EAAMrZ,OAAQ2b,IAAK,CAErC,IADA,IAAIC,EAAM,GACDC,EAAI,EAAGA,EAAIxC,EAAMsC,GAAG3b,OAAQ6b,IAC9BV,EAAQhb,SAAS0b,IACpBD,EAAI3J,KAAKoH,EAAMsC,GAAGE,IAGtBH,EAASzJ,KAAK2J,EAChB,CAGA,IADA,IAAIE,EAAS,GACJD,EAAI,EAAGA,EAAIH,EAAS1b,OAAQ6b,IAAK,CAExC,IADA,IAAID,EAAM,GACDtkB,EAAQ,EAAGA,EAAQokB,EAASG,GAAG7b,OAAQ1I,IAC9CskB,GAAOF,EAASG,GAAGvkB,GACfA,IAAUokB,EAASG,GAAG7b,OAAS,IACjC4b,GAAO,KAGPC,IAAMH,EAAS1b,OAAS,IAC1B4b,GAAO,MAETE,GAAUF,CACZ,CAEAjU,KAASmU,EAAQ,0BACnB,IACCC,SAAQ,WACPtB,GAAc,EAChB,IAAG,KAAD,mBAAA9T,EAAAiB,OAAA,GAAAhC,EAAA,MACLkC,MAAA,KAAAC,UAAA,CAED,SAASiU,EAAW3B,GAClB,OAAO4B,KAAO5B,GAAM6B,OAAO,wBAC7B,CAEA,SAASC,EAAUpoB,GAA6C,IAA1C0R,EAAQ1R,EAAR0R,SAAU2W,EAAUroB,EAAVqoB,WAAYC,EAAStoB,EAATsoB,UAAWhC,EAAItmB,EAAJsmB,KACrD5U,EAAS6W,YAAY,IACrB7W,EAAS6V,KAAK,EAAGc,EAAa,GAAIC,EAAWD,EAAa,IAC1D3W,EAASuP,KAAK,sBAADhd,OAAuBqiB,EAAI,KAAKgC,EAAY,EAAGD,EAAa,GAAI,CAAEG,MAAO,UACxF,CAEA,SAASC,EAAU7L,GAAkG,IAAD8L,EAAA9L,EAA9Fva,UAAE,IAAAqmB,EAAG,KAAIA,EAAEC,EAAU/L,EAAV+L,WAAYjX,EAAQkL,EAARlL,SAAUkX,EAAMhM,EAANgM,OAAQC,EAAKjM,EAALiM,MAAKC,EAAAlM,EAAEmM,kBAAU,IAAAD,GAAQA,EAAAE,EAAApM,EAAEqM,cAAM,IAAAD,GAAQA,EAAEE,EAAMtM,EAANsM,OACxGP,EAAW1K,SAAQ,SAAC/T,EAAQ4d,GAC1B,IAAMqB,EAAWrB,EAAIc,EAAU,GACzBQ,EAAUC,KAAKC,MAAMxB,EAAIc,GAAUM,EAEzCxX,EAAS6X,aAAaR,EAAanjB,EAAoBsE,GAAU+e,EAASrE,GAAgB1a,GAAUA,EAAOlF,OAC3G0M,EAAS8X,OAAO,GAAKJ,EAASP,EAAQ,GAAKM,EAAS,IAAK,KAE9C,UAAP9mB,GAAkBylB,EAAI,IACd,IAANA,EACFpW,EAAS+X,aAAQ7K,EAAW,QAE5BlN,EAAS+X,aAAQ7K,EAAW,WAGhClN,EAASuP,KACP8H,GAAcE,EAAS/e,EAAOwf,WAAW,SAAK,KAAOxf,EAAO5H,KAC5D,GAAK8mB,EACLP,EAAQ,GAAKM,EAEjB,GACF,CAEqC,SAAAQ,IAyNpC,OAzNoCA,EAAA1Y,YAAAC,cAAAC,MAArC,SAAAyY,IAAA,IAAAC,EAAAvB,EAAAD,EAAA/B,EAAA9kB,EAAAsoB,EAAAC,EAAA3X,EAAAC,EAAA2X,EAAAxX,EAAAyX,EAAAC,EAAAC,EAAA5mB,EAAAyF,EAAAohB,EAAAC,EAAAxB,EAAA,OAAA3X,cAAAG,MAAA,SAAAiZ,GAAA,cAAAA,EAAA/Y,KAAA+Y,EAAA9Y,MAAA,OAE0D,GADxDoV,GAAc,GACdle,EAAST,GAAY,CAAEX,YAAa,CAAC,EAAG,GAAIC,KAAM,KAAM+iB,EAAA/Y,KAAA,IAGnDrE,EAAmBjB,QAAQ,GAAC,CAAAqe,EAAA9Y,KAAA,eAAA8Y,EAAA5W,OAAA,SACtBjU,QAAQC,IAAI,yCAAuC,OA6E5D,OA5EMmqB,EAAM,IAAIU,KAAM,CAAEC,KAAM,KAAMrC,OAAQ,OACtCG,EAAYuB,EAAIY,SAASC,SAASC,WAClCtC,EAAawB,EAAIY,SAASC,SAASE,YACnCtE,EAAO2B,EAAW,IAAI4C,OAGtBrpB,EAAO,IAAIspB,OACZ3nB,IAAMC,EACO,GAClBymB,EAAIkB,SAASvpB,EAAM,MAAO,GAAI,GADZ,GAC2B,IAG7CqoB,EAAItB,YAAY,IAAIkB,aAAQ7K,EAAW,QACvCiL,EAAI5I,KAAK,qBAADhd,OAAsBwI,EAAoBE,WAAa2b,EAAY,EAAG,GAAI,CAAEE,MAAO,WAC3FqB,EAAItB,YAAY,IAAIkB,aAAQ7K,EAAW,UACvCiL,EAAI5I,KAAKqF,EAAMgC,EAAY,EAAG,GAAI,CAAEE,MAAO,WAErCsB,EAAQzD,GAAmBC,GAGjCuD,EAAI5I,KAAK6I,EAAM,GAAI,GAAI,GAAI,CAAEtB,MAAO,UAAWxG,SAAUsG,EAAY,KACrEuB,EAAI5I,KAAK6I,EAAM,GAAI,GAAI,IAAK,CAAEtB,MAAO,UAAWxG,SAAUsG,EAAY,KACtEuB,EAAI5I,KAAK6I,EAAM,GAAI,GAAI,IAAK,CAC1BtB,MAAO,UACPxG,SAAUsG,EAAY,KAExBuB,EAAI5I,KAAK6I,EAAM,GAAI,GAAI,IAAK,CAAEtB,MAAO,UAAWxG,SAAUsG,EAAY,KACtEuB,EAAI5I,KAAK6I,EAAM,GAAI,GAAI,IAAK,CAAEtB,MAAO,UAAWxG,SAAUsG,EAAY,KACtEuB,EAAI5I,KAAK6I,EAAM,GAAI,GAAI,IAAK,CAAEtB,MAAO,UAAWxG,SAAUsG,EAAY,KACtEuB,EAAI5I,KAAK6I,EAAM,GAAI,GAAI,IAAK,CAAEtB,MAAO,UAAWxG,SAAUsG,EAAY,MAEhEyB,EAAS,IAAIe,OACZ3nB,IAAM6nB,GACbnB,EAAIkB,SAAShB,EAAQ,MAAO,IAAK,IAAK,GAAI,GAEpB,QAAlBnd,GACFid,EAAI5I,KAAK,yEAADhd,OACmE2I,EAAa,4CAAA3I,OAA2C8iB,EAASzT,KACxI,MACD,KACD,GACA,IACA,CAAEkV,MAAO,UAAWxG,SAAUsG,EAAY,KAI9CF,EAAW,CAAE1W,SAAUmY,EAAKxB,aAAYC,YAAWhC,SAGnDuD,EAAIoB,UACJ7C,EAAW,CAAE1W,SAAUmY,EAAKxB,aAAYC,YAAWhC,SAEnDuD,EAAItB,YAAY,IAAIkB,aAAQ7K,EAAW,QACvCiL,EAAI5I,KAAK,sBAADhd,OAAuBwI,EAAoBE,WAAa2b,EAAY,EAAG,GAAI,CAAEE,MAAO,WAC5FqB,EAAItB,YAAY,IAAIkB,aAAQ7K,EAAW,UACvCiL,EAAI5I,KAAK,UAADhd,OAAWtB,EAAa,YAAY2lB,EAAY,EAAG,GAAI,CAAEE,MAAO,WACxEqB,EAAI5I,KAAK,YAADhd,OAAa2I,GAAiB0b,EAAY,EAAG,GAAI,CAAEE,MAAO,WAClEqB,EAAI5I,KAAK,gBAADhd,OAAiB8I,EAAiB,QAAA9I,OAAO+I,GAAmBsb,EAAY,EAAG,GAAI,CAAEE,MAAO,WAChGqB,EAAItC,KAAK,GAAI,GAAIe,EAAY,GAAI,IAEjCuB,EAAIJ,aAAQ7K,EAAW,QACvBiL,EAAI5I,KAAK,MAAO,GAAI,IACpB4I,EAAIJ,aAAQ7K,EAAW,UACjBxM,EAAgBzH,GAAWyI,MAAK,SAACC,GAAC,OAAKA,EAAEzI,QAAUpD,CAAO,IAAEkC,MAClEmgB,EAAI5I,KAAK,aAADhd,OAAcmO,GAAiB,GAAI,KAC3CyX,EAAI5I,KAAK,YAADhd,OAAayD,GAAOzD,OAAe,QAAZyD,EAAoB,oBAAsB,IAAM,GAAI,KAEnFmiB,EAAItB,YAAY,GACD,wBAAZ/gB,IACoC,IAAjCsJ,EAAsB7E,OACtB4d,EAAI5I,KAAK,uBAAyBnQ,EAAuB,GAAI,KACtDA,EAAsB7E,OAAS,IAChCoG,EAAgBvB,EAAsBwC,KAAK,MACjDuW,EAAI5I,KAAK,yBAA2B5O,EAAe,GAAI,OAG7DiY,EAAA9Y,KAAA,GACMC,uBAAYC,SAASC,eAAe,uBAAwB,CAChEC,MAAO,EACPzQ,gBAAiB,QACjBD,MAAO,KACPgG,MAAO,MACNjI,KAAI,eAAAisB,EAAAja,YAAAC,cAAAC,MAAC,SAAAC,EAAOU,GAAG,IAAAC,EAAAC,EAAAC,EAAAC,EAAAiZ,EAAA,OAAAja,cAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAMC,OALXO,EAASL,SAASmB,cAAc,UAChCb,EAAMD,EAAOe,WAAW,MAExBb,EAASP,SAASmB,cAAc,OAChCX,EAAgBrC,GAAiBoC,GACvCA,EAAO9O,IAAM2O,EAAIR,EAAAE,KAAA,EACXU,EAAc,KAAD,EAEnBH,EAAO7Q,MAAQ,KACf6Q,EAAOtQ,OAAS,KAChBuQ,EAAIuB,UAAUtB,EAAQ,EAAG,EAAGF,EAAO7Q,MAAO6Q,EAAOtQ,QAE3C0pB,EAAMpZ,EAAO4B,UAAU,aAC7BkW,EAAIkB,SAASI,EAAK,MAAO,EAAG,IAAK7C,EAAW,KAC5C,yBAAAhX,EAAAuC,OAAA,GAAAzC,EAAA,KACD,gBAAA0C,GAAA,OAAAoX,EAAAnX,MAAA,KAAAC,UAAE,CAAF,CAhBM,IAgBJ,KAAD,GAEIgW,EAAY,IAAIc,MAClBtY,EAAc,MAAK8X,EAAA7W,GAEfjM,EAAO8iB,EAAA9Y,KACR,sBADQ8Y,EAAA7W,GACW,GAInB,gBAJmB6W,EAAA7W,GAIN,GAIb,6BAJa6W,EAAA7W,GAIa,GAG1B,wBAH0B6W,EAAA7W,GAGL,oBAT+B,OADvDjB,EAAc,OACdwX,EAAU7mB,IAAM,uCAAuCmnB,EAAA5W,OAAA,oBAGP,OAAhDsW,EAAU7mB,IAAM,gCAAgCmnB,EAAA5W,OAAA,oBAIA,OAAhDsW,EAAU7mB,IAAM,gCAAgCmnB,EAAA5W,OAAA,oBAGC,OAAjDsW,EAAU7mB,IAAM,iCAAiCmnB,EAAA5W,OAAA,oBAGJ,OAA7CsW,EAAU7mB,IAAM,6BAA6BmnB,EAAA5W,OAAA,oBAGjC,sBAAZlM,EACFqiB,EAAIkB,SAASf,EAAW,MAAO1B,EAAY,EAAI9V,EAAc,EAAG,IAAKA,EAAa,IAElFqX,EAAIkB,SAASf,EAAW,MAAO1B,EAAYA,EAAY,EAAI,GAAI9V,EAAa,IAIxEyX,EAAkBnkB,EAAoB6P,GACtCuU,EAAoBb,KAAK+B,KAAKnB,EAAgBhe,OAAS,GACvDke,EAAkBd,KAAK+B,KAAKle,EAAmBjB,OAAS,GAErD1I,EAAQ,EAAE,KAAD,QAAEA,EAAQ0iB,GAAWha,QAAM,CAAAqe,EAAA9Y,KAAA,UAmBO,OAlBlDqY,EAAIoB,UACJ7C,EAAW,CAAE1W,SAAUmY,EAAKxB,aAAYC,YAAWhC,SAE7Ctd,EAAK,GAAA/E,OAAMgiB,GAAW1iB,GAAOyF,OAAK/E,OACb,SAAzBgiB,GAAW1iB,GAAOlB,GAAa,KAAA4B,OAAQ0R,GAA+B,IAExEkU,EAAItB,YAAY,IAAIkB,aAAQ7K,EAAW,QACvCiL,EAAI5I,KAAKjY,EAAO,GAAI,IACpB6gB,EAAIJ,aAAQ7K,EAAW,UACvBiL,EAAItB,YAAY,IAChBsB,EAAI5I,KAAKgF,GAAW1iB,GAAO2iB,YAAY5S,KAAK,OAAOoW,WAAW,SAAK,MAAO,GAAI,IAC9EG,EAAItB,YAAY,IAChBsB,EAAI5I,KAAK,UAADhd,OAAWtB,EAAa,YAAY,GAAI,IAChDknB,EAAI5I,KAAK,YAADhd,OAAa2I,GAAiB,GAAI,IAC1Cid,EAAI5I,KAAK,gBAADhd,OAAiB8I,EAAiB,QAAA9I,OAAO+I,GAAmB,GAAI,IACxE6c,EAAI5I,KAAK,YAADhd,OAAayD,GAAOzD,OAAe,QAAZyD,EAAoB,oBAAsB,IAAM,GAAI,IAE7E0iB,EAAW1Y,SAASmB,cAAc,OAClCwX,EAAkBxa,GAAiBua,GAASE,EAAA9Y,KAAA,GAC7B6Z,KAAWC,MAAM5Z,SAASC,eAAesU,GAAW1iB,GAAOlB,IAAK,CAAEkpB,QAAS,UAAW,KAAD,GAA9F,OAAZnB,EAASjnB,IAAGmnB,EAAAkB,KAAAlB,EAAA9Y,KAAA,GACN6Y,EAAgB,KAAD,GACjBD,EAASlpB,OAAS,IACpB2oB,EAAIkB,SAASX,EAAU,MAAO,GAAI,KAElCP,EAAIkB,SAASX,EAAU,MAAO,GAAI,IAAK9B,EAAY,GAAI,KAGzDuB,EAAIN,aAAa,IAAK,IAAK,KACrBV,EAAQtG,EAAa,IAAM6H,EAASlpB,OAAS,IAAM,IAAM,IAC/D2oB,EAAI4B,KAAK,EAAG5C,EAAOP,EAAW,IAAK,KAEnCuB,EAAItB,YAAY,GACa,SAAzBtC,GAAW1iB,GAAOlB,GACpBomB,EAAW,CACT/W,SAAUmY,EACVlB,WAAY/T,GACZgU,OAAQ,EACRC,QACAK,OAAQ,IACRD,QAAQ,IAEuB,QAAzBhD,GAAW1iB,GAAOlB,GAC1BomB,EAAW,CACT/W,SAAUmY,EACVlB,WAAY9T,GACZ+T,OAAQ,EACRC,QACAK,OAAQ,IACRD,QAAQ,IAEwB,SAAzBhD,GAAW1iB,GAAOlB,GAC3BomB,EAAW,CACT/W,SAAUmY,EACVlB,WAAYsB,EACZrB,OAAQsB,EACRrB,QACAK,OAAQ,MAEwB,OAAzBjD,GAAW1iB,GAAOlB,IAC3BomB,EAAW,CACT/W,SAAUmY,EACVlB,WAAYzb,EACZ0b,OAAQuB,EACRtB,QACAK,OAAQ,GACRH,YAAY,IAEf,QApE4CxlB,IAAO+mB,EAAA9Y,KAAA,kBAuEtDqY,EAAI6B,KAAK,yBAAyBpB,EAAA9Y,KAAA,mBAAA8Y,EAAA/Y,KAAA,IAAA+Y,EAAAqB,GAAArB,EAAA,SAElCzZ,GAAa,GAAM,SAEE,OAFFyZ,EAAA/Y,KAAA,IAEnBqV,GAAc,GAAO0D,EAAArW,OAAA,+BAAAqW,EAAAzW,OAAA,GAAA+V,EAAA,4BAExBD,EAAA5V,MAAA,KAAAC,UAAA,CAED,SAASE,IACPrD,GAAa,EACf,CAEA,OACE/N,eAAA,OAAKE,UAAWR,EAAQ4jB,oBAAoBnjB,SAAA,CAC1CC,cAAC0oB,KAAa,CACZ5oB,UAAWR,EAAQue,OACnBnd,QAAQ,YACRuF,QAlUqF,WAEjD,OAAA6d,EAAAjT,MAAC,KAADC,UAAA,EAiUpCzP,QAASkiB,EACTtF,UAAWje,cAAC2oB,KAAU,IACtBC,gBAAgB,QAAO7oB,SACxB,0CAGDC,cAAC0oB,KAAa,CACZ5oB,UAAWR,EAAQue,OACnBnd,QAAQ,YACRuF,QAhPL,WAEoC,OAAAwgB,EAAA5V,MAAC,KAADC,UAAA,EA+O/BzP,QAASoiB,EACTxF,UAAWje,cAAC6oB,KAAY,IACxBD,gBAAgB,QAAO7oB,SACxB,sCAGDC,cAACoR,KAAQ,CAACC,KAAM3D,EAAW4D,iBAAkB,IAAMC,QAASP,EAAiBjR,SAC3EC,cAACwR,KAAK,CAACD,QAASP,EAAkBS,SAAS,QAAQ9Q,GAAI,CAAE3C,MAAO,QAAS+B,SAAC,wEAMlF,ECtZa+oB,GAAS,WACpB,IAAMxpB,EAAUlC,KACViiB,EAAalX,YAAc,qBACjCgF,EAAkCC,oBAAS,GAAMC,EAAAC,YAAAH,EAAA,GAA1CO,EAASL,EAAA,GAAEM,EAAYN,EAAA,GAC9BG,EAA0CJ,mBAAS,CACjD2b,MAAM,EACNC,KAAK,EACLC,MAAM,EACNC,IAAI,IACJzb,EAAAH,YAAAE,EAAA,GALK2b,EAAa1b,EAAA,GAAE2b,EAAgB3b,EAAA,GAOhCjJ,EAAUvF,GAAe,SAAC5C,GAAK,OAAKA,EAAM+D,IAAIoE,OAAO,IACrDqF,EAAoB5K,GAAe,SAAC5C,GAAK,OAAKA,EAAMmD,UAAUqK,iBAAiB,IAC/EC,EAAkB7K,GAAe,SAAC5C,GAAK,OAAKA,EAAMmD,UAAUsK,eAAe,IAC3EJ,EAAgBzK,GAAe,SAAC5C,GAAK,OAAKA,EAAMmD,UAAUkK,aAAa,IACvE+I,EAA6BxT,GAAe,SAAC5C,GAAK,OAAKA,EAAMwR,MAAM4E,0BAA0B,IAC7FlJ,EAAsBtK,GAAe,SAAC5C,GAAK,OAAKA,EAAMmD,UAAU+J,mBAAmB,IACnFS,EAAqB/K,GAAe,SAAC5C,GAAK,OAAKA,EAAMmD,UAAUwK,kBAAkB,IAEvF,SAASub,EAAUzoB,GASf,IARF2oB,EAAU3oB,EAAV2oB,WACA4D,EAAOvsB,EAAPusB,QACA3D,EAAM5oB,EAAN4oB,OACA4D,EAAYxsB,EAAZwsB,aACAC,EAASzsB,EAATysB,UAASC,EAAA1sB,EACT+oB,kBAAU,IAAA2D,GAAQA,EAAAC,EAAA3sB,EAClBipB,cAAM,IAAA0D,GAAQA,EACdzD,EAAMlpB,EAANkpB,OAEAP,EAAW1K,SAAQ,SAAC/T,EAAQ4d,GAC1B,IAAMqB,EAAWrB,EAAIc,EAAU,GACzBQ,EAAUC,KAAKC,MAAMxB,EAAIc,GAAUM,EAEzCqD,EAAQvZ,UAAY+V,EAAanjB,EAAoBsE,GAAU+e,EAASrE,GAAgB1a,GAAUA,EAAOlF,MACzGunB,EAAQK,YACRL,EAAQM,IAAI,IAAMzD,EAASqD,EAAYD,EAAerD,EAAS,EAAG,EAAG,EAAIE,KAAKyD,IAC9EP,EAAQnN,OACRmN,EAAQQ,YACRR,EAAQvZ,UAAY,QACpBuZ,EAAQpZ,SACN4V,GAAcE,EAAS/e,EAASA,EAAO5H,KACvC,IAAM8mB,EACNqD,EAAY,EAAID,EAAerD,EAEnC,GACF,CAEkC,SAAA6D,IAiHjC,OAjHiCA,EAAA/b,YAAAC,cAAAC,MAAlC,SAAAU,EAAmClG,EAAO/J,GAAI,IAAAmQ,EAAAC,EAAAjB,EAAAqZ,EAAAC,EAAA4C,EAAAhD,EAAAC,EAAAC,EAAA3oB,EAAA0rB,EAAAV,EAAA7Z,EAAA,OAAAzB,cAAAG,MAAA,SAAAuB,GAAA,cAAAA,EAAArB,KAAAqB,EAAApB,MAAA,OAUQ,OATpD7F,EAAMqP,kBACNmS,EAAcvrB,EAAKS,IAAI,GAAMuQ,EAAArB,KAAA,EAGrBQ,EAASL,SAASmB,cAAc,UAChCb,EAAMD,EAAOe,WAAW,MAExB/B,EAAQW,SAASC,eAAe/P,EAAKS,IACrC+nB,EAAW1Y,SAASmB,cAAc,OAClCwX,EAAkBxa,GAAiBua,GAASxX,EAAApB,KAAA,GAE7B6Z,KAAWC,MAAMva,EAAO,CAAEqc,QAAS,GAAK7B,QAAS,UAAW,KAAD,GAApE,OAAZnB,EAASjnB,IAAGyP,EAAA4Y,KAAA5Y,EAAApB,KAAA,GACN6Y,EAAgB,KAAD,GA4BF,OA1Bf4C,EAAe,EAKf,CAAC,OAAQ,OAAO7gB,SAASxK,EAAKS,MAChC4qB,EAAe,KAED,SAAZrrB,EAAKS,KACP4nB,EAAkBnkB,EAAoB6P,GACtCuU,EAAoBb,KAAK+B,KAAKnB,EAAgBhe,OAAS,GACvDghB,GAAoC,GAApB/C,GAEF,OAAZtoB,EAAKS,KACP8nB,EAAkBd,KAAK+B,KAAKle,EAAmBjB,OAAS,GACxDghB,GAAkC,GAAlB9C,GAGlBpY,EAAO7Q,MAAQ,IACf6Q,EAAOtQ,OAAS2oB,EAAS3oB,OAAS,IAAMwrB,EAExCjb,EAAIgB,UAAY,QAChBhB,EAAIiB,SAAS,EAAG,EAAGlB,EAAO7Q,MAAO6Q,EAAOtQ,QAElCD,EAAOkQ,SAASmB,cAAc,OAC9Bqa,EAAcrd,GAAiBrO,GACrCA,EAAK2B,IAAMC,EAAQwP,EAAApB,KAAA,GACb0b,EAAY,KAAD,GAgEgB,OA9DjClb,EAAIuB,UAAU/R,EAAM,GAAI,GAAI,IAAK,IACjCwQ,EAAIuB,UAAU6W,EAAUrY,EAAO7Q,MAAQ,EAAIkpB,EAASlpB,MAAQ,EAAG,KAE/D8Q,EAAIkB,KAAO,uBACXlB,EAAIgB,UAAY,QAChBhB,EAAIlQ,UAAY,SAChBkQ,EAAImB,SAASvR,EAAKoH,MAAO+I,EAAO7Q,MAAQ,EAAG,IAE3C8Q,EAAIkB,KAAO,kBACXlB,EAAImB,SAASvR,EAAKskB,YAAY5S,KAAK,OAAQvB,EAAO7Q,MAAQ,EAAG,IAE7D8Q,EAAIkB,KAAO,kBAEXlB,EAAImB,SAAS,YAADlP,OAAayD,GAAWqK,EAAO7Q,MAAQ,EAAG,KACtD8Q,EAAImB,SAAS,gBAADlP,OAAiB8I,EAAiB,QAAA9I,OAAO+I,GAAmB+E,EAAO7Q,MAAQ,EAAG,KAC1F8Q,EAAImB,SAAS,YAADlP,OAAa2I,GAAiBmF,EAAO7Q,MAAQ,EAAG,KAC5C,SAAZU,EAAKS,IAAe2P,EAAImB,SAAS,eAADlP,OAAgB0R,GAA8B5D,EAAO7Q,MAAQ,EAAG,KAEpG8Q,EAAIgB,UAAY,QAChBhB,EAAIlQ,UAAY,QAChBkQ,EAAIkB,KAAO,kBAELsZ,EAAejK,EAAa,IAAM,EAEpC,CAAC,OAAQ,OAAOnW,SAASxK,EAAKS,KAChC2P,EAAIiB,SAAS,EAAG,IAAMuZ,EAAcza,EAAO7Q,MAAO6Q,EAAOtQ,QAEzDgnB,EAAW,CACTE,WAAc,CAAC,QAAQvc,SAASxK,EAAKS,IAAMuS,GAAOC,GAClD0X,QAASva,EACT4W,OAAQ,EACR4D,eACAC,UAAW,IACXvD,OAAQ,IACRD,QAAQ,KAGS,SAAZrnB,EAAKS,IACZ2P,EAAIiB,SAAS,EAAG,IAAMuZ,EAAcza,EAAO7Q,MAAO6Q,EAAOtQ,QAEzDgnB,EAAW,CACTE,WAAYsB,EACZsC,QAASva,EACT4W,OAAQsB,EACRsC,eACAC,UAAW,IACXvD,OAAQ,OAEW,OAAZtnB,EAAKS,KACd2P,EAAIiB,SAAS,EAAG,IAAMuZ,EAAcza,EAAO7Q,MAAO6Q,EAAOtQ,QAEzDgnB,EAAW,CACTE,WAAYzb,EACZqf,QAASva,EACT4W,OAAQuB,EACRqC,eACAC,UAAW,IACX1D,YAAY,EACZG,OAAQ,MAINvW,EAASZ,EAAO4B,YAAWf,EAAApB,KAAA,GAC3BoC,KAASjB,EAAO,cAAD1O,OAAgBwI,EAAoBE,UAAS,OAAA1I,OAAMrC,EAAKoH,MAAK,SAAQ,KAAD,GAAA4J,EAAApB,KAAA,iBAAAoB,EAAArB,KAAA,GAAAqB,EAAAa,GAAAb,EAAA,SAEzF/B,GAAa,GAAM,QAEW,OAFX+B,EAAArB,KAAA,GAEnB4b,EAAcvrB,EAAKS,IAAI,GAAOuQ,EAAAqB,OAAA,6BAAArB,EAAAiB,OAAA,GAAAhC,EAAA,0BAEjCkC,MAAA,KAAAC,UAAA,CAED,SAASmZ,EAAc9qB,EAAIuI,GACzB0hB,EAAgBjjB,wBAAC,CAAC,EAAIgjB,GAAa,GAAAgB,aAAA,GAAGhrB,EAAKuI,IAC7C,CAEA,SAASsJ,IACPrD,GAAa,EACf,CAEA,OACE/N,eAACU,IAAI,CAACR,UAAWR,EAAQkf,WAAYje,UAAW,EAAER,SAAA,CAChDC,cAACijB,GAAa,IACbF,GAAW3iB,KAAI,SAAC1B,EAAM2B,GACrB,OACET,eAACU,IAAI,CAA6BR,UAAWR,EAAQZ,KAAM6B,UAAW,EAAER,SAAA,CACtEH,eAACwqB,KAAW,CAACC,gBAAc,EAACvqB,UAAWR,EAAQof,YAAY3e,SAAA,CACzDH,eAAA,OAAKE,UAAWR,EAAQqf,aAAa5e,SAAA,CACnCC,cAACS,IAAU,CAACI,SAAS,OAAOD,WAAW,MAAKb,SACzCrB,EAAKoH,QAER9F,cAAA,OAAKF,UAAWR,EAAQsf,gBAAgB7e,SACtCC,cAAC6F,KAAO,CAACC,MAAM,wBAAwBC,UAAU,MAAKhG,SACpDC,cAAA,QAAAD,SACEC,cAACgG,KAAU,CAAClE,MAAM,UAAUmE,QAAS,SAACwC,GAAK,OA3I9D,SAEiCmI,EAAA0Z,GAAA,OAAAR,EAAAjZ,MAAC,KAADC,UAAA,CAyIkCyZ,CAAoB9hB,EAAO/J,EAAK,EAACqB,SAC9EopB,EAAczqB,EAAKS,IAAMa,cAACkR,KAAgB,CAACpP,MAAM,UAAU8J,KAAM,KAAS5L,cAACmR,KAAS,eAM/FnR,cAACS,IAAU,CAACI,SAAS,OAAO2pB,UAAU,OAAMzqB,SACzCrB,EAAKskB,YAAY5iB,KAAI,SAACqqB,EAAG7F,GAAC,OACzB5kB,cAAA,OAAAD,SAA+B0qB,GAAC,eAAA1pB,OAAP6jB,GAAc,SAI7ChlB,eAAA,OAAKE,UAAWR,EAAQT,YAAYkB,SAAA,CACrB,SAAZrB,EAAKS,IAAiBa,cAAC4hB,GAAgB,IAC3B,QAAZljB,EAAKS,IAAgBa,cAACgiB,GAAmB,IAC7B,SAAZtjB,EAAKS,IAAiBa,cAACkf,GAAiB,IAC5B,OAAZxgB,EAAKS,IAAea,cAAC8iB,GAAiB,SACnC,cAAA/hB,OA3BiBV,GA8B7B,IACAL,cAACsjB,GAAY,IACbtjB,cAACoR,KAAQ,CAACC,KAAM3D,EAAW4D,iBAAkB,IAAMC,QAASP,EAAiBjR,SAC3EC,cAACwR,KAAK,CAACD,QAASP,EAAkBS,SAAS,QAAQ9Q,GAAI,CAAE3C,MAAO,QAAS+B,SAAC,wEAMlF,EClPa2qB,GAAY,CACvB,CAAE/M,IAAK,aAAcgN,SAAU,YAAaC,OAAQ,CAAC,MACrD,CAAEjN,IAAK,eAAgBgN,SAAU,mBAAoBC,OAAQ,CAAC,WAC9D,CAAEjN,IAAK,kBAAmBgN,SAAU,2BAA4BC,OAAQ,CAAC,SAEzE,CAAEjN,IAAK,gCAAiCgN,SAAU,UAAWC,OAAQ,CAAC,MAEtE,CAAEjN,IAAK,cAAegN,SAAU,gBAAiBC,OAAQ,CAAC,SAG1D,CAAEjN,IAAK,mBAAoBgN,SAAU,iBAAkBC,OAAQ,CAAC,UAChE,CAAEjN,IAAK,gBAAiBgN,SAAU,UAAWC,OAAQ,CAAC,MACtD,CAAEjN,IAAK,cAAegN,SAAU,eAAgBC,OAAQ,CAAC,oBACzD,CAAEjN,IAAK,gBAAiBgN,SAAU,wBAAyBC,OAAQ,CAAC,SACpE,CAAEjN,IAAK,eAAgBgN,SAAU,WAAYC,OAAQ,CAAC,OAG3CC,GAAkC,CAC7C,CAAElN,IAAK,MAAOgN,SAAU,MAAOC,OAAQ,CAAC,QACxC,CAAEjN,IAAK,MAAOgN,SAAU,MAAOC,OAAQ,CAAC,SAI7BE,GAAmB,CAC9B/nB,WAAY,CACV,CACE3D,KAAM,YACN2rB,aAAa,EACbC,MAAO,CAAC,CAAEL,SAAU,YAAajjB,MAAO,OAE1C,CACEtI,KAAM,OACN2rB,aAAa,EACbC,MAAO,CAAC,CAAEL,SAAU,YAAajjB,MAAO,QAG5C7E,aAAc,CACZ,CACEzD,KAAM,0BACN2rB,aAAa,EACbC,MAAO,CACL,CAAEL,SAAU,mBAAoBjjB,MAAO,UACvC,CAAEijB,SAAU,aAAcjjB,MAAO,KACjC,CAAEijB,SAAU,aAAcjjB,MAAO,OAGrC,CACEtI,KAAM,aACN2rB,aAAa,EACbC,MAAO,CACL,CAAEL,SAAU,mBAAoBjjB,MAAO,UACvC,CAAEijB,SAAU,aAAcjjB,MAAO,KACjC,CAAEijB,SAAU,aAAcjjB,MAAO,OAGrC,CACEtI,KAAM,aACN2rB,aAAa,EACbC,MAAO,CACL,CAAEL,SAAU,mBAAoBjjB,MAAO,UACvC,CAAEijB,SAAU,aAAcjjB,MAAO,KACjC,CAAEijB,SAAU,aAAcjjB,MAAO,OAGrC,CACEtI,KAAM,OACN2rB,aAAa,EACbC,MAAO,CAAC,CAAEL,SAAU,mBAAoBjjB,MAAO,aAGnD5E,gBAAiB,CACf,CACE1D,KAAM,eACN2rB,aAAa,EACbC,MAAO,CACL,CAAEL,SAAU,2BAA4BjjB,MAAO,QAC/C,CAAEijB,SAAU,QAASjjB,MAAO,KAC5B,CAAEijB,SAAU,OAAQjjB,MAAO,OAG/B,CACEtI,KAAM,QACN2rB,aAAa,EACbC,MAAO,CACL,CAAEL,SAAU,2BAA4BjjB,MAAO,QAC/C,CAAEijB,SAAU,QAASjjB,MAAO,KAC5B,CAAEijB,SAAU,OAAQjjB,MAAO,OAG/B,CACEtI,KAAM,OACN2rB,aAAa,EACbC,MAAO,CACL,CAAEL,SAAU,2BAA4BjjB,MAAO,QAC/C,CAAEijB,SAAU,OAAQjjB,MAAO,KAC3B,CAAEijB,SAAU,QAASjjB,MAAO,OAGhC,CACEtI,KAAM,OACN2rB,aAAa,EACbC,MAAO,CAAC,CAAEL,SAAU,2BAA4BjjB,MAAO,WAI3D,gCAAiC,CAC/B,CACEtI,KAAM,+BACN2rB,aAAa,EACbC,MAAO,CACL,CAAEL,SAAU,UAAWjjB,MAAO,KAC9B,CAAEijB,SAAU,QAASjjB,MAAO,KAC5B,CAAEijB,SAAU,SAAUjjB,MAAO,KAC7B,CAAEijB,SAAU,OAAQjjB,MAAO,KAC3B,CAAEijB,SAAU,OAAQjjB,MAAO,OAG/B,CACEtI,KAAM,sBACN2rB,aAAa,EACbC,MAAO,CACL,CAAEL,SAAU,UAAWjjB,MAAO,KAC9B,CAAEijB,SAAU,QAASjjB,MAAO,KAC5B,CAAEijB,SAAU,SAAUjjB,MAAO,KAC7B,CAAEijB,SAAU,OAAQjjB,MAAO,KAC3B,CAAEijB,SAAU,OAAQjjB,MAAO,OAG/B,CACEtI,KAAM,eACN2rB,aAAa,EACbC,MAAO,CACL,CAAEL,SAAU,UAAWjjB,MAAO,KAC9B,CAAEijB,SAAU,QAASjjB,MAAO,KAC5B,CAAEijB,SAAU,SAAUjjB,MAAO,KAC7B,CAAEijB,SAAU,OAAQjjB,MAAO,KAC3B,CAAEijB,SAAU,OAAQjjB,MAAO,OAG/B,CACEtI,KAAM,eACN2rB,aAAa,EACbC,MAAO,CACL,CAAEL,SAAU,UAAWjjB,MAAO,KAC9B,CAAEijB,SAAU,QAASjjB,MAAO,KAC5B,CAAEijB,SAAU,SAAUjjB,MAAO,KAC7B,CAAEijB,SAAU,OAAQjjB,MAAO,KAC3B,CAAEijB,SAAU,OAAQjjB,MAAO,OAG/B,CACEtI,KAAM,uBACN2rB,aAAa,EACbC,MAAO,CACL,CAAEL,SAAU,UAAWjjB,MAAO,KAC9B,CAAEijB,SAAU,QAASjjB,MAAO,KAC5B,CAAEijB,SAAU,SAAUjjB,MAAO,KAC7B,CAAEijB,SAAU,OAAQjjB,MAAO,KAC3B,CAAEijB,SAAU,OAAQjjB,MAAO,OAG/B,CACEtI,KAAM,gBACN2rB,aAAa,EACbC,MAAO,CACL,CAAEL,SAAU,UAAWjjB,MAAO,KAC9B,CAAEijB,SAAU,QAASjjB,MAAO,KAC5B,CAAEijB,SAAU,SAAUjjB,MAAO,KAC7B,CAAEijB,SAAU,OAAQjjB,MAAO,KAC3B,CAAEijB,SAAU,OAAQjjB,MAAO,OAG/B,CACEtI,KAAM,gBACN2rB,aAAa,EACbC,MAAO,CACL,CAAEL,SAAU,UAAWjjB,MAAO,KAC9B,CAAEijB,SAAU,QAASjjB,MAAO,KAC5B,CAAEijB,SAAU,SAAUjjB,MAAO,KAC7B,CAAEijB,SAAU,OAAQjjB,MAAO,KAC3B,CAAEijB,SAAU,OAAQjjB,MAAO,OAG/B,CACEtI,KAAM,sBACN2rB,aAAa,EACbC,MAAO,CACL,CAAEL,SAAU,UAAWjjB,MAAO,KAC9B,CAAEijB,SAAU,QAASjjB,MAAO,KAC5B,CAAEijB,SAAU,OAAQjjB,MAAO,KAC3B,CAAEijB,SAAU,OAAQjjB,MAAO,OAG/B,CACEtI,KAAM,eACN2rB,aAAa,EACbC,MAAO,CACL,CAAEL,SAAU,UAAWjjB,MAAO,KAC9B,CAAEijB,SAAU,QAASjjB,MAAO,KAC5B,CAAEijB,SAAU,OAAQjjB,MAAO,KAC3B,CAAEijB,SAAU,OAAQjjB,MAAO,OAG/B,CACEtI,KAAM,eACN2rB,aAAa,EACbC,MAAO,CACL,CAAEL,SAAU,UAAWjjB,MAAO,KAC9B,CAAEijB,SAAU,QAASjjB,MAAO,KAC5B,CAAEijB,SAAU,OAAQjjB,MAAO,KAC3B,CAAEijB,SAAU,OAAQjjB,MAAO,OAG/B,CACEtI,KAAM,sBACN2rB,aAAa,EACbC,MAAO,CACL,CAAEL,SAAU,UAAWjjB,MAAO,KAC9B,CAAEijB,SAAU,QAASjjB,MAAO,KAC5B,CAAEijB,SAAU,OAAQjjB,MAAO,KAC3B,CAAEijB,SAAU,OAAQjjB,MAAO,OAG/B,CACEtI,KAAM,eACN2rB,aAAa,EACbC,MAAO,CACL,CAAEL,SAAU,UAAWjjB,MAAO,KAC9B,CAAEijB,SAAU,QAASjjB,MAAO,KAC5B,CAAEijB,SAAU,OAAQjjB,MAAO,KAC3B,CAAEijB,SAAU,OAAQjjB,MAAO,OAG/B,CACEtI,KAAM,eACN2rB,aAAa,EACbC,MAAO,CACL,CAAEL,SAAU,UAAWjjB,MAAO,KAC9B,CAAEijB,SAAU,QAASjjB,MAAO,KAC5B,CAAEijB,SAAU,OAAQjjB,MAAO,KAC3B,CAAEijB,SAAU,OAAQjjB,MAAO,OAG/B,CACEtI,KAAM,uBACN2rB,aAAa,EACbC,MAAO,CACL,CAAEL,SAAU,UAAWjjB,MAAO,KAC9B,CAAEijB,SAAU,SAAUjjB,MAAO,KAC7B,CAAEijB,SAAU,OAAQjjB,MAAO,KAC3B,CAAEijB,SAAU,OAAQjjB,MAAO,OAG/B,CACEtI,KAAM,gBACN2rB,aAAa,EACbC,MAAO,CACL,CAAEL,SAAU,UAAWjjB,MAAO,KAC9B,CAAEijB,SAAU,SAAUjjB,MAAO,KAC7B,CAAEijB,SAAU,OAAQjjB,MAAO,KAC3B,CAAEijB,SAAU,OAAQjjB,MAAO,OAG/B,CACEtI,KAAM,gBACN2rB,aAAa,EACbC,MAAO,CACL,CAAEL,SAAU,UAAWjjB,MAAO,KAC9B,CAAEijB,SAAU,SAAUjjB,MAAO,KAC7B,CAAEijB,SAAU,OAAQjjB,MAAO,KAC3B,CAAEijB,SAAU,OAAQjjB,MAAO,OAG/B,CACEtI,KAAM,uBACN2rB,aAAa,EACbC,MAAO,CACL,CAAEL,SAAU,UAAWjjB,MAAO,KAC9B,CAAEijB,SAAU,SAAUjjB,MAAO,KAC7B,CAAEijB,SAAU,OAAQjjB,MAAO,KAC3B,CAAEijB,SAAU,OAAQjjB,MAAO,OAG/B,CACEtI,KAAM,gBACN2rB,aAAa,EACbC,MAAO,CACL,CAAEL,SAAU,UAAWjjB,MAAO,KAC9B,CAAEijB,SAAU,SAAUjjB,MAAO,KAC7B,CAAEijB,SAAU,OAAQjjB,MAAO,KAC3B,CAAEijB,SAAU,OAAQjjB,MAAO,OAG/B,CACEtI,KAAM,gBACN2rB,aAAa,EACbC,MAAO,CACL,CAAEL,SAAU,UAAWjjB,MAAO,KAC9B,CAAEijB,SAAU,SAAUjjB,MAAO,KAC7B,CAAEijB,SAAU,OAAQjjB,MAAO,KAC3B,CAAEijB,SAAU,OAAQjjB,MAAO,OAG/B,CACEtI,KAAM,uBACN2rB,aAAa,EACbC,MAAO,CACL,CAAEL,SAAU,UAAWjjB,MAAO,KAC9B,CAAEijB,SAAU,SAAUjjB,MAAO,KAC7B,CAAEijB,SAAU,OAAQjjB,MAAO,KAC3B,CAAEijB,SAAU,OAAQjjB,MAAO,OAG/B,CACEtI,KAAM,gBACN2rB,aAAa,EACbC,MAAO,CACL,CAAEL,SAAU,UAAWjjB,MAAO,KAC9B,CAAEijB,SAAU,SAAUjjB,MAAO,KAC7B,CAAEijB,SAAU,OAAQjjB,MAAO,KAC3B,CAAEijB,SAAU,OAAQjjB,MAAO,OAG/B,CACEtI,KAAM,gBACN2rB,aAAa,EACbC,MAAO,CACL,CAAEL,SAAU,UAAWjjB,MAAO,KAC9B,CAAEijB,SAAU,SAAUjjB,MAAO,KAC7B,CAAEijB,SAAU,OAAQjjB,MAAO,KAC3B,CAAEijB,SAAU,OAAQjjB,MAAO,OAG/B,CACEtI,KAAM,OACN2rB,aAAa,EACbC,MAAO,CAAC,CAAEL,SAAU,UAAWjjB,MAAO,QAI1CvE,YAAa,CACX,CACE/D,KAAM,cACN2rB,aAAa,EACbC,MAAO,CACL,CAAEL,SAAU,gBAAiBjjB,MAAO,QACpC,CAAEijB,SAAU,iBAAkBjjB,MAAO,OAGzC,CACEtI,KAAM,cACN2rB,aAAa,EACbC,MAAO,CACL,CAAEL,SAAU,gBAAiBjjB,MAAO,QACpC,CAAEijB,SAAU,cAAejjB,MAAO,OAGtC,CACEtI,KAAM,WACN2rB,aAAa,EACbC,MAAO,CACL,CAAEL,SAAU,gBAAiBjjB,MAAO,QACpC,CAAEijB,SAAU,WAAYjjB,MAAO,OAGnC,CACEtI,KAAM,YACN2rB,aAAa,EACbC,MAAO,CACL,CAAEL,SAAU,gBAAiBjjB,MAAO,QACpC,CAAEijB,SAAU,YAAajjB,MAAO,OAGpC,CACEtI,KAAM,cACN2rB,aAAa,EACbC,MAAO,CACL,CAAEL,SAAU,gBAAiBjjB,MAAO,QACpC,CAAEijB,SAAU,cAAejjB,MAAO,OAGtC,CACEtI,KAAM,OACN2rB,aAAa,EACbC,MAAO,CAAC,CAAEL,SAAU,gBAAiBjjB,MAAO,eAIhD,mBAAoB,CAClB,CACEtI,KAAM,uBACN2rB,aAAa,EACbC,MAAO,CAAC,CAAEL,SAAU,iBAAkBjjB,MAAO,mBAE/C,CACEtI,KAAM,uBACN2rB,aAAa,EACbC,MAAO,CAAC,CAAEL,SAAU,iBAAkBjjB,MAAO,mBAE/C,CACEtI,KAAM,gBACN2rB,aAAa,EACbC,MAAO,CAAC,CAAEL,SAAU,iBAAkBjjB,MAAO,YAE/C,CACEtI,KAAM,uBACN2rB,aAAa,EACbC,MAAO,CAAC,CAAEL,SAAU,iBAAkBjjB,MAAO,mBAE/C,CACEtI,KAAM,uBACN2rB,aAAa,EACbC,MAAO,CAAC,CAAEL,SAAU,iBAAkBjjB,MAAO,mBAE/C,CACEtI,KAAM,gBACN2rB,aAAa,EACbC,MAAO,CAAC,CAAEL,SAAU,iBAAkBjjB,MAAO,YAE/C,CACEtI,KAAM,wBACN2rB,aAAa,EACbC,MAAO,CAAC,CAAEL,SAAU,iBAAkBjjB,MAAO,mBAE/C,CACEtI,KAAM,wBACN2rB,aAAa,EACbC,MAAO,CAAC,CAAEL,SAAU,iBAAkBjjB,MAAO,mBAE/C,CACEtI,KAAM,iBACN2rB,aAAa,EACbC,MAAO,CAAC,CAAEL,SAAU,iBAAkBjjB,MAAO,YAE/C,CACEtI,KAAM,wBACN2rB,aAAa,EACbC,MAAO,CAAC,CAAEL,SAAU,iBAAkBjjB,MAAO,mBAE/C,CACEtI,KAAM,wBACN2rB,aAAa,EACbC,MAAO,CAAC,CAAEL,SAAU,iBAAkBjjB,MAAO,mBAE/C,CACEtI,KAAM,+BACN2rB,aAAa,EACbC,MAAO,CAAC,CAAEL,SAAU,iBAAkBjjB,MAAO,0BAE/C,CACEtI,KAAM,cACN2rB,aAAa,EACbC,MAAO,CAAC,CAAEL,SAAU,iBAAkBjjB,MAAO,aAGjD1E,cAAe,CACb,CACE5D,KAAM,cACN2rB,aAAa,EACbC,MAAO,CACL,CAAEL,SAAU,UAAWjjB,MAAO,KAC9B,CAAEijB,SAAU,OAAQjjB,MAAO,KAC3B,CAAEijB,SAAU,OAAQjjB,MAAO,OAG/B,CACEtI,KAAM,OACN2rB,aAAa,EACbC,MAAO,CACL,CAAEL,SAAU,UAAWjjB,MAAO,KAC9B,CAAEijB,SAAU,OAAQjjB,MAAO,KAC3B,CAAEijB,SAAU,OAAQjjB,MAAO,OAG/B,CACEtI,KAAM,OACN2rB,aAAa,EACbC,MAAO,CACL,CAAEL,SAAU,UAAWjjB,MAAO,KAC9B,CAAEijB,SAAU,OAAQjjB,MAAO,KAC3B,CAAEijB,SAAU,OAAQjjB,MAAO,OAG/B,CACEtI,KAAM,OACN2rB,aAAa,EACbC,MAAO,CAAC,CAAEL,SAAU,UAAWjjB,MAAO,QAG1CxE,cAAe,CACb,CACE9D,KAAM,UACN2rB,aAAa,EACbC,MAAO,CACL,CAAEL,SAAU,wBAAyBjjB,MAAO,QAC5C,CAAEijB,SAAU,UAAWjjB,MAAO,OAGlC,CACEtI,KAAM,UACN2rB,aAAa,EACbC,MAAO,CACL,CAAEL,SAAU,wBAAyBjjB,MAAO,QAC5C,CAAEijB,SAAU,UAAWjjB,MAAO,OAGlC,CACEtI,KAAM,UACN2rB,aAAa,EACbC,MAAO,CACL,CAAEL,SAAU,wBAAyBjjB,MAAO,QAC5C,CAAEijB,SAAU,UAAWjjB,MAAO,OAGlC,CACEtI,KAAM,UACN2rB,aAAa,EACbC,MAAO,CACL,CAAEL,SAAU,wBAAyBjjB,MAAO,QAC5C,CAAEijB,SAAU,UAAWjjB,MAAO,OAGlC,CACEtI,KAAM,OACN2rB,aAAa,EACbC,MAAO,CAAC,CAAEL,SAAU,wBAAyBjjB,MAAO,WAGxDzE,aAAc,CACZ,CACE7D,KAAM,iBACN2rB,aAAa,EACbC,MAAO,CACL,CAAEL,SAAU,WAAYjjB,MAAO,KAC/B,CAAEijB,SAAU,QAASjjB,MAAO,KAC5B,CAAEijB,SAAU,SAAUjjB,MAAO,OAGjC,CACEtI,KAAM,QACN2rB,aAAa,EACbC,MAAO,CACL,CAAEL,SAAU,WAAYjjB,MAAO,KAC/B,CAAEijB,SAAU,QAASjjB,MAAO,KAC5B,CAAEijB,SAAU,SAAUjjB,MAAO,OAGjC,CACEtI,KAAM,SACN2rB,aAAa,EACbC,MAAO,CACL,CAAEL,SAAU,WAAYjjB,MAAO,KAC/B,CAAEijB,SAAU,SAAUjjB,MAAO,KAC7B,CAAEijB,SAAU,QAASjjB,MAAO,OAGhC,CACEtI,KAAM,QACN2rB,aAAa,EACbC,MAAO,CACL,CAAEL,SAAU,WAAYjjB,MAAO,KAC/B,CAAEijB,SAAU,QAASjjB,MAAO,KAC5B,CAAEijB,SAAU,SAAUjjB,MAAO,KAC7B,CAAEijB,SAAU,QAASjjB,MAAO,OAGhC,CACEtI,KAAM,QACN2rB,aAAa,EACbC,MAAO,CACL,CAAEL,SAAU,WAAYjjB,MAAO,KAC/B,CAAEijB,SAAU,QAASjjB,MAAO,KAC5B,CAAEijB,SAAU,SAAUjjB,MAAO,KAC7B,CAAEijB,SAAU,QAASjjB,MAAO,OAGhC,CACEtI,KAAM,SACN2rB,aAAa,EACbC,MAAO,CACL,CAAEL,SAAU,WAAYjjB,MAAO,KAC/B,CAAEijB,SAAU,SAAUjjB,MAAO,KAC7B,CAAEijB,SAAU,SAAUjjB,MAAO,KAC7B,CAAEijB,SAAU,QAASjjB,MAAO,OAGhC,CACEtI,KAAM,SACN2rB,aAAa,EACbC,MAAO,CACL,CAAEL,SAAU,WAAYjjB,MAAO,KAC/B,CAAEijB,SAAU,SAAUjjB,MAAO,KAC7B,CAAEijB,SAAU,SAAUjjB,MAAO,KAC7B,CAAEijB,SAAU,QAASjjB,MAAO,OAGhC,CACEtI,KAAM,SACN2rB,aAAa,EACbC,MAAO,CACL,CAAEL,SAAU,WAAYjjB,MAAO,KAC/B,CAAEijB,SAAU,SAAUjjB,MAAO,KAC7B,CAAEijB,SAAU,SAAUjjB,MAAO,KAC7B,CAAEijB,SAAU,QAASjjB,MAAO,OAGhC,CACEtI,KAAM,OACN2rB,aAAa,EACbC,MAAO,CAAC,CAAEL,SAAU,WAAYjjB,MAAO,SC5lBtC,SAASujB,GAAUnuB,GAAwE,IAArEkjB,EAAIljB,EAAJkjB,KAAMxb,EAAO1H,EAAP0H,QAASqF,EAAiB/M,EAAjB+M,kBAAmBC,EAAehN,EAAfgN,gBAAiBJ,EAAa5M,EAAb4M,cAMxEwhB,EAAUlL,EAAK3T,QAAO,SAAC8D,GAAC,OALR8J,EAK0B9J,GALL,QAAZ3L,GAAqByV,EAAKkR,SAAW3mB,EAAQoS,gBAC1D,SAACqD,GACjB,OAAOA,EAAKmR,MAAQvhB,GAAqBoQ,EAAKmR,MAAQthB,CACxD,CAEsDuhB,CAAUlb,GAL3C,IAAC8J,CAK4C,IAC5D7S,EAASwK,YAAO,IAAI0Z,IAAIJ,EAAQ9qB,KAAI,SAAC+P,GAAC,OAAKA,EAAEuK,QAAQ,MAGvD6Q,EAAeL,EAAQniB,OACvByiB,EAAiBpkB,EAAU2B,OAC3BkB,EAAW,GAEf,GAAsB,QAAlBP,EAAyB,CAC3B,IAAMsQ,EAAckR,EAAQ7e,QAAO,SAAC8D,GAAC,OAAKsb,GAAsBtb,EAAEub,gBAAkBhiB,CAAa,IACjG6hB,EAAevR,EAAYjR,OAC3BkB,EAAQ2H,YAAO,IAAI0Z,IAAItR,EAAY5Z,KAAI,SAAC+P,GAAC,OAAKA,EAAEwb,IAAI,MAGpDH,EADsB5Z,YAAO,IAAI0Z,IAAItR,EAAY5Z,KAAI,SAAC+P,GAAC,OAAKA,EAAEuK,QAAQ,MACpC3R,MACpC,CAEA,MAAO,CACLiX,KAAMkL,EACN9jB,YACAmkB,eACAC,iBACAvhB,WAEJ,CAGO,SAASwhB,GAAsBlpB,GACpC,OAAQA,GACN,IAAK,mCACH,MAAO,kBACT,IAAK,2BACH,MAAO,uBACT,IAAK,cACL,IAAK,gBACH,MAAO,mBACT,IAAK,aACH,MAAO,cACT,IAAK,qBACH,MAAO,YACT,IAAK,qBACH,MAAO,iBACT,IAAK,WACH,MAAO,UACT,IAAK,MACH,MAAO,2BACT,IAAK,aACH,MAAO,aACT,IAAK,2BACH,MAAO,uBACT,IAAK,4CACL,IAAK,4BACL,IAAK,KACH,MAAO,iBACT,IAAK,aACH,MAAO,SACT,QACE,OAAOA,EAEb,CAGA,SAASqpB,GAAelS,GAAwC,IAArCM,EAAWN,EAAXM,YAAa6R,EAASnS,EAATmS,UAAWC,EAAQpS,EAARoS,SAC3C9L,EAAO,CACXrF,MAAO,GACPhX,WAAY,EACZ8W,MAAO,GAGHsR,EAAUna,YAAO,IAAI0Z,IAAItR,EAAY5Z,KAAI,SAAC+P,GAAC,OAAKA,EAAE0b,EAAU,MAiBlE,OAhBA7L,EAAKrF,MAAQoR,EAAW3rB,KAAI,SAAChB,GAC3B,IAAMqb,EAAQT,EAAY3N,QAAO,SAAC8D,GAAC,OAAKA,EAAE0b,KAAezsB,CAAI,IAAE2J,OACzDpF,EAAawS,QAASsE,EAAQT,EAAYjR,OAAU,KAAKuN,QAAQ,IAMvE,OAJIlX,IAAS0sB,IACX9L,EAAKvF,MAAQA,EACbuF,EAAKrc,WAAaA,GAEb,CAAEvE,OAAMqb,QAAO9W,aACxB,IAEiB,MAAbmoB,IACF9L,EAAKvF,MAAQT,EAAYjR,OAASiX,EAAKvF,MACvCuF,EAAKrc,WAAawS,QAAS6J,EAAKvF,MAAQT,EAAYjR,OAAU,KAAKuN,QAAQ,KAGtE0J,CACT,CAGO,SAASgM,GAAUhE,GAAuB,IAApBhI,EAAIgI,EAAJhI,KAwC3B,OAxC0CgI,EAATiE,UACP7rB,KAAI,SAACmC,GAC7B,IAAM8X,EAAQ,CACZK,SAAU,CACRC,MAAO,GACPF,MAAO,IAILT,EAAcgG,EAAK3T,QAAO,SAAC8D,GAAC,OAAKsb,GAAsBtb,EAAEub,gBAAkBnpB,CAAO,IAExF,GAA2B,IAAvByX,EAAYjR,OACd,MAAO,CAAC,EAGV,IAAM3B,EAASwK,YAAO,IAAI0Z,IAAItR,EAAY5Z,KAAI,SAAC+P,GAAC,OAAKA,EAAEuK,QAAQ,MAkB/D,OAjBAL,EAAMK,SAASD,MAAQrT,EAAU2B,OACjCsR,EAAMK,SAASC,MAAQvT,EAAUhH,KAAI,SAACuC,GACpC,MAAO,CACLvD,KAAMuD,EACN8X,MAAOT,EAAY3N,QAAO,SAAC8D,GAAC,OAAKA,EAAEuK,WAAa/X,CAAQ,IAAEoG,OAE9D,IACAsR,EAAMK,SAASC,MAAMtT,MAAK,SAACC,EAAGC,GAAC,OAAMD,EAAEmT,OAASlT,EAAEkT,MAAQ,GAAK,CAAC,IAEhEJ,EAAMwC,IAAM+O,GAAgB,CAAE5R,cAAa6R,UAAW,kBAAmBC,SAAU,QACnFzR,EAAM/B,IAAMsT,GAAgB,CAAE5R,cAAa6R,UAAW,MAAOC,SAAU,QACvEzR,EAAM9B,IAAMqT,GAAgB,CAAE5R,cAAa6R,UAAW,MAAOC,SAAU,QACvEzR,EAAM7B,OAASoT,GAAgB,CAAE5R,cAAa6R,UAAW,mBAAoBC,SAAU,WACvFzR,EAAMjE,YAAcwV,GAAgB,CAAE5R,cAAa6R,UAAW,eAAgBC,SAAU,oBACxFzR,EAAM3B,KAAOkT,GAAgB,CAAE5R,cAAa6R,UAAW,iBAAkBC,SAAU,SACnFzR,EAAM5B,MAAQmT,GAAgB,CAAE5R,cAAa6R,UAAW,iBAAkBC,SAAU,UAE7E,CACL1sB,KAAMmD,EACNkY,MAAOT,EAAYjR,OACnBsR,QAEJ,GAGF,CAGO,SAAS6R,GAAYC,GAA8D,IAA3DnM,EAAImM,EAAJnM,KAAMjW,EAAKoiB,EAALpiB,MAAOL,EAAayiB,EAAbziB,cAAa0iB,EAAAD,EAAEE,0BAAkB,IAAAD,GAAQA,EAC7EE,EAAY,GACZC,EAAwB,CAAC,EAC3BC,EAAkB,GAChBC,EAAuC,CAAC,EAExCC,EAAgB3iB,EAAM3J,KAAI,SAACkM,GAC/B,IAAMqgB,EAAW3M,EAAK3T,QAAO,SAAC8D,GAAC,OAAKA,EAAEib,OAAS9e,IAA2B,QAAlB5C,GAA2B+hB,GAAsBtb,EAAEub,gBAAkBhiB,EAAc,IAErIkjB,EAAW,CACfxtB,KAAMkN,EAAKugB,WACXpS,MAAOkS,EAAS5jB,QAEdsR,EAAQ,CAAC,EAEb,GAAIsS,EAAS5jB,OAAS,IAGpBsR,EAFezI,YAAO,IAAI0Z,IAAIqB,EAASvsB,KAAI,SAAC+P,GAAC,OAAKA,EAAEuK,QAAQ,MAE1CoS,QAAO,SAACC,EAAaC,GACrC,IAAMvS,EAAQkS,EAAStgB,QAAO,SAAC8D,GAAC,OAAKA,EAAEuK,WAAasS,CAAY,IAAEjkB,OAGlE,OAFAgkB,EAAYC,GAAgBvS,EAErBsS,CACT,GAAG,CAAC,GAEAJ,EAAS5jB,QAAU,IAAI,CACzB,IAAMkkB,EAAY,CAAC,EAEnBvC,GAAU3P,SAAQ,SAACmS,GACjB,IAAMC,EAAWR,EAAStgB,QAAO,SAAC8D,GAAC,OAAK+c,EAAKtC,OAAO1hB,SAASiH,EAAE+c,EAAKvC,UAAU,IAC9EsC,EAAUC,EAAKvP,KAAOwP,EAASpkB,OAEd,qBAAbmkB,EAAKvP,MACPsP,EAAU,mBAAqBN,EAAStgB,QAAO,SAAC8D,GAAC,MAA0B,SAArBA,EAAE+c,EAAKvC,SAAoB,IAAE5hB,OACnFkkB,EAAU,oBAAsBA,EAAU,oBAAsBA,EAAU,mBAE9E,IAEApC,GAAgC9P,SAAQ,SAACmS,GACvC,IAAMC,EAAWR,EAAStgB,QAAO,SAAC8D,GAAC,OAAK+c,EAAKtC,OAAO1hB,SAASiH,EAAE+c,EAAKvC,UAAU,IAC9EsC,EAAUC,EAAKvP,KAAOwP,EAASpkB,MACjC,IAKAujB,EAAUtR,KAAI7U,wBAAC,CAAC,EAAIymB,GAAaK,GACnC,CAGF,OAAA9mB,wBAAA,GACKymB,GACAvS,EAEP,IAkBA,OAjBIgS,IACFG,EAAe5a,YAAO,IAAI0Z,IAAIkB,EAAgBpsB,KAAI,SAAC+P,GAAC,OAAKA,CAAC,OAC1C9I,MAAK,SAACC,EAAGC,GAAC,OAAKD,EAAIC,CAAC,IAGtCkV,OAAOiB,KAAK+O,GAAsC1R,SAAQ,SAAC4C,GACzD,IAAMyP,EAAMxb,YAAO,IAAI0Z,IAAImB,EAAqC9O,KAEhE4O,EAAsB5O,GAAK5C,SAAQ,SAACd,GAClC,IAAMyD,EAAOjB,OAAOiB,KAAKzD,GACRmT,EAAO/gB,QAAO,SAAC8D,GAAC,OAAMuN,EAAKxU,SAASiH,EAAE,IAC9C4K,SAAQ,SAAC5K,GAChB8J,EAAK9J,GAAK,CACZ,GACF,GACF,IAEO,CAAEuc,cAAeA,EAAcrgB,QAAO,SAAC8D,GAAC,OAAKA,EAAEsK,MAAQ,CAAC,IAAG6R,YACpE,CAGO,SAASe,GAAgBC,GAAsC,IAAnCtN,EAAIsN,EAAJtN,KAAM5Y,EAASkmB,EAATlmB,UAAWsC,EAAa4jB,EAAb5jB,cAC5CyI,EAA2B,CAAC,EAElCuY,GAAU3P,SAAQ,SAAC4G,GACA,gBAAbA,EAAKhE,MACPxL,EAAyBwP,EAAKhE,KAAO,GAEzC,IAEA,IAAMzL,EAAqB9K,EAAUhH,KAAI,SAACuC,GACxC,IAAM4qB,EAAevN,EAAK3T,QAAO,SAAC8D,GAAC,OAAKA,EAAEuK,WAAa/X,IAA+B,QAAlB+G,GAA2B+hB,GAAsBtb,EAAEub,gBAAkBhiB,EAAc,IAGjJkjB,EAAW,CACfxtB,KAAMuD,EACN0T,WAAYkX,EAAaxkB,OACzBykB,eAAgB,GAGZC,EAAoB,CACxBruB,KAAMuD,EACN0T,WAAYkX,EAAaxkB,OACzBykB,eAAgB,GAiClB,OA9BA9C,GAAU3P,SAAQ,SAACmS,GACjB,IAAMC,EAAWI,EAAalhB,QAAO,SAAC8D,GAAC,OAAK+c,EAAKtC,OAAO1hB,SAASiH,EAAE+c,EAAKvC,UAAU,IASlF,GARAiC,EAASM,EAAKvP,KAAOwP,EAASpkB,OAEb,qBAAbmkB,EAAKvP,MACPiP,EAAS,mBAAqBW,EAAalhB,QAAO,SAAC8D,GAAC,MAA0B,SAArBA,EAAE+c,EAAKvC,SAAoB,IAAE5hB,OACtF6jB,EAAS,oBAAsBA,EAAS,oBAAsBA,EAAS,oBAIxD,gBAAbM,EAAKvP,IAAuB,CAC9B,IAAM+P,EAASvnB,YAAA,GAAQsnB,GAEvB3C,GAAiBoC,EAAKvP,KAAK5C,SAAQ,SAAC4S,GAClC,IAAMC,EAAgBD,EAAUvuB,KAEhCsuB,EAAUE,GAAiBL,EAAalhB,QAAO,SAAC8D,GAC9C,OAAOwd,EAAU3C,MAAM6C,OAAM,SAACC,GAAC,OAAK3d,EAAE2d,EAAEnD,YAAcmD,EAAEpmB,KAAK,GAC/D,IAAGqB,OAEC4kB,EAAU5C,cACZ2C,EAAUF,eAAiBE,EAAUrX,WAAaqX,EAAUE,GAEhE,IAEAzb,EAAyB+a,EAAKvP,KAAK3C,KAAK0S,EAC1C,CACF,IAEAd,EAASY,eAAiBZ,EAASvW,WAAauW,EAAsB,YAC/DA,CACT,IAQA,OANA1a,EAAmB7K,MAAK,SAACC,EAAGC,GAAC,OAAKA,EAAEimB,eAAiBlmB,EAAEkmB,cAAc,IACrE/Q,OAAOiB,KAAKvL,GAA0B4I,SAAQ,SAAC4C,GAC7CxL,EAAyBwL,GAAKtW,MAAK,SAACC,EAAGC,GAAC,OAAKA,EAAEimB,eAAiBlmB,EAAEkmB,cAAc,IAChFrb,EAAyBwL,GAAOxL,EAAyBwL,GAAKb,MAAM,EAAG,GACzE,IAEO,CAAE5K,qBAAoBC,2BAC/B,C,cC9RM/U,GAAYC,aAAW,SAACC,GAAK,MAAM,CACvCywB,YAAa,CACX7vB,SAAU,QACVqI,MAAO,GACPjF,OAAQ,EACRxD,QAAS,OAET,4BAA6B,CAC3ByI,MAAO,EACPzI,QAAS,QAGd,I,UCMYkwB,GAAc,SAAC7hB,GAC1B,IAAM7M,EAAUlC,KACViiB,EAAalX,YAAc,sBAE3B3C,EAAWzG,IACX4K,EAAc1K,GAAe,SAAC5C,GAAK,OAAKA,EAAMmD,UAAUmK,WAAW,IACnEC,EAAY3K,GAAe,SAAC5C,GAAK,OAAKA,EAAMmD,UAAUoK,SAAS,IAC/DxC,EAAYnI,GAAe,SAAC5C,GAAK,OAAKA,EAAMmD,UAAUwK,kBAAkB,IACxEN,EAAgBzK,GAAe,SAAC5C,GAAK,OAAKA,EAAMmD,UAAUkK,aAAa,IAwB7E,OACE1J,cAAA,OAAKF,UAAWR,EAAQyuB,YAAYhuB,SAClCC,cAAC6F,KAAO,CAACC,MAAM,uBAAuBC,UAAU,OAAMhG,SACpDC,cAAA,QAAAD,SACEC,cAACiuB,KAAG,CAACnsB,MAAM,UAAU8J,KAAMyT,EAAa,SAAW,QAASpZ,QA1BpE,WACET,EAAS0E,IAAc,IAEvB1E,EAASN,GAAW,QACpBM,EAASoF,GAAqBjB,IAC9BnE,EAASqF,GAAmBjB,IAC5BpE,EAAST,GAAY,CAAEX,YAAa,CAAC,EAAG,GAAIC,KAAM,KAClDmB,EAAS6E,GAAiB,QAE1B7E,EAASR,GAAW,UACpBQ,EAASuN,GAA2BlB,KACpCrM,EAAS4N,GAA8B,qBAEvC5N,EAASwN,GAAwB,eACjCxN,EAAS2N,GAAyB,eAClC3N,EAASsN,GAAyB,WAClCtN,EAAS0E,IAAc,IACvB1E,EAASJ,IAAY,IACrB,IAAMsnB,EAAgBW,GAAiB,CAAErN,KAAM7T,EAAM6T,KAAM5Y,YAAWsC,kBACtElE,EAAS8N,GAAyBoZ,EAAcxa,mBAAmB4K,MAAM,EAAG,GAAG1c,KAAI,SAAC+P,GAAC,OAAKA,EAAE/Q,IAAI,KAClG,EAMyFW,SAC/EC,cAACkuB,KAAU,CAACvtB,GAAI,CAAEmB,MAAO,iBAMrC,EC7DM1E,GAAYC,aAAW,SAACC,GAAK,MAAM,CACvCoB,KAAM,CACJ,iBAAkB,CAChBlB,aAAc,SAGlBqB,YAAa,CACXf,QAAS,kBACTL,QAAS,OACTC,cAAe,SAEf,4BAA6B,CAC3BI,QAAS,oBAGbqwB,UAAW,CACTvvB,UAAW,UACXuC,OAAQ,YAEX,ICjBYitB,GAAQ,WACnB,IAAM9uB,EAAUlC,KAEhB,OACE4C,cAACM,IAAI,CAACR,UAAWR,EAAQZ,KAAM6B,UAAW,EAAER,SAC1CH,eAACY,IAAW,CAACV,UAAWR,EAAQT,YAAYkB,SAAA,CAC1CC,cAACS,IAAU,CAACC,QAAQ,KAAKE,WAAY,IAAIb,SAAC,mBAI1CH,eAAA,OAAKE,UAAWR,EAAQ6uB,UAAUpuB,SAAA,CAAC,iLAEiCC,cAAA,KAAAD,SAAG,gBAAe,yCAItFH,eAAA,OAAKE,UAAWR,EAAQ6uB,UAAUpuB,SAAA,CAAC,4MAE4DC,cAAA,KAAAD,SAAG,UAAS,MAAI,IAC7GC,cAAA,KAAAD,SAAG,SAAQ,kBAAeC,cAAA,KAAAD,SAAG,QAAO,WAAQC,cAAA,KAAAD,SAAG,QAAO,4CAAyCC,cAAA,KAAAD,SAAG,SAAS,IAAI,yBACzFC,cAAA,KAAAD,SAAG,QAAO,gIACiBC,cAAA,KAAAD,SAAG,SAAQ,QAAKC,cAAA,KAAAD,SAAG,SAAQ,QACvEC,cAAA,KAAAD,SAAG,SAAQ,QAAKC,cAAA,KAAAD,SAAG,SAAQ,QAAKC,cAAA,KAAAD,SAAG,SAAQ,4EAC1BC,cAAA,KAAAD,SAAG,SAAS,KAACC,cAAA,KAAAD,SAAG,SAAQ,MAAGC,cAAA,KAAAD,SAAG,SAAQ,0DACpDC,cAAA,KAAAD,SAAG,SAAQ,WAAQC,cAAA,KAAAD,SAAG,SAAQ,6BAA0BC,cAAA,KAAAD,SAAG,SAAQ,UAAOC,cAAA,KAAAD,SAAG,SAAQ,wEACzCC,cAAA,KAAAD,SAAG,SAAQ,QAAKC,cAAA,KAAAD,SAAG,SAAQ,cACpEC,cAAA,KAAAD,SAAG,SAAQ,uHACSC,cAAA,KAAAD,SAAG,QAAO,aAAUC,cAAA,KAAAD,SAAG,QAAO,aAAUC,cAAA,KAAAD,SAAG,QAAO,YAAU,IAC3FC,cAAA,KAAAD,SAAG,QAAO,cAAWC,cAAA,KAAAD,SAAG,SAAQ,8GACAC,cAAA,KAAAD,SAAG,SAAQ,YAAU,IACrDC,cAAA,KAAGqe,KAAK,qDAAqD3V,OAAO,SAAS4V,IAAI,aAAYve,SAAC,wBAEzF,IAAI,kBAIXH,eAAA,OAAKE,UAAWR,EAAQ6uB,UAAUpuB,SAAA,CAChCC,cAAA,KAAAD,SAAG,UAAS,yCAAuC,IACnDC,cAAA,KAAGqe,KAAK,0BAA0B3V,OAAO,SAAS4V,IAAI,aAAYve,SAAC,kBAE/D,oMAEgF,IACpFC,cAAA,KAAGqe,KAAK,mCAAmC3V,OAAO,SAAS4V,IAAI,aAAYve,SAAC,uCAExE,2DAEJH,eAAA,KAAAG,SAAA,CACEC,cAAA,KAAAD,SAAG,mBAAkB,qDAAmD,IACxEC,cAAA,KAAGqe,KAAK,mDAAmD3V,OAAO,SAAS4V,IAAI,aAAYve,SAAC,SAExF,OAEF,sDACgD,IACpDC,cAAA,KACEqe,KAAK,gFACL3V,OAAO,SACP4V,IAAI,aAAYve,SACjB,uBAEG,OAINH,eAAA,OAAKE,UAAWR,EAAQ6uB,UAAUpuB,SAAA,CAChCC,cAAA,KAAAD,SAAG,UAAS,4CAA0C,IACtDC,cAAA,KAAGqe,KAAK,kEAAkE3V,OAAO,SAAS4V,IAAI,aAAYve,SAAC,iBAEvG,IACF,IACFC,cAAA,KAAGqe,KAAK,kEAAkE3V,OAAO,SAAS4V,IAAI,aAAYve,SAAC,uBAEvG,IACE,IACNC,cAAA,KAAGqe,KAAK,uBAAuB3V,OAAO,SAAS4V,IAAI,aAAYve,SAAC,kBAE5D,8MAGJC,cAAA,OAAKF,UAAU,cAAcG,IAAKouB,GAAWluB,IAAI,UAAU5B,OAAO,OAAQ,QAAK,IAC/EyB,cAAA,KAAGqe,KAAK,2BAA2B3V,OAAO,SAAS4V,IAAI,aAAYve,SAAC,mDAE/D,IAAI,IACH,IACNC,cAAA,KAAGqe,KAAK,0BAA0B3V,OAAO,SAAS4V,IAAI,aAAYve,SAAC,sBAE/D,WAMd,EChEauuB,GAAgB,WAC3B,IAAAnhB,EAAwBC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA7B6S,EAAI3S,EAAA,GAAEkhB,EAAOlhB,EAAA,GAEd7H,EAAWzG,IACXuK,EAAarK,GAAe,SAAC5C,GAAK,OAAKA,EAAMmD,UAAU8J,UAAU,IACjE9E,EAAUvF,GAAe,SAAC5C,GAAK,OAAKA,EAAM+D,IAAIoE,OAAO,IACrDqF,EAAoB5K,GAAe,SAAC5C,GAAK,OAAKA,EAAMmD,UAAUqK,iBAAiB,IAC/EC,EAAkB7K,GAAe,SAAC5C,GAAK,OAAKA,EAAMmD,UAAUsK,eAAe,IAC3EJ,EAAgBzK,GAAe,SAAC5C,GAAK,OAAKA,EAAMmD,UAAUkK,aAAa,IACvEqI,EAAqB9S,GAAe,SAAC5C,GAAK,OAAKA,EAAMwR,MAAMkE,kBAAkB,IAC7Eyc,EAAiBvvB,GAAe,SAAC5C,GAAK,OAAKA,EAAMmD,UAAUuK,KAAK,IAChEC,EAAqB/K,GAAe,SAAC5C,GAAK,OAAKA,EAAMmD,UAAUwK,kBAAkB,IAIvF,SAASykB,EAAgB7B,GACvB,IAAM8B,EAAe9B,EAAS5M,KAC9Bxa,EAAS+E,GAAgBmkB,EAAa3lB,SACtCvD,EAASgF,GAAiBkkB,EAAa3lB,SAEvC,IAAM3B,EAASwK,YAAO,IAAI0Z,IAAIoD,EAAatuB,KAAI,SAAC+P,GAAC,OAAKA,EAAEuK,QAAQ,MAChEtT,EAAUC,MAAK,SAACC,EAAGC,GAAC,OAAKD,EAAEE,cAAcD,EAAE,IAC3C/B,EAASuF,GAAsB3D,IAE/B,IAAM2C,EAAK6H,YAAO,IAAI0Z,IAAIoD,EAAatuB,KAAI,SAAC+P,GAAC,OAAKA,EAAEib,IAAI,MAClDa,EAASra,YAAO,IAAI0Z,IAAIoD,EAAatuB,KAAI,SAAC+P,GAAC,OAAKsb,GAAsBtb,EAAEub,aAAa,MAE3F3hB,EAAM1C,OACN4kB,EAAU5kB,OAEV7B,EAAS8E,GAAkBlD,EAAU2B,SACrCvD,EAASiF,GAAmBrD,EAAU2B,SACtCvD,EAASsF,GAASf,IAKlBvE,EAASmN,GAAsBsZ,IAE/BzmB,EAASL,GAAW6mB,GAAW,CAAEhM,KAAM0O,EAAczC,gBAErD,IAAMS,EAAgBW,GAAiB,CAAErN,KAAM0O,EAActnB,YAAWsC,kBACxElE,EAAS0N,GAAsBwZ,EAAcxa,qBAC7C1M,EAASyN,GAAqCyZ,EAAcxa,mBAAmB4K,MAAM,EAAG,GAAG1c,KAAI,SAAC+P,GAAC,OAAKA,EAAE/Q,IAAI,MAC5GoG,EAAS8N,GAAyBoZ,EAAcxa,mBAAmB4K,MAAM,EAAG,GAAG1c,KAAI,SAAC+P,GAAC,OAAKA,EAAE/Q,IAAI,MAChGoG,EAAS6N,GAA4BqZ,EAAcva,2BAEnD,IAAMwc,EAAYzC,GAAa,CAC7BlM,KAAM0O,EACN3kB,QACAL,kBAMF,OAHAlE,EAASoN,GAAqB+b,EAAUjC,gBACxClnB,EAASqN,GAAiB8b,EAAUrC,YAE7BoC,CACT,CAiBA,SAAAE,IAFC,OAEDA,EAAA7gB,YAAAC,cAAAC,MAdA,SAAAU,IAAA,OAAAX,cAAAG,MAAA,SAAAuB,GAAA,cAAAA,EAAArB,KAAAqB,EAAApB,MAAA,OACiC,OAA/B9I,EAAS4E,IAAe,IAAOsF,EAAApB,KAAA,EAEzByV,KACHC,IAAI,GAADjjB,OAAIwd,GAAY,2BACnBxiB,MAAK,SAAC6wB,GACL,IAAM1B,EAAUuD,EAAgB7B,GAChC2B,EAAQrD,EACV,IACCpG,SAAQ,WACPtf,EAAS4E,IAAe,GAC1B,IAAG,KAAD,mBAAAsF,EAAAiB,OAAA,GAAAhC,EAAA,MACLkC,MAAA,KAAAC,UAAA,CAsCD,OAnCA6O,qBAAU,YAhBV,WACsBiP,EAAA/d,MAAC,KAADC,UAAA,CAgBpBwO,GACA9Z,EAASJ,IAAY,GACvB,GAAG,IAIHua,qBAAU,WACR,GAAIK,EAAKjX,OAAS,GAAKO,EAAY,CACjC,IAAMulB,EAAU5D,GAAW,CAAEjL,OAAMxb,UAASqF,oBAAmBC,kBAAiBJ,kBAChFlE,EAASgF,GAAiBqkB,EAAQtD,eAClC/lB,EAASiF,GAAmBokB,EAAQrD,iBACpChmB,EAASwF,GAAY6jB,EAAQ5kB,WAE7BzE,EAASL,GAAW6mB,GAAW,CAAEhM,KAAM6O,EAAQ7O,KAAMiM,UAAWla,MAEhE,IAAM2a,EAAgBW,GAAiB,CACrCrN,KAAM6O,EAAQ7O,KACd5Y,UAAW4C,EACXN,kBAEFlE,EAAS0N,GAAsBwZ,EAAcxa,qBAC7C1M,EAASyN,GAAqCyZ,EAAcxa,mBAAmB4K,MAAM,EAAG,GAAG1c,KAAI,SAAC+P,GAAC,OAAKA,EAAE/Q,IAAI,MAC5GoG,EAAS6N,GAA4BqZ,EAAcva,2BAEnD,IAAMwc,EAAYzC,GAAa,CAC7BlM,KAAM6O,EAAQ7O,KACdjW,MAAOykB,EACP9kB,kBAEFlE,EAASoN,GAAqB+b,EAAUjC,gBACxClnB,EAASqN,GAAiB8b,EAAUrC,WACtC,CACF,GAAG,CAAChjB,EAAY9E,EAASqF,EAAmBC,EAAiBJ,IAG3D9J,eAAC6B,EAAU,CAAA1B,SAAA,CACTC,cAAC2Y,GAAG,IACJ3Y,cAAC8oB,GAAM,IACP9oB,cAACouB,GAAK,IACNpuB,cAACge,GAAM,IACPhe,cAACguB,GAAW,CAAChO,KAAMA,MAGzB,E,mBCnJa8O,GAAQC,aAAe,CAClCC,QAAS,CACPxvB,UAAWyvB,GACX7uB,IAAK8uB,GACLrhB,MAAOshB,IAETC,WAAY,SAACC,GACX,OAAOA,EAAqB,CAC1BC,mBAAmB,GAEvB,ICJIhyB,GAAQiyB,YAAY,CACxBC,QAAS,CACPpX,QAAS,CACPqX,KAAM,YAGVC,WAAY,CACVC,WAAY,CACV,aACA,gBACA,qBACA,aACA,WACA,WACA,WACA,cACA,cACA,eACA,mBACA,cACAvf,KAAK,QAIXwf,IAASC,OACP7vB,cAAC8vB,IAAMC,WAAU,CAAAhwB,SACfC,cAACgwB,KAAU,CAAAjwB,SACTC,cAACiwB,IAAQ,CAACnB,MAAOA,GAAM/uB,SACrBC,cAACkwB,IAAa,CAAC5yB,MAAOA,GAAMyC,SAC1BC,cAAA,OAAKF,UAAU,MAAKC,SAClBC,cAACmwB,KAAM,CAAApwB,SACLC,cAACowB,KAAK,CAACC,KAAK,IAAIC,QAAStwB,cAACsuB,GAAa,kBAOnD9f,SAASC,eAAe,S1D7BX,WACb,GAA6C,kBAAmB7S,UAAW,CAGzE,GADkB,IAAI20B,IAAIC,GAAwBl1B,OAAOC,UAC3Ck1B,SAAWn1B,OAAOC,SAASk1B,OAIvC,OAGFn1B,OAAOo1B,iBAAiB,QAAQ,WAC9B,IAAM/0B,EAAK,GAAAoF,OAAMyvB,GAAsB,sBAElCp1B,EAwCX,SAAiCO,GAE/Bg1B,MAAMh1B,GACHI,MAAK,SAAA6wB,GAGkB,MAApBA,EAASgE,SACuD,IAAhEhE,EAASiE,QAAQ7M,IAAI,gBAAgB9L,QAAQ,cAG7Ctc,UAAUC,cAAci1B,MAAM/0B,MAAK,SAAAC,GACjCA,EAAa+0B,aAAah1B,MAAK,WAC7BT,OAAOC,SAASy1B,QAClB,GACF,IAGAt1B,EAAgBC,EAEpB,IACCc,OAAM,WACLF,QAAQC,IACN,gEAEJ,GACJ,CA5DQy0B,CAAwBt1B,GAHxBD,EAAgBC,EAKpB,GACF,CACF,C0DSAu1B,GAKAv0B,G","file":"static/js/main.4c468122.chunk.js","sourcesContent":["// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log(\"New content is available; please refresh.\");\r\n            } else {\r\n              // At this point, everything has been pre-cached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","// capture the user experience of a web page\r\n\r\nconst reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","export default __webpack_public_path__ + \"static/media/logo-typhinet-prod.f503745b.png\";","import { makeStyles } from '@mui/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  toolbar: {\r\n    borderRadius: '16px',\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    gap: '16px',\r\n    justifyContent: 'space-between',\r\n    minHeight: 'unset !important',\r\n    padding: '0px !important',\r\n\r\n    '@media (max-width: 700px)': {\r\n      flexDirection: 'column'\r\n    }\r\n  },\r\n  logoWrapper: {\r\n    width: '30%',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n\r\n    '@media (max-width: 700px)': {\r\n      width: '-webkit-fill-available',\r\n      backgroundColor: '#fff',\r\n      position: 'fixed',\r\n      top: 0,\r\n      zIndex: 1,\r\n      boxShadow: '3px 0 10px 0 rgba(0,0,0,.25)'\r\n    }\r\n  },\r\n  logo: {\r\n    height: '90px',\r\n\r\n    '@media (max-width: 700px)': {\r\n      height: '60px'\r\n    }\r\n  },\r\n  informationCards: {\r\n    width: '70%',\r\n    display: 'flex',\r\n    gap: '16px',\r\n\r\n    '@media (max-width: 700px)': {\r\n      width: '100%',\r\n      paddingTop: '60px'\r\n    }\r\n  },\r\n  card: {\r\n    width: '100%',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    textAlign: 'center',\r\n    borderRadius: '16px !important'\r\n  },\r\n  cardContent: {\r\n    padding: '12px 10px !important'\r\n  },\r\n  actualAndTotalValues: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'flex-end'\r\n  }\r\n}));\r\n\r\nexport { useStyles };\r\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\r\nimport type { RootState, AppDispatch } from './store'\r\n\r\nexport const useAppDispatch: () => AppDispatch = useDispatch\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector","import { Card, CardContent, Toolbar, Typography } from '@mui/material';\r\nimport { useStyles } from './HeaderMUI';\r\nimport LogoImg from '../../../assets/img/logo-typhinet-prod.png';\r\nimport { useAppSelector } from '../../../stores/hooks';\r\n\r\nconst informationCards = [\r\n  {\r\n    id: 'genomes',\r\n    name: 'Total Genomes'\r\n  },\r\n  {\r\n    id: 'genotypes',\r\n    name: 'Total Genotypes'\r\n  }\r\n];\r\n\r\nexport const Header = () => {\r\n  const classes = useStyles();\r\n\r\n  const totalGenomes = useAppSelector((state) => state.dashboard.totalGenomes);\r\n  const actualGenomes = useAppSelector((state) => state.dashboard.actualGenomes);\r\n  const totalGenotypes = useAppSelector((state) => state.dashboard.totalGenotypes);\r\n  const actualGenotypes = useAppSelector((state) => state.dashboard.actualGenotypes);\r\n\r\n  return (\r\n    <Toolbar className={classes.toolbar}>\r\n      <div className={classes.logoWrapper}>\r\n        <img src={LogoImg} alt=\"TyphiNET\" className={classes.logo} />\r\n      </div>\r\n\r\n      <div className={classes.informationCards}>\r\n        {informationCards.map((card, index) => {\r\n          return (\r\n            <Card key={`information-card-${index}`} elevation={2} className={classes.card}>\r\n              <CardContent className={classes.cardContent}>\r\n                <Typography variant=\"body1\">{card.name}</Typography>\r\n                <Typography variant=\"h4\" sx={{ fontWeight: '500', fontSize: '32px' }}>\r\n                  {card.id === 'genomes' ? (\r\n                    totalGenomes === actualGenomes ? (\r\n                      <>{totalGenomes}</>\r\n                    ) : (\r\n                      <span className={classes.actualAndTotalValues}>\r\n                        {actualGenomes}\r\n                        <Typography variant=\"body1\" sx={{ fontWeight: '500' }}>\r\n                          /{totalGenomes}\r\n                        </Typography>\r\n                      </span>\r\n                    )\r\n                  ) : totalGenotypes === actualGenotypes ? (\r\n                    <>{totalGenotypes}</>\r\n                  ) : (\r\n                    <span className={classes.actualAndTotalValues}>\r\n                      {actualGenotypes}\r\n                      <Typography variant=\"body1\" sx={{ fontWeight: '500' }}>\r\n                        /{totalGenotypes}\r\n                      </Typography>\r\n                    </span>\r\n                  )}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          );\r\n        })}\r\n      </div>\r\n    </Toolbar>\r\n  );\r\n};\r\n","import { makeStyles } from '@mui/styles';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  mainLayout: {\r\n    width: '100%',\r\n    backgroundColor: '#E5E5E5',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    overflowY: 'auto',\r\n\r\n    '& .MuiAppBar-root': {\r\n      boxShadow: '0px 2px 1px -1px rgba(0,0,0,0.2), 0px 1px 1px 0px rgba(0,0,0,0.14), 0px 1px 3px 0px rgba(0,0,0,0.12)'\r\n    }\r\n  },\r\n  childrenWrapper: {\r\n    width: '100%'\r\n  },\r\n  children: {\r\n    padding: '16px',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    margin: 'auto',\r\n    rowGap: '16px',\r\n    backgroundColor: '#E5E5E5',\r\n\r\n    '@media (max-width: 500px)': {\r\n      padding: '8px',\r\n      rowGap: '8px'\r\n    }\r\n  },\r\n  loading: {\r\n    position: 'absolute',\r\n    bottom: 0,\r\n    height: '100%',\r\n    width: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: '#fff',\r\n    zIndex: 9999\r\n  },\r\n  logo: {\r\n    height: '100px',\r\n    alignSelf: 'center',\r\n    paddingLeft: '20px'\r\n  }\r\n}));\r\n\r\nexport { useStyles };\r\n","import Loader from 'react-loader-spinner';\r\nimport LogoImg from '../../assets/img/logo-typhinet-prod.png';\r\nimport { Header } from '../Elements/Header';\r\nimport { useStyles } from './MainLayoutUI';\r\nimport { useAppSelector } from '../../stores/hooks';\r\n\r\nexport const MainLayout = ({ children }) => {\r\n  const classes = useStyles();\r\n\r\n  const loadingData = useAppSelector((state) => state.dashboard.loadingData);\r\n  const loadingMap = useAppSelector((state) => state.map.loadingMap);\r\n\r\n  return (\r\n    <>\r\n      <div className={classes.mainLayout} id=\"main-layout\">\r\n        <div className={classes.childrenWrapper}>\r\n          <div className={classes.children}>\r\n            <Header />\r\n            {children}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {(loadingData || loadingMap) && (\r\n        <div className={classes.loading}>\r\n          <img className={classes.logo} src={LogoImg} alt=\"TyphiNET\" />\r\n          <Loader type=\"Circles\" color=\"#D91E45\" height={70} width={70} />\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import { makeStyles } from '@mui/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  mapWrapper: { position: 'relative' },\r\n  card: {\r\n    '&.MuiCard-root': {\r\n      borderRadius: '16px'\r\n    }\r\n  },\r\n  cardContent: {\r\n    textAlign: 'center',\r\n    position: 'relative'\r\n  },\r\n  composableMap: {\r\n    height: '500px',\r\n    width: '100%',\r\n\r\n    '@media (max-width: 500px)': {\r\n      height: '300px'\r\n    }\r\n  },\r\n  tooltipMap: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    paddingBottom: '4px',\r\n    alignItems: 'flex-start',\r\n\r\n    '& $country': {\r\n      fontWeight: 500,\r\n      fontSize: '18px'\r\n    },\r\n\r\n    '& $tooltipInfo': {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'flex-start',\r\n\r\n      '& $info': {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n\r\n        '& $color': {\r\n          width: '10px',\r\n          height: '10px',\r\n          marginRight: '4px',\r\n          border: '1px solid #f5f4f6'\r\n        }\r\n      }\r\n    }\r\n  },\r\n  topControls: {\r\n    marginTop: '16px',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    rowGap: '16px'\r\n  },\r\n  country: {},\r\n  tooltipInfo: {},\r\n  info: {},\r\n  color: {}\r\n}));\r\n\r\nexport { useStyles };\r\n","// Helper for colors\r\n\r\n// Color for Salmonella genotypes\r\nexport const getColorForGenotype = (genotype) => {\r\n  switch (genotype) {\r\n    case '0':\r\n    case '0.0.1':\r\n    case '0.0.2':\r\n    case '0.0.3':\r\n    case '0.1.0':\r\n    case '0.1':\r\n    case '0.1.1':\r\n    case '0.1.2':\r\n    case '0.1.3':\r\n      return '#808080';\r\n    case '1':\r\n    case '1.1':\r\n    case '1.1.1':\r\n    case '1.1.2':\r\n    case '1.1.3':\r\n    case '1.1.4':\r\n      return '#ffff00';\r\n    case '1.2':\r\n    case '1.2.1':\r\n      return '#ffd700';\r\n    case '2':\r\n    case '2.0.0':\r\n    case '2.0.1':\r\n    case '2.0.2':\r\n      return '#32cd32';\r\n    case '2.1.0':\r\n    case '2.1':\r\n    case '2.1.1':\r\n    case '2.1.2':\r\n    case '2.1.3':\r\n    case '2.1.4':\r\n    case '2.1.5':\r\n    case '2.1.6':\r\n    case '2.1.7':\r\n    case '2.1.8':\r\n    case '2.1.9':\r\n    case '2.1.7.1':\r\n    case '2.1.7.2':\r\n      return '#adff2f';\r\n    case '2.2':\r\n    case '2.2.0':\r\n    case '2.2.1':\r\n    case '2.2.2':\r\n    case '2.2.3':\r\n    case '2.2.4':\r\n      return '#98fb98';\r\n    case '2.3':\r\n    case '2.3.1':\r\n    case '2.3.2':\r\n    case '2.3.3':\r\n    case '2.3.4':\r\n    case '2.3.5':\r\n      return '#6b8e23';\r\n    case '2.4.0':\r\n    case '2.4':\r\n    case '2.4.1':\r\n      return '#2e8b57';\r\n    case '2.5.0':\r\n    case '2.5':\r\n    case '2.5.1':\r\n    case '2.5.2':\r\n      return '#006400';\r\n    case '3.0.0':\r\n    case '3':\r\n    case '3.0.1':\r\n    case '3.0.2':\r\n      return '#0000cd';\r\n    case '3.1.0':\r\n    case '3.1':\r\n    case '3.1.1':\r\n    case '3.1.2':\r\n      return '#4682b4';\r\n    case '3.2.1':\r\n    case '3.2':\r\n    case '3.2.2':\r\n      return '#00bfff';\r\n    case '3.3.0':\r\n    case '3.3':\r\n    case '3.3.1':\r\n    case '3.3.2':\r\n    case '3.3.2.Bd1':\r\n    case '3.3.2.Bd2':\r\n      return '#1e90ff';\r\n    case '3.4':\r\n      return '#6a5acd';\r\n    case '3.5':\r\n    case '3.5.1':\r\n    case '3.5.2':\r\n    case '3.5.3':\r\n    case '3.5.4':\r\n    case '3.5.4.1':\r\n    case '3.5.4.2':\r\n    case '3.5.4.3':\r\n      return '#4b0082';\r\n    case '4':\r\n    case '4.1.0':\r\n    case '4.1':\r\n    case '4.1.1':\r\n      return '#8b0000';\r\n    case '4.2':\r\n    case '4.2.1':\r\n    case '4.2.2':\r\n    case '4.2.3':\r\n      return '#ff6347';\r\n    // case '4.3':\r\n    // case '4.3.0':\r\n    case '4.3.1':\r\n      return '#ff0000';\r\n    case '4.3.1.1':\r\n    case '4.3.1.1.EA1':\r\n      return '#f1b6da';\r\n    case '4.3.1.1.P1':\r\n      return 'black';\r\n    case '4.3.1.2':\r\n    case '4.3.1.2.EA2':\r\n    case '4.3.1.2.EA3':\r\n    case '4.3.1.2.1':\r\n    case '4.3.1.2.1.1':\r\n      return '#c51b7d';\r\n    case '4.3.1.3':\r\n    case '4.3.1.3.Bdq':\r\n      return '#fb8072';\r\n    default:\r\n      return '#F5F4F6';\r\n  }\r\n};\r\n\r\n// Colors for Salmonella drug classes genes\r\nexport const colorForDrugClasses = {\r\n  Azithromycin: [\r\n    { name: 'acrB_R717L', color: '#FBCFE5' },\r\n    { name: 'acrB_R717Q', color: '#addd8e' },\r\n    { name: 'acrB_R717Q + acrB_R717L', color: '#fd8d3c' },\r\n    { name: 'None', color: '#B9B9B9' }\r\n  ],\r\n  // 'Fluoroquinolones (CipNS)': [\r\n  'Ciprofloxacin NS': [\r\n    { name: '0_QRDR + qnrB (CipNS)', color: '#0066cc' },\r\n    { name: '0_QRDR + qnrS (CipNS)', color: '#009999' },\r\n    // { name: '0_QRDR + qnrD (CipNS)', color: '#54278f' },\r\n    { name: '0_QRDR + qnrS + qnrD (CipNS)', color: '#a8ddb5' },\r\n    { name: '1_QRDR (CipNS)', color: '#ffcc00' },\r\n    { name: '1_QRDR + qnrB (CipNS)', color: '#993399' },\r\n    { name: '1_QRDR + qnrS (CipNS)', color: '#660066' },\r\n    { name: '2_QRDR (CipR)', color: '#ff6600' },\r\n    { name: '2_QRDR + qnrB (CipR)', color: '#ffcccc' },\r\n    { name: '2_QRDR + qnrS (CipR)', color: '#ff6666' },\r\n    { name: '3_QRDR (CipR)', color: '#cc0000' },\r\n    { name: '3_QRDR + qnrB (CipR)', color: '#660000' },\r\n    { name: '3_QRDR + qnrS (CipR)', color: 'black' },\r\n    { name: 'None (CipS)', color: '#B9B9B9' }\r\n  ],\r\n  Chloramphenicol: [\r\n    { name: 'catA1', color: '#9e9ac8' },\r\n    { name: 'catA1 + cmlA', color: '#FFEC78' },\r\n    { name: 'cmlA', color: '#addd8e' },\r\n    { name: 'None', color: '#B9B9B9' }\r\n  ],\r\n  Ampicillin: [\r\n    { name: 'blaTEM-1D', color: '#addd8e' },\r\n    { name: 'None', color: '#B9B9B9' }\r\n  ],\r\n  Sulphonamides: [\r\n    { name: 'None', color: '#B9B9B9' },\r\n    { name: 'sul1', color: '#fd8d3c' },\r\n    { name: 'sul1 + sul2', color: '#B4DD70' },\r\n    { name: 'sul2', color: '#ffeda0' }\r\n  ],\r\n  Trimethoprim: [\r\n    { name: 'dfrA1', color: '#B4DD70' },\r\n    { name: 'dfrA5', color: '#D7AEF7' },\r\n    { name: 'dfrA7', color: '#FFEC78' },\r\n    { name: 'dfrA7 + dfrA14', color: '#fd8d3c' },\r\n    { name: 'dfrA14', color: '#6baed6' },\r\n    { name: 'dfrA15', color: '#FBCFE5' },\r\n    { name: 'dfrA17', color: '#FCB469' },\r\n    { name: 'dfrA18', color: '#66c2a4' },\r\n    { name: 'None', color: '#B9B9B9' }\r\n  ],\r\n  Tetracyclines: [\r\n    { name: 'tetA(A)', color: 'rgb(174,227,154)' },\r\n    { name: 'tetA(B)', color: '#D7AEF7' },\r\n    { name: 'tetA(C)', color: '#FFEC78' },\r\n    { name: 'tetA(D)', color: '#FCB469' },\r\n    { name: 'None', color: '#B9B9B9' }\r\n  ],\r\n  Ceftriaxone: [\r\n    { name: 'blaCTX-M-12', color: '#fd8d3c' },\r\n    { name: 'blaCTX-M-15', color: '#6baed6' },\r\n    { name: 'blaCTX-M-55', color: '#FBCFE5' },\r\n    { name: 'blaOXA-7', color: '#9e9ac8' },\r\n    { name: 'blaSHV-12', color: '#addd8e' },\r\n    { name: 'None', color: '#B9B9B9' }\r\n  ],\r\n  'Trimethoprim-sulfamethoxazole': [\r\n    { name: 'dfrA1 + sul1', color: '#ffeda0' },\r\n    { name: 'dfrA1 + sul2', color: '#a50f15' },\r\n    { name: 'dfrA1 + sul1 + sul2', color: '#fcc5c0' },\r\n    { name: 'dfrA5 + sul1', color: '#fd8d3c' },\r\n    { name: 'dfrA5 + sul2', color: '#6a5acd' },\r\n    { name: 'dfrA5 + sul1 + sul2', color: '#bcbddc' },\r\n    { name: 'dfrA7 + sul1', color: '#addd8e' },\r\n    { name: 'dfrA7 + sul2', color: '#f1b6da' },\r\n    { name: 'dfrA7 + sul1 + sul2', color: '#fdd0a2' },\r\n    { name: 'dfrA7 + dfrA14 + sul1 + sul2', color: '#F54CEB' },\r\n    { name: 'dfrA14 + sul1', color: '#9e9ac8' },\r\n    { name: 'dfrA14 + sul2', color: '#fb8072' },\r\n    { name: 'dfrA14 + sul1 + sul2', color: '#c994c7' },\r\n    { name: 'dfrA15 + sul1', color: '#4682b4' },\r\n    { name: 'dfrA15 + sul2', color: '#6baed6' },\r\n    { name: 'dfrA15 + sul1 + sul2', color: '#9ecae1' },\r\n    { name: 'dfrA17 + sul1', color: '#7a0177' },\r\n    { name: 'dfrA17 + sul2', color: '#2e8b57' },\r\n    { name: 'dfrA17 + sul1 + sul2', color: '#a8ddb5' },\r\n    { name: 'dfrA18 + sul1', color: '#54278f' },\r\n    { name: 'dfrA18 + sul2', color: '#98fb98' },\r\n    { name: 'dfrA18 + sul1 + sul2', color: '#fc9272' },\r\n    { name: 'None', color: '#B9B9B9' }\r\n  ]\r\n};\r\n\r\n// Color variables\r\nexport const lightGrey = '#D3D3D3';\r\nexport const darkGrey = '#727272';\r\nexport const zeroPercentColor = '#A20F17';\r\nexport const zeroCountColor = '#F5F4F6';\r\nexport const hoverColor = '#D2F1F6';\r\n","// Helper for map color\r\nimport chroma from 'chroma-js';\r\n\r\nexport const samplesColorScale = (domain) => {\r\n  if (domain >= 1 && domain <= 9) {\r\n    return '#4575B4';\r\n  } else if (domain >= 10 && domain <= 19) {\r\n    return '#91BFDB';\r\n  } else if (domain >= 20 && domain <= 99) {\r\n    return '#ADDD8E';\r\n  } else if (domain >= 100 && domain <= 299) {\r\n    return '#FEE090';\r\n  } else if (domain >= 300) {\r\n    return '#FC8D59';\r\n  }\r\n};\r\n\r\nexport const redColorScale = (percentage) => {\r\n  const p = percentage;\r\n  if(p > 50){\r\n    return '#A20F17';\r\n  }else if (p > 10 && p <= 50) {\r\n    return '#DD2C24';\r\n  } else if (p > 2 && p <= 10) {\r\n    return '#FA694A';\r\n  } else {\r\n    return '#FAAD8F';\r\n  } \r\n};\r\n\r\nexport const redColorScale2 = (percentage) => {\r\n  const p = parseInt(percentage);\r\n  \r\n  // Define the color scale using chroma.scale\r\n  const colorScale = chroma.scale(['#FAAD8F', '#FA694A', '#DD2C24', '#A20F17']);\r\n  \r\n  // Map the percentage to the color scale range (0 to 1)\r\n  const normalizedPercentage = p / 100;\r\n\r\n  // Use the color scale to interpolate the color based on the percentage\r\n  const color = colorScale(normalizedPercentage).hex();\r\n\r\n  return color;\r\n};\r\n\r\nexport const sensitiveColorScale = (percentage) => {\r\n  const p = parseFloat(percentage);\r\n  if (p > 90) {\r\n    return '#727272';\r\n  } else if (p > 50) {\r\n    return '#FAAD8F';\r\n  } else if (p > 20) {\r\n    return '#FA694A';\r\n  } else if (p > 10) {\r\n    return '#DD2C24';\r\n  }\r\n  return '#A20F17';\r\n};\r\n","import { makeStyles } from '@mui/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  bottomLeftControls: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    position: 'absolute',\r\n    bottom: 0,\r\n    left: 0\r\n  }\r\n}));\r\n\r\nexport { useStyles };\r\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\r\n\r\ninterface PositionModel {\r\n  coordinates: Array<number>;\r\n  zoom: number;\r\n}\r\n\r\ninterface ItemModel {\r\n  name: string;\r\n  count: number;\r\n  percentage: number;\r\n}\r\n\r\ninterface ItemsModel {\r\n  items: Array<ItemModel>;\r\n  count: number;\r\n  percentage?: number;\r\n}\r\n\r\ninterface StatsModel {\r\n  GENOTYPE: ItemsModel;\r\n  H58: ItemsModel;\r\n  MDR: ItemsModel;\r\n  XDR: ItemsModel;\r\n  AzithR: ItemsModel;\r\n  Susceptible: ItemsModel;\r\n  CipR: ItemsModel;\r\n  CipNS: ItemsModel;\r\n}\r\n\r\ninterface MapDataModel {\r\n  name: string;\r\n  displayName: string;\r\n  count: number;\r\n  stats: StatsModel;\r\n}\r\n\r\ninterface MapState {\r\n  loadingMap: boolean;\r\n  position: PositionModel;\r\n  mapView: string;\r\n  tooltipContent: Object | null;\r\n  dataset: string;\r\n  mapData: Array<MapDataModel>;\r\n  ifCustom : boolean;\r\n\r\n}\r\n\r\nconst initialState: MapState = {\r\n  loadingMap: false,\r\n  position: {\r\n    coordinates: [0, 0],\r\n    zoom: 1\r\n  },\r\n  mapView: 'CipNS',\r\n  tooltipContent: null,\r\n  dataset: 'All',\r\n  mapData: [],\r\n  ifCustom : false,\r\n\r\n};\r\n\r\nexport const mapSlice = createSlice({\r\n  name: 'map',\r\n  initialState,\r\n  reducers: {\r\n    setLoadingMap: (state, action: PayloadAction<boolean>) => {\r\n      state.loadingMap = action.payload;\r\n    },\r\n    setPosition: (state, action: PayloadAction<PositionModel>) => {\r\n      state.position = action.payload;\r\n    },\r\n    setMapView: (state, action: PayloadAction<string>) => {\r\n      state.mapView = action.payload;\r\n    },\r\n    setTooltipContent: (state, action: PayloadAction<Object | null>) => {\r\n      state.tooltipContent = action.payload;\r\n    },\r\n    setDataset: (state, action: PayloadAction<string>) => {\r\n      state.dataset = action.payload;\r\n    },\r\n    setMapData: (state, action: PayloadAction<Array<any>>) => {\r\n      state.mapData = action.payload;\r\n    },\r\n    setIfCustom: (state, action: PayloadAction<boolean>) => {\r\n      state.ifCustom = action.payload;\r\n    },\r\n  }\r\n});\r\n\r\nexport const { setPosition, setMapView, setTooltipContent, setDataset, setLoadingMap, setMapData,  setIfCustom } = mapSlice.actions;\r\n\r\nexport default mapSlice.reducer;\r\n","import { AddCircle, FilterCenterFocus, RemoveCircle } from '@mui/icons-material';\r\nimport { IconButton, Tooltip, Zoom } from '@mui/material';\r\nimport { useStyles } from './BottomLeftControlsMUI';\r\nimport { useAppDispatch, useAppSelector } from '../../../../stores/hooks';\r\nimport { setPosition } from '../../../../stores/slices/mapSlice';\r\n\r\nexport const BottomLeftControls = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useAppDispatch();\r\n  const position = useAppSelector((state) => state.map.position);\r\n\r\n  function handleRecenter() {\r\n    dispatch(setPosition({ coordinates: [0, 0], zoom: 1 }));\r\n  }\r\n\r\n  function handleZoomIn() {\r\n    if (position.zoom >= 4) return;\r\n\r\n    dispatch(setPosition({ ...position, zoom: position.zoom * 2 }));\r\n  }\r\n\r\n  function handleZoomOut() {\r\n    if (position.zoom <= 1) return;\r\n    if (position.zoom / 2 === 1) {\r\n      dispatch(setPosition({ coordinates: [0, 0], zoom: 1 }));\r\n    } else {\r\n      dispatch(setPosition({ ...position, coordinates: [0, 0], zoom: position.zoom / 2 }));\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={classes.bottomLeftControls}>\r\n      <Zoom in={position.zoom !== 1 || position.coordinates.some((coordinate) => coordinate !== 0)}>\r\n        <Tooltip title=\"Recenter\" placement=\"right\">\r\n          <IconButton onClick={handleRecenter}>\r\n            <FilterCenterFocus fontSize=\"large\" color=\"primary\" />\r\n          </IconButton>\r\n        </Tooltip>\r\n      </Zoom>\r\n      <Tooltip title=\"Zoom In\" placement=\"right\">\r\n        <span>\r\n          <IconButton color=\"primary\" onClick={handleZoomIn}>\r\n            <AddCircle fontSize=\"large\" />\r\n          </IconButton>\r\n        </span>\r\n      </Tooltip>\r\n      <Tooltip title=\"Zoom Out\" placement=\"right\">\r\n        <span>\r\n          <IconButton color=\"primary\" onClick={handleZoomOut}>\r\n            <RemoveCircle fontSize=\"large\" />\r\n          </IconButton>\r\n        </span>\r\n      </Tooltip>\r\n    </div>\r\n  );\r\n};\r\n","import { makeStyles } from '@mui/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  topRightControls: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    position: 'absolute',\r\n    top: 0,\r\n    right: 0,\r\n\r\n    '&$bp700': {\r\n      position: 'relative'\r\n    }\r\n  },\r\n  card: { borderRadius: '6px !important' },\r\n  cardContent: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    rowGap: '4px'\r\n  },\r\n  label: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    columnGap: '8px'\r\n  },\r\n  labelTooltipIcon: {\r\n    cursor: 'pointer'\r\n  },\r\n  selectInput: {\r\n    fontSize: '14px !important',\r\n    fontWeight: '600 !important',\r\n    textAlign: 'start'\r\n  },\r\n  selectMenu: {\r\n    '& .MuiMenuItem-root': {\r\n      fontSize: '14px'\r\n    }\r\n  },\r\n  legendWrapper: {\r\n    marginTop: '8px',\r\n    maxHeight: '250px',\r\n    overflowY: 'auto'\r\n  },\r\n  legend: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  legendColorBox: {\r\n    width: '10px',\r\n    height: '10px',\r\n    marginRight: '4px'\r\n  },\r\n  legendText: {\r\n    fontSize: '10px'\r\n  },\r\n  bp700: {}\r\n}));\r\n\r\nexport { useStyles };\r\n","// List of Salmonella genotypes\r\nexport const genotypes = [\r\n\r\n  '0',\r\n  '0.0.1',\r\n  '0.0.2',\r\n  '0.0.3',\r\n  '0.1',\r\n  '0.1.1',\r\n  '0.1.2',\r\n  '0.1.3',\r\n  '1',\r\n  '1.1',\r\n  '1.1.1',\r\n  '1.1.2',\r\n  '1.1.3',\r\n  '1.1.4',\r\n  '1.2',\r\n  '1.2.1',\r\n  '2',\r\n  '2.0.1',\r\n  '2.0.2',\r\n  '2.1',\r\n  '2.1.1',\r\n  '2.1.2',\r\n  '2.1.3',\r\n  '2.1.4',\r\n  '2.1.5',\r\n  '2.1.6',\r\n  '2.1.7',\r\n  '2.1.8',\r\n  '2.1.9',\r\n  '2.1.7.1',\r\n  '2.1.7.2',\r\n  '2.2',\r\n  '2.2.1',\r\n  '2.2.2',\r\n  '2.2.3',\r\n  '2.2.4',\r\n  '2.3',\r\n  '2.3.1',\r\n  '2.3.2',\r\n  '2.3.3',\r\n  '2.3.4',\r\n  '2.3.5',\r\n  '2.4',\r\n  '2.4.1',\r\n  '2.5',\r\n  '2.5.1',\r\n  '2.5.2',\r\n  '3',\r\n  '3.0.1',\r\n  '3.0.2',\r\n  '3.1',\r\n  '3.1.1',\r\n  '3.1.2',\r\n  '3.2',\r\n  '3.2.1',\r\n  '3.2.2',\r\n  '3.3',\r\n  '3.3.1',\r\n  '3.3.2',\r\n  '3.3.2.Bd1',\r\n  '3.3.2.Bd2',\r\n  '3.4',\r\n  '3.5',\r\n  '3.5.1',\r\n  '3.5.2',\r\n  '3.5.3',\r\n  '3.5.4',\r\n  '3.5.4.1',\r\n  '3.5.4.2',\r\n  '3.5.4.3',\r\n  '4',\r\n  '4.1',\r\n  '4.1.1',\r\n  '4.2',\r\n  '4.2.1',\r\n  '4.2.2',\r\n  '4.2.3',\r\n  '4.3.1',\r\n  '4.3.1.1',\r\n  '4.3.1.1.P1',\r\n  '4.3.1.1.EA1',\r\n  '4.3.1.2',\r\n  '4.3.1.2.EA2',\r\n  '4.3.1.2.EA3',\r\n  '4.3.1.2.1',\r\n  '4.3.1.2.1.1',\r\n  '4.3.1.3',\r\n  '4.3.1.3.Bdq'\r\n].sort((a, b) => a.localeCompare(b));\r\n","// List of legends for the map and in which organisms they appear\r\nexport const mapLegends = [\r\n  { value: 'MDR', label: 'Multidrug resistant (MDR)' },\r\n  { value: 'XDR', label: 'Extensively drug resistant (XDR)' },\r\n  { value: 'AzithR', label: 'Azithromycin resistant' },\r\n  { value: 'CipNS', label: 'Ciprofloxacin non-susceptible (CipNS)' },\r\n  { value: 'CipR', label: 'Ciprofloxacin resistant (CipR)' },\r\n  // { value: 'Sensitive to all drugs', label: 'Sensitive to all drugs' },\r\n  { value: 'Susceptible to all drugs', label: 'Susceptible to all drugs' },\r\n  { value: 'Dominant Genotype', label: 'Dominant Genotype' },\r\n  { value: 'Genotype prevalence', label: 'Genotype prevalence' },\r\n  { value: 'H58 / Non-H58', label: 'H58 genotype' },\r\n  { value: 'No. Samples', label: 'No. Samples' }\r\n];\r\n","import { InfoOutlined } from '@mui/icons-material';\r\nimport { Box, Card, CardContent, MenuItem, Select, Tooltip, Typography, useMediaQuery } from '@mui/material';\r\nimport { useStyles } from './TopRightControlsMUI';\r\nimport { useAppDispatch, useAppSelector } from '../../../../stores/hooks';\r\nimport { setMapView, setIfCustom} from '../../../../stores/slices/mapSlice.ts';\r\nimport { darkGrey, getColorForGenotype, lightGrey } from '../../../../util/colorHelper';\r\nimport { genotypes } from '../../../../util/genotypes';\r\nimport { redColorScale, samplesColorScale, sensitiveColorScale } from '../mapColorHelper';\r\nimport { mapLegends } from '../../../../util/mapLegends';\r\n\r\nconst generalSteps = ['>0 and ≤2%', '>2% and ≤10%', '>10% and ≤50%', '>50%'];\r\nconst sensitiveSteps = ['0 - 10%', '10 - 20%', '20 - 50%', '50 - 90%', '90 - 100%'];\r\nconst noSamplesSteps = ['1 - 9', '10 - 19', '20 - 99', '100 - 299', '>= 300'];\r\nconst gradientStyle = ['0.01% - 25.00% ', '25.01 - 50.00%', '50.01% - 75.00%', '75.01% - 100.00%'];\r\nconst ExcludedView = ['Genotype prevalence'];\r\nconst mapViewsWithZeroPercentOption = ['CipNS', 'CipR', 'AzithR', 'MDR', 'XDR', 'H58 / Non-H58', 'ESBL', 'Carb', 'Genotype prevalence'];\r\n\r\nexport const TopRightControls = () => {\r\n  const classes = useStyles();\r\n  const matches = useMediaQuery('(max-width:700px)');\r\n\r\n  const dispatch = useAppDispatch();\r\n  const mapData = useAppSelector((state) => state.map.mapData);\r\n  const mapView = useAppSelector((state) => state.map.mapView);\r\n\r\n  function handleChangeMapView(event) {\r\n    if(event.target.value === 'Genotype prevalence')\r\n      dispatch(setIfCustom(true));\r\n    else\r\n      dispatch(setIfCustom(false));\r\n\r\n    dispatch(setMapView(event.target.value));\r\n  }\r\n\r\n  function hasZeroPercentOption() {\r\n    return mapViewsWithZeroPercentOption.includes(mapView);\r\n  }\r\n\r\n  function getSteps() {\r\n    switch (mapView) {\r\n      // case 'Sensitive to all drugs':\r\n      case 'Susceptible to all drugs':\r\n        return sensitiveSteps;\r\n      case 'No. Samples':\r\n        return noSamplesSteps;\r\n      case 'Dominant Genotype':\r\n        return genotypes;\r\n      case 'Genotype prevalence':\r\n        return gradientStyle;\r\n      default:\r\n        return generalSteps;\r\n    }\r\n  }\r\n\r\n  function getStepBoxColor(step, index) {\r\n    switch (mapView) {\r\n      // case 'Sensitive to all drugs':\r\n      case 'Susceptible to all drugs':\r\n        const aux = ['10', '20', '50', '90', '100'];\r\n        return sensitiveColorScale(aux[index]);\r\n      case 'No. Samples': {\r\n        const aux = [1, 10, 20, 100, 300];\r\n        return samplesColorScale(aux[index]);\r\n      }\r\n      case 'Dominant Genotype':\r\n        return getColorForGenotype(step);\r\n      default:\r\n        const aux3 = ['0.01', '2.01', '10.01', '50.01'];\r\n        return redColorScale(aux3[index]);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={`${classes.topRightControls} ${matches ? classes.bp700 : ''}`}>\r\n      <Card elevation={3} className={classes.card}>\r\n        <CardContent className={classes.cardContent}>\r\n          <div className={classes.label}>\r\n            <Typography variant=\"caption\">Select map view</Typography>\r\n            <Tooltip\r\n              title=\"Percentage frequency data is shown only for countries with\r\n          N≥20 genomes\"\r\n              placement=\"top\"\r\n            >\r\n              <InfoOutlined color=\"action\" fontSize=\"small\" className={classes.labelTooltipIcon} />\r\n            </Tooltip>\r\n          </div>\r\n          <Select\r\n            variant=\"standard\"\r\n            value={mapView}\r\n            onChange={handleChangeMapView}\r\n            inputProps={{ className: classes.selectInput }}\r\n            MenuProps={{ classes: { list: classes.selectMenu } }}\r\n          >\r\n            {mapLegends.map((legend, index) => {\r\n              return (\r\n                <MenuItem key={index + 'mapview'} value={legend.value}>\r\n                  {legend.label}\r\n                </MenuItem>\r\n              );\r\n            })}\r\n          </Select>\r\n          {mapData.length > 0 && (\r\n            <div className={classes.legendWrapper}>\r\n              <div className={classes.legend}>\r\n                <Box className={classes.legendColorBox} style={{ backgroundColor: lightGrey }} />\r\n                <span className={classes.legendText}>Insufficient data</span>\r\n              </div>\r\n              {hasZeroPercentOption() && (\r\n                <div className={classes.legend}>\r\n                  <Box className={classes.legendColorBox} style={{ backgroundColor: darkGrey }} />\r\n                  <span className={classes.legendText}>0%</span>\r\n                </div>\r\n              )}\r\n              {ExcludedView.includes(mapView) ?(\r\n                <div key={`step-1`} className={classes.legend}>\r\n                  <Box\r\n                    className={classes.legendColorBox}\r\n                    style={{\r\n                      height: '50px',\r\n                      marginTop:'2px',\r\n                      backgroundImage: \"linear-gradient( #FAAD8F, #FA694A, #DD2C24, #A20F17)\"\r\n                    }}\r\n                  />\r\n                  <span className={classes.legendText}>\r\n                    <div style={{textAlign:'left', height: '50px'}}>\r\n                      <div>1%</div>\r\n                      <br/>\r\n                      <br/>\r\n                      <div>100%</div>\r\n                    </div>\r\n                  </span>\r\n                </div>\r\n              ) : (\r\n                getSteps().map((step, index) => (\r\n                  <div key={`step-${index}`} className={classes.legend}>\r\n                    <Box className={classes.legendColorBox} style={{ backgroundColor: getStepBoxColor(step, index) }} />\r\n                    <span className={classes.legendText}>{step}</span>\r\n                  </div>\r\n                ))\r\n              ) }\r\n            </div>\r\n          )}\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\r\n\r\ninterface GlobalOverviewModel {\r\n  italicLabel: string;\r\n  label: string;\r\n  fullLabel: string\r\n}\r\n\r\ninterface DashboardState {\r\n  canGetData: boolean;\r\n  globalOverviewLabel: GlobalOverviewModel;\r\n  loadingData: boolean;\r\n  actualCountry: string;\r\n  totalGenomes: number;\r\n  totalGenotypes: number;\r\n  actualGenomes: number;\r\n  actualGenotypes: number;\r\n  timeInitial: number;\r\n  timeFinal: number;\r\n  actualTimeInitial: number | string;\r\n  actualTimeFinal: number | string;\r\n  years: Array<number>;\r\n  genotypesForFilter: Array<string>;\r\n  listPMID: Array<string>\r\n}\r\n\r\nconst initialState: DashboardState = {\r\n  canGetData: true,\r\n  globalOverviewLabel: { italicLabel: 'Salmonella', label: 'Typhi', fullLabel: 'Salmonella Typhi' },\r\n  loadingData: false,\r\n  actualCountry: 'All',\r\n  totalGenotypes: 0,\r\n  totalGenomes: 0,\r\n  actualGenomes: 0,\r\n  actualGenotypes: 0,\r\n  timeInitial: 0,\r\n  timeFinal: 0,\r\n  actualTimeInitial: '',\r\n  actualTimeFinal: '',\r\n  years: [],\r\n  genotypesForFilter: [],\r\n  listPMID: []\r\n};\r\n\r\nexport const dashboardSlice = createSlice({\r\n  name: 'dashboard',\r\n  initialState,\r\n  reducers: {\r\n    setCanGetData: (state, action: PayloadAction<boolean>) => {\r\n      state.canGetData = action.payload;\r\n    },\r\n    setGlobalOverviewLabel: (state, action: PayloadAction<GlobalOverviewModel>) => {\r\n      state.globalOverviewLabel = action.payload;\r\n    },\r\n    setLoadingData: (state, action: PayloadAction<boolean>) => {\r\n      state.loadingData = action.payload;\r\n    },\r\n    setActualCountry: (state, action: PayloadAction<string>) => {\r\n      state.actualCountry = action.payload;\r\n    },\r\n    setTotalGenotypes: (state, action: PayloadAction<number>) => {\r\n      state.totalGenotypes = action.payload;\r\n    },\r\n    setTotalGenomes: (state, action: PayloadAction<number>) => {\r\n      state.totalGenomes = action.payload;\r\n    },\r\n    setActualGenomes: (state, action: PayloadAction<number>) => {\r\n      state.actualGenomes = action.payload;\r\n    },\r\n    setActualGenotypes: (state, action: PayloadAction<number>) => {\r\n      state.actualGenotypes = action.payload;\r\n    },\r\n    setTimeInitial: (state, action: PayloadAction<number>) => {\r\n      state.timeInitial = action.payload;\r\n    },\r\n    setTimeFinal: (state, action: PayloadAction<number>) => {\r\n      state.timeFinal = action.payload;\r\n    },\r\n    setActualTimeInitial: (state, action: PayloadAction<number>) => {\r\n      state.actualTimeInitial = action.payload;\r\n    },\r\n    setActualTimeFinal: (state, action: PayloadAction<number>) => {\r\n      state.actualTimeFinal = action.payload;\r\n    },\r\n    setYears: (state, action: PayloadAction<Array<number>>) => {\r\n      const years = action.payload\r\n\r\n      state.years = years;\r\n      state.timeInitial = years[0];\r\n      state.actualTimeInitial = years[0];\r\n      state.timeFinal = years[years.length - 1];\r\n      state.actualTimeFinal = years[years.length - 1];\r\n    },\r\n    setGenotypesForFilter: (state, action: PayloadAction<Array<string>>) => {\r\n      state.genotypesForFilter = action.payload;\r\n    },\r\n    setListPMID: (state, action: PayloadAction<Array<string>>) => {\r\n      state.listPMID = action.payload;\r\n    },\r\n  }\r\n});\r\n\r\nexport const {\r\n  setCanGetData,\r\n  setGlobalOverviewLabel,\r\n  setLoadingData,\r\n  setActualCountry,\r\n  setTotalGenotypes,\r\n  setTotalGenomes,\r\n  setActualGenomes,\r\n  setActualGenotypes,\r\n  setTimeInitial,\r\n  setTimeFinal,\r\n  setActualTimeInitial,\r\n  setActualTimeFinal,\r\n  setYears,\r\n  setGenotypesForFilter,\r\n  setListPMID\r\n} = dashboardSlice.actions;\r\n\r\nexport default dashboardSlice.reducer;\r\n","import { makeStyles } from '@mui/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  topLeftControls: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    position: 'absolute',\r\n    top: 0,\r\n    left: 0,\r\n\r\n    '&$bp700': {\r\n      position: 'relative',\r\n\r\n      '& $yearWrapper': {\r\n        width: '100%'\r\n      },\r\n      '& $datasetWrapper .MuiToggleButton-root': {\r\n        width: '100%'\r\n      }\r\n    }\r\n  },\r\n  card: { borderRadius: '6px !important' },\r\n  cardContent: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    rowGap: '8px',\r\n    textAlign: 'start'\r\n  },\r\n  datasetWrapper: {\r\n    display: 'flex',\r\n    flexDirection: 'column'\r\n  },\r\n  selectInput: {\r\n    fontSize: '14px !important',\r\n    fontWeight: '600 !important',\r\n    textAlign: 'start'\r\n  },\r\n  selectMenu: {\r\n    '& .MuiMenuItem-root': {\r\n      fontSize: '14px'\r\n    }\r\n  },\r\n  yearsWrapper: {\r\n    display: 'flex',\r\n    columnGap: '4px',\r\n    paddingTop: '8px'\r\n  },\r\n  yearWrapper: {\r\n    width: '78px'\r\n  },\r\n  menuPaper: {\r\n    maxHeight: '350px !important'\r\n  },\r\n  bp700: {}\r\n}));\r\n\r\nexport { useStyles };\r\n","import { useStyles } from './TopLeftControlsMUI';\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  Divider,\r\n  MenuItem,\r\n  Select,\r\n  ToggleButton,\r\n  ToggleButtonGroup,\r\n  Typography,\r\n  useMediaQuery\r\n} from '@mui/material';\r\nimport { useAppDispatch, useAppSelector } from '../../../../stores/hooks';\r\nimport { setDataset } from '../../../../stores/slices/mapSlice.ts';\r\nimport { setActualTimeFinal, setActualTimeInitial } from '../../../../stores/slices/dashboardSlice';\r\n\r\nconst datasetOptions = ['All', 'Local', 'Travel'];\r\n\r\nexport const TopLeftControls = () => {\r\n  const classes = useStyles();\r\n  const matches = useMediaQuery('(max-width:700px)');\r\n\r\n  const dispatch = useAppDispatch();\r\n  const dataset = useAppSelector((state) => state.map.dataset);\r\n  const actualTimeInitial = useAppSelector((state) => state.dashboard.actualTimeInitial);\r\n  const actualTimeFinal = useAppSelector((state) => state.dashboard.actualTimeFinal);\r\n  const years = useAppSelector((state) => state.dashboard.years);\r\n\r\n  function handleChange(_event, newValue) {\r\n    if (newValue !== null) {\r\n      dispatch(setDataset(newValue));\r\n    }\r\n  }\r\n\r\n  function handleChangeInitial(_event, child) {\r\n    dispatch(setActualTimeInitial(child.props.value));\r\n  }\r\n\r\n  function handleChangeFinal(_event, child) {\r\n    dispatch(setActualTimeFinal(child.props.value));\r\n  }\r\n\r\n  return (\r\n    <div className={`${classes.topLeftControls} ${matches ? classes.bp700 : ''}`}>\r\n      <Card elevation={3} className={classes.card}>\r\n        <CardContent className={classes.cardContent}>\r\n          <Typography variant=\"h6\">Filters</Typography>\r\n          <div className={classes.datasetWrapper}>\r\n            <Typography gutterBottom variant=\"caption\">\r\n              Select dataset\r\n            </Typography>\r\n            <ToggleButtonGroup value={dataset} exclusive size=\"small\" onChange={handleChange}>\r\n              {datasetOptions.map((option, index) => (\r\n                <ToggleButton key={`dataset-${index}`} value={option} color=\"primary\">\r\n                  {option}\r\n                </ToggleButton>\r\n              ))}\r\n            </ToggleButtonGroup>\r\n          </div>\r\n          <div className={classes.yearsWrapper}>\r\n            <div className={classes.yearWrapper}>\r\n              <Typography gutterBottom variant=\"caption\">\r\n                Start year\r\n              </Typography>\r\n              <Select\r\n                variant=\"standard\"\r\n                inputProps={{ className: classes.selectInput }}\r\n                MenuProps={{ classes: { paper: classes.menuPaper, list: classes.selectMenu } }}\r\n                value={actualTimeInitial}\r\n                onChange={handleChangeInitial}\r\n                fullWidth\r\n              >\r\n                {years\r\n                  .filter((year) => year <= actualTimeFinal)\r\n                  .map((year, index) => {\r\n                    return (\r\n                      <MenuItem key={`initial-year-${index}`} value={year}>\r\n                        {year}\r\n                      </MenuItem>\r\n                    );\r\n                  })}\r\n              </Select>\r\n            </div>\r\n            <Divider orientation=\"vertical\" flexItem />\r\n            <div className={classes.yearWrapper}>\r\n              <Typography gutterBottom variant=\"caption\">\r\n                End year\r\n              </Typography>\r\n              <Select\r\n                variant=\"standard\"\r\n                inputProps={{ className: classes.selectInput }}\r\n                MenuProps={{ classes: { paper: classes.menuPaper, list: classes.selectMenu } }}\r\n                value={actualTimeFinal}\r\n                onChange={handleChangeFinal}\r\n                fullWidth\r\n              >\r\n                {years\r\n                  .filter((year) => year >= actualTimeInitial)\r\n                  .map((year, index) => {\r\n                    return (\r\n                      <MenuItem key={`final-year-${index}`} value={year}>\r\n                        {year}\r\n                      </MenuItem>\r\n                    );\r\n                  })}\r\n              </Select>\r\n            </div>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n","import { makeStyles } from '@mui/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  bottomRightControls: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    position: 'absolute',\r\n    bottom: 0,\r\n    right: 0\r\n  }\r\n}));\r\n\r\nexport { useStyles };\r\n","// Helper for loading images to the report\r\nexport function imgOnLoadPromise(obj) {\r\n  return new Promise((resolve, reject) => {\r\n    obj.onload = () => resolve(obj);\r\n    obj.onerror = reject;\r\n  });\r\n}\r\n","import { Alert, CircularProgress, IconButton, Snackbar, Tooltip } from '@mui/material';\r\nimport { useStyles } from './BottomRightControlsMUI';\r\nimport { CameraAlt } from '@mui/icons-material';\r\nimport { useAppDispatch, useAppSelector } from '../../../../stores/hooks';\r\nimport { useState } from 'react';\r\nimport { setPosition } from '../../../../stores/slices/mapSlice';\r\nimport { svgAsPngUri } from 'save-svg-as-png';\r\nimport { imgOnLoadPromise } from '../../../../util/imgOnLoadPromise';\r\nimport download from 'downloadjs';\r\nimport LogoImg from '../../../../assets/img/logo-typhinet-prod.png';\r\nimport { mapLegends } from '../../../../util/mapLegends';\r\n\r\nexport const BottomRightControls = () => {\r\n  const classes = useStyles();\r\n  const [loading, setLoading] = useState(false);\r\n  const [showAlert, setShowAlert] = useState(false);\r\n\r\n  const dispatch = useAppDispatch();\r\n  const mapView = useAppSelector((state) => state.map.mapView);\r\n  const dataset = useAppSelector((state) => state.map.dataset);\r\n  const actualTimeInitial = useAppSelector((state) => state.dashboard.actualTimeInitial);\r\n  const actualTimeFinal = useAppSelector((state) => state.dashboard.actualTimeFinal);\r\n  const globalOverviewLabel = useAppSelector((state) => state.dashboard.globalOverviewLabel);\r\n  const customDropdownMapView = useAppSelector((state) => state.graph.customDropdownMapView);\r\n\r\n  async function handleClick() {\r\n    setLoading(true);\r\n    dispatch(setPosition({ coordinates: [0, 0], zoom: 1 }));\r\n\r\n    try {\r\n      await svgAsPngUri(document.getElementById('global-overview-map'), {\r\n        scale: 4,\r\n        backgroundColor: 'white',\r\n        width: 1200,\r\n        left: -200\r\n      }).then(async (uri) => {\r\n        let canvas = document.createElement('canvas');\r\n        let ctx = canvas.getContext('2d');\r\n\r\n        let mapImg = document.createElement('img');\r\n        let mapImgPromise = imgOnLoadPromise(mapImg);\r\n        mapImg.src = uri;\r\n        await mapImgPromise;\r\n\r\n        const cWidth = 3600;\r\n        const cHeight = 1800;\r\n        const textHeight = 250;\r\n        const legendHeight = 350;\r\n\r\n        canvas.width = cWidth;\r\n        canvas.height = cHeight + textHeight + legendHeight;\r\n\r\n        ctx.fillStyle = 'white';\r\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n\r\n        ctx.font = 'bolder 50px Montserrat';\r\n        ctx.fillStyle = 'black';\r\n        ctx.textAlign = 'center';\r\n        ctx.fillText(`Global Overview of ${globalOverviewLabel.fullLabel}`, canvas.width / 2, 80);\r\n        ctx.font = '35px Montserrat';\r\n        ctx.textAlign = 'center';\r\n\r\n        const actualMapView = mapLegends.find((x) => x.value === mapView).label;\r\n\r\n        ctx.fillText('Map View: ' + actualMapView, canvas.width / 2, 140);\r\n        ctx.fillText('Dataset: ' + dataset, canvas.width / 2, 190);\r\n        ctx.fillText('Time period: ' + actualTimeInitial + ' to ' + actualTimeFinal, canvas.width / 2, 240);\r\n       if(mapView === 'Genotype prevalence'){\r\n          if (customDropdownMapView.length === 1) {\r\n            ctx.fillText('Selected Genotypes: ' + customDropdownMapView, canvas.width / 2, 290);\r\n          } else if (customDropdownMapView.length > 1) {\r\n            const genotypesText = customDropdownMapView.join(', ');\r\n            ctx.fillText('Selected Genotypes: ' + genotypesText, canvas.width / 2, 290);\r\n          }\r\n        }\r\n        ctx.drawImage(mapImg, 0, textHeight+50, canvas.width, cHeight);\r\n        const legendImg = document.createElement('img');\r\n        const legendImgPromise = imgOnLoadPromise(legendImg);\r\n        let legendWidth = 439;\r\n\r\n        switch (mapView) {\r\n          case 'Dominant Genotype':\r\n            legendWidth = 3085;\r\n            legendImg.src = `legends/MapView_DominantGenotype.png`;\r\n            break;\r\n          case 'No. Samples':\r\n            legendImg.src = 'legends/MapView_NoSamples.png';\r\n            break;\r\n          // case 'Sensitive to all drugs':\r\n          case 'Susceptible to all drugs':\r\n            legendImg.src = 'legends/MapView_Sensitive.png';\r\n            break;\r\n          case 'Genotype prevalence':\r\n            legendImg.src = 'legends/MapView_prevalence.png';\r\n            break;\r\n          default:\r\n            legendImg.src = 'legends/MapView_Others.png';\r\n            break;\r\n        }\r\n        if (mapView === 'Dominant Genotype') {\r\n        await legendImgPromise;\r\n        ctx.drawImage(\r\n          legendImg,\r\n          canvas.width / 2 - legendWidth / 2,\r\n          canvas.height - legendHeight - 30,\r\n          legendWidth,\r\n          legendHeight\r\n        );\r\n      } else {\r\n        await legendImgPromise;\r\n        ctx.drawImage(\r\n          legendImg,\r\n          canvas.width - (canvas.width / 6),\r\n          0,\r\n          legendWidth,\r\n          legendHeight\r\n        );\r\n      }\r\n        const typhinetLogo = document.createElement('img');\r\n        const typhinetLogoPromise = imgOnLoadPromise(typhinetLogo);\r\n        typhinetLogo.src = LogoImg;\r\n        await typhinetLogoPromise;\r\n        ctx.drawImage(typhinetLogo, 25, 25, 500, 200);\r\n\r\n        const base64 = canvas.toDataURL();\r\n        await download(base64, 'TyphiNET - Global Overview Salmonella Typhi.png');\r\n      });\r\n    } catch (error) {\r\n      setShowAlert(true);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  function handleCloseAlert() {\r\n    setShowAlert(false);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.bottomRightControls}>\r\n      <Tooltip title=\"Download Map as PNG\" placement=\"left\">\r\n        <span>\r\n          <IconButton color=\"primary\" onClick={handleClick} disabled={loading}>\r\n            {loading ? <CircularProgress color=\"primary\" size={35} /> : <CameraAlt fontSize=\"large\" />}\r\n          </IconButton>\r\n        </span>\r\n      </Tooltip>\r\n      <Snackbar open={showAlert} autoHideDuration={5000} onClose={handleCloseAlert}>\r\n        <Alert onClose={handleCloseAlert} severity=\"error\" sx={{ width: '100%' }}>\r\n          Something went wrong with the download, please try again later.\r\n        </Alert>\r\n      </Snackbar>\r\n    </div>\r\n  );\r\n};\r\n","// List of Salmonella drugs\r\nexport const drugs = [\r\n  'Ampicillin',\r\n  'Azithromycin',\r\n  'Chloramphenicol',\r\n  // 'Co-trimoxazole',\r\n  'Trimethoprim-sulfamethoxazole',\r\n  // 'ESBL',\r\n  'Ceftriaxone',\r\n  // 'Fluoroquinolones (CipNS)',\r\n  'Ciprofloxacin NS',\r\n  // 'Fluoroquinolones (CipR)',\r\n  'Ciprofloxacin R',\r\n  'Sulphonamides',\r\n  'Susceptible',\r\n  'Tetracyclines',\r\n  'Trimethoprim'\r\n].sort((a, b) => a.localeCompare(b));\r\n\r\nexport const drugsForDrugResistanceGraph = [...drugs, 'XDR', 'MDR'].sort((a, b) => a.localeCompare(b));\r\n\r\nexport const defaultDrugsForDrugResistanceGraph = [\r\n  'Azithromycin',\r\n  'Ceftriaxone',\r\n  'Ciprofloxacin NS',\r\n  'Ciprofloxacin R',\r\n  'MDR',\r\n  'Susceptible',\r\n  'Trimethoprim-sulfamethoxazole',\r\n  'XDR'\r\n];\r\n\r\n// List of Salmonella drug classes\r\nexport const drugClasses = [\r\n  'Ampicillin',\r\n  'Azithromycin',\r\n  'Chloramphenicol',\r\n  // 'Co-trimoxazole',\r\n  'Trimethoprim-sulfamethoxazole',\r\n  // 'ESBL',\r\n  'Ceftriaxone',\r\n  // 'Fluoroquinolones (CipNS)',\r\n  'Ciprofloxacin NS',\r\n  'Sulphonamides',\r\n  'Tetracyclines',\r\n  'Trimethoprim'\r\n];\r\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\r\nimport { defaultDrugsForDrugResistanceGraph } from '../../util/drugs';\r\ninterface GraphState {\r\n  countriesForFilter: Array<string>;\r\n  distributionGraphView: string;\r\n  genotypesYearData: Array<any>;\r\n  drugsYearData: Array<any>;\r\n  drugResistanceGraphView: Array<string>,\r\n  frequenciesGraphView: string;\r\n  frequenciesGraphSelectedGenotypes: Array<string>;\r\n  genotypesDrugsData: Array<any>;\r\n  genotypesDrugClassesData: Array<any>;\r\n  determinantsGraphView: string;\r\n  determinantsGraphDrugClass: string;\r\n  customDropdownMapView: Array<string>;\r\n}\r\n\r\nconst initialState: GraphState = {\r\n  countriesForFilter: [],\r\n  genotypesYearData: [],\r\n  drugsYearData: [],\r\n  genotypesDrugsData: [],\r\n  genotypesDrugClassesData: [],\r\n  distributionGraphView: 'number',\r\n  drugResistanceGraphView: defaultDrugsForDrugResistanceGraph,\r\n  frequenciesGraphView: 'percentage',\r\n  frequenciesGraphSelectedGenotypes: [],\r\n  determinantsGraphView: 'percentage',\r\n  determinantsGraphDrugClass: 'Ciprofloxacin NS',\r\n  customDropdownMapView: [],\r\n};\r\n\r\nexport const graphSlice = createSlice({\r\n  name: 'graph',\r\n  initialState,\r\n  reducers: {\r\n    setCountriesForFilter: (state, action: PayloadAction<Array<string>>) => {\r\n      state.countriesForFilter = action.payload;\r\n    },\r\n    setGenotypesYearData: (state, action: PayloadAction<Array<any>>) => {\r\n      state.genotypesYearData = action.payload;\r\n    },\r\n    setDrugsYearData: (state, action: PayloadAction<Array<any>>) => {\r\n      state.drugsYearData = action.payload;\r\n    },\r\n    setDistributionGraphView: (state, action: PayloadAction<string>) => {\r\n      state.distributionGraphView = action.payload;\r\n    },\r\n    setDrugResistanceGraphView: (state, action: PayloadAction<Array<string>>) => {\r\n      state.drugResistanceGraphView = action.payload;\r\n    },\r\n    setFrequenciesGraphView: (state, action: PayloadAction<string>) => {\r\n      state.frequenciesGraphView = action.payload;\r\n    },\r\n    setFrequenciesGraphSelectedGenotypes: (state, action: PayloadAction<Array<string>>) => {\r\n      state.frequenciesGraphSelectedGenotypes = action.payload;\r\n    },\r\n    setGenotypesDrugsData: (state, action: PayloadAction<Array<any>>) => {\r\n      state.genotypesDrugsData = action.payload;\r\n    },\r\n    setDeterminantsGraphView: (state, action: PayloadAction<string>) => {\r\n      state.determinantsGraphView = action.payload;\r\n    },\r\n    setDeterminantsGraphDrugClass: (state, action: PayloadAction<string>) => {\r\n      state.determinantsGraphDrugClass = action.payload;\r\n    },\r\n    setGenotypesDrugClassesData: (state, action: PayloadAction<Array<any>>) => {\r\n      state.genotypesDrugClassesData = action.payload;\r\n    },\r\n    setCustomDropdownMapView: (state, action: PayloadAction<Array<string>>) => {\r\n      state.customDropdownMapView = action.payload;\r\n    },\r\n  }\r\n});\r\n\r\nexport const {\r\n  setCountriesForFilter,\r\n  setDistributionGraphView,\r\n  setGenotypesYearData,\r\n  setDrugsYearData,\r\n  setDrugResistanceGraphView,\r\n  setFrequenciesGraphView,\r\n  setFrequenciesGraphSelectedGenotypes,\r\n  setGenotypesDrugsData,\r\n  setDeterminantsGraphView,\r\n  setDeterminantsGraphDrugClass,\r\n  setGenotypesDrugClassesData,\r\n  setCustomDropdownMapView\r\n} = graphSlice.actions;\r\n\r\nexport default graphSlice.reducer;\r\n","import { makeStyles } from '@mui/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  topRightControls: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    position: 'absolute',\r\n    top: 0,\r\n    right: 0,\r\n    marginTop: '200px',\r\n    minWidth:'209px',\r\n    // width:'25%',\r\n    '@media (max-width: 1000px)': {\r\n      // width: \r\n    },\r\n    '@media (max-width: 700px)': {\r\n      position: 'relative',\r\n      marginTop: '0px',\r\n      width:'100%',\r\n    },\r\n    // '&$bp700': {\r\n    //   position: 'relative'\r\n    // }\r\n    \r\n  },\r\n\r\n  dropdown:{\r\n    '& .MuiTypography-root': {\r\n      fontSize: '14px',\r\n      height:'20px',\r\n      padding:'0px'\r\n      // width:'20px',\r\n    }\r\n  },\r\n  checkbox:{\r\n    '& .MuiCheckbox-root': {\r\n      backgroundColor:'blue',\r\n      color:'red',\r\n      padding:'0px'\r\n      // width:'20px',\r\n    }\r\n  },\r\n  card: { borderRadius: '6px !important' },\r\n  cardContent: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    rowGap: '4px'\r\n  },\r\n  frequenciesGraph: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    borderTop: '1px solid rgba(0, 0, 0, 0.12)',\r\n    textAlign: 'justify',\r\n  },\r\n  selectsWrapper: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    rowGap: '4px'\r\n  },\r\n  selectWrapper: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    rowGap: '8px'\r\n  },\r\n  labelWrapper: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    columnGap: '8px'\r\n  },\r\n  labelTooltipIcon: {\r\n    cursor: 'pointer'\r\n  },\r\n   label: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    columnGap: '8px'\r\n  },\r\n  dataViewSelectInput: {\r\n    fontSize: '14px !important',\r\n    fontWeight: '600 !important',\r\n    padding: '8px 32px 8px 8px !important'\r\n  },\r\n  dataViewSelectMenu: {\r\n    '& .MuiMenuItem-root': {\r\n      fontSize: '14px'\r\n    }\r\n  },\r\n  genotypesSelectInput: {\r\n    fontSize: '14px !important',\r\n    fontWeight: '600 !important',\r\n    padding: '8px 110px 8px 15px !important',\r\n    marginRight: '-80px !important'\r\n  },\r\n  genotypesSelectButton: {\r\n    height: '20px',\r\n    fontSize: '8px !important',\r\n    padding: '3px 5px !important',\r\n    whiteSpace: 'nowrap',\r\n    position: 'absolute',\r\n    right: '18px'\r\n  },\r\n  genotypesMenuPaper: {\r\n    maxHeight: '350px !important'\r\n  },\r\n  genotypesSelectMenu: {\r\n    '& .MuiCheckbox-root': {\r\n      padding: '0px 8px 0px 0px'\r\n    },\r\n    '& .MuiTypography-root': {\r\n      fontSize: '14px'\r\n    }\r\n  },\r\n  graphWrapper: {\r\n    paddingTop: '16px',\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    gap: '16px',\r\n    height: '560px',\r\n\r\n    '@media (max-width: 1000px)': {\r\n      flexDirection: 'column',\r\n      height: '100%'\r\n    }\r\n  },\r\n  graph: {\r\n    height: '100%',\r\n    width: '70%',\r\n\r\n    '@media (max-width: 1000px)': {\r\n      width: '100%'\r\n    },\r\n\r\n    '@media (max-width: 500px)': {\r\n      width: '100%',\r\n      height: '460px'\r\n    }\r\n  },\r\n  graphLabel: {\r\n    textAnchor: 'middle'\r\n  },\r\n  legendWrapper: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    overflowX: 'auto',\r\n    flexWrap: 'wrap',\r\n    height: '110px',\r\n    gap: '4px',\r\n    padding: '8px 0px 4px',\r\n    marginLeft: '60px'\r\n  },\r\n  legendItemWrapper: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    columnGap: '4px',\r\n    paddingRight: '8px'\r\n  },\r\n  colorCircle: {\r\n    height: '10px',\r\n    width: '10px',\r\n    borderRadius: '50%',\r\n    minWidth: '10px'\r\n  },\r\n  chartTooltipLabel: {\r\n    backgroundColor: '#fff',\r\n    padding: '8px',\r\n    border: 'solid rgba(0, 0, 0, 0.25) 1px'\r\n  },\r\n  tooltipWrapper: {\r\n    width: '30%',\r\n    borderRadius: '6px',\r\n    backgroundColor: '#E5E5E5',\r\n    overflowY: 'auto',\r\n\r\n    '@media (max-width: 1000px)': {\r\n      width: '100%',\r\n      height: '250px'\r\n    }\r\n  },\r\n  tooltip: {\r\n    width: '100%',\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column'\r\n  },\r\n  tooltipTitle: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    columnGap: '8px',\r\n    alignItems: 'flex-end',\r\n    padding: '16px 16px 8px',\r\n    borderBottom: '1px solid #fff'\r\n  },\r\n  tooltipContent: {\r\n    display: 'grid',\r\n    gridTemplateColumns: 'repeat(12, 1fr)',\r\n    flexWrap: 'wrap',\r\n    gap: '16px',\r\n    padding: '16px',\r\n    overflowY: 'auto'\r\n  },\r\n  tooltipItemWrapper: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    columnGap: '8px',\r\n    gridColumn: 'span 6'\r\n  },\r\n  tooltipItemBox: {\r\n    height: '18px',\r\n    width: '18px',\r\n    border: 'solid rgb(0, 0, 0, 0.75) 0.5px',\r\n    flex: 'none'\r\n  },\r\n  tooltipItemStats: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n\r\n    '& .MuiTypography-body2': {\r\n      overflowWrap: 'anywhere'\r\n    }\r\n  },\r\n  noGenotypeSelected: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    height: '100%'\r\n  }\r\n}));\r\n\r\nexport { useStyles };\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Button, Card, CardContent, Checkbox, ListItemText, MenuItem, Select, Tooltip, Typography, InputAdornment} from '@mui/material';\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport { useState } from 'react';\r\nimport { useAppDispatch, useAppSelector } from '../../../../stores/hooks';\r\nimport { setCustomDropdownMapView } from '../../../../stores/slices/graphSlice';\r\nimport { useStyles } from './TopRightControls2MUI';\r\nimport TextField from '@mui/material/TextField';\r\nimport { InfoOutlined } from '@mui/icons-material';\r\n\r\n\r\nexport const TopRightControls2 = () => {\r\n  const classes = useStyles();\r\n  const [, setCurrentTooltip] = useState(null);\r\n  const [searchValue2, setSearchValue2] = useState(\"\")\r\n  const dispatch = useAppDispatch();\r\n  const organism = useAppSelector((state) => state.dashboard.organism);\r\n  const genotypesDrugsData = useAppSelector((state) => state.graph.genotypesDrugsData);\r\n  const customDropdownMapView = useAppSelector((state) => state.graph.customDropdownMapView);\r\n\r\n  // useEffect(() => {\r\n  //   setCurrentTooltip(null);\r\n  // }, [genotypesDrugsData, customDropdownMapView]);\r\n\r\n  function getSelectGenotypeLabel(genotype) {\r\n    const percentage = Number(((genotype.Susceptible / genotype.totalCount) * 100).toFixed(2));\r\n\r\n    return `${genotype.name} (total N=${genotype.totalCount===0 ? 0:`${genotype.totalCount},${percentage}% Susceptible`})`;\r\n  }\r\n  \r\n\r\n  function handleChangeSelectedGenotypes({ event = null, all = false }) {\r\n    if (all) {\r\n      dispatch(setCustomDropdownMapView([]));\r\n      setCurrentTooltip(null);\r\n      return;\r\n    }\r\n\r\n    const {\r\n      target: { value }\r\n    } = event;\r\n\r\n    if (customDropdownMapView.length === 10 && value.length > 10) {\r\n      return;\r\n    }\r\n\r\n    if (value.length === 0) {\r\n      setCurrentTooltip(null);\r\n    }\r\n    dispatch(setCustomDropdownMapView(value));\r\n  }\r\n\r\n function setSearchValue(event){\r\n  event.preventDefault()\r\n  setSearchValue2(event.target.value)\r\n }\r\n\r\nconst filteredData = genotypesDrugsData.filter((genotype) =>\r\n  genotype.name.includes(searchValue2.toLowerCase()) || genotype.name.includes(searchValue2.toUpperCase())\r\n);\r\n\r\n  return (\r\n    <div className={`${classes.topRightControls}`}>\r\n      <Card elevation={3} className={classes.card}>\r\n        <CardContent className={classes.frequenciesGraph}>\r\n          <div className={classes.label}>\r\n            <Typography variant=\"caption\">Select genotype</Typography>\r\n            <Tooltip\r\n              title=\"Select up to 10 Genotypes\"\r\n              placement=\"top\"\r\n            >\r\n              <InfoOutlined color=\"action\" fontSize=\"small\" className={classes.labelTooltipIcon} />\r\n            </Tooltip>\r\n          </div>\r\n            <Select\r\n              multiple\r\n              // labelId=\"search-select-label\"\r\n              id=\"search-select\"\r\n              value={customDropdownMapView}\r\n              onChange={(event) => handleChangeSelectedGenotypes({ event })}\r\n              disabled={organism === 'none'}\r\n              displayEmpty\r\n              onClose={(e) => setSearchValue2(\"\")}\r\n              endAdornment={\r\n                <Button\r\n                size=\"small\"\r\n                variant=\"outlined\"\r\n                className={classes.genotypesSelectButton}\r\n                onClick={() => handleChangeSelectedGenotypes({ all: true })}\r\n                disabled={customDropdownMapView.length === 0}\r\n                color=\"error\"\r\n              >\r\n                Clear\r\n              </Button>\r\n              }\r\n              inputProps={{ className: classes.genotypesSelectInput }}\r\n              MenuProps={{ classes: { paper: classes.genotypesMenuPaper, list: classes.genotypesSelectMenu } }}\r\n              renderValue={(selected) => (\r\n                selected.length === 1 ? (\r\n                  <Typography variant=\"caption\">{selected}</Typography>\r\n                ) : (\r\n                  <Typography variant=\"caption\">{`${selected.length} genotypes`}</Typography>\r\n                ))\r\n              }\r\n            >\r\n              <TextField \r\n                size=\"small\"\r\n                autoFocus\r\n                placeholder=\"Type to search...\"\r\n                label=\"Search genotype\" \r\n                variant=\"standard\" \r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      <SearchIcon />\r\n                    </InputAdornment>\r\n                  ),\r\n                  endAdornment: (\r\n                    <InputAdornment position=\"end\">\r\n                      <Button\r\n                        size=\"small\"\r\n                        variant=\"outlined\"\r\n                        className={classes.genotypesSelectButton}\r\n                        onClick={(e) => {\r\n                          handleChangeSelectedGenotypes({ all: true });\r\n                        }}\r\n                        disabled={customDropdownMapView.length === 0}\r\n                        color=\"error\"\r\n                      >\r\n                        Clear\r\n                      </Button>\r\n                    </InputAdornment>\r\n                  )\r\n                }}\r\n                sx={{ width:'90%', margin:'0% 5%'}}\r\n                onChange={e => setSearchValue(e)}\r\n                onKeyDown={(e) => e.stopPropagation()}\r\n              />\r\n              {filteredData.map((genotype, index) => (\r\n                <MenuItem key={`frequencies-option-${index}`} value={genotype.name} className={classes.dropdown}>\r\n                  <Checkbox disableRipple sx={{padding: '0px', marginRight:'5px'}} checked={customDropdownMapView.indexOf(genotype.name) > -1} />\r\n                  <ListItemText primary={getSelectGenotypeLabel(genotype)}   />\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n        </CardContent>\r\n     </Card>\r\n    </div>\r\n  );\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Card, CardContent, Typography, useMediaQuery } from '@mui/material';\r\nimport { ComposableMap, Geographies, Geography, Graticule, Sphere, ZoomableGroup } from 'react-simple-maps';\r\nimport { useStyles } from './MapMUI';\r\nimport geography from '../../../assets/world-50m.json';\r\nimport { darkGrey, getColorForGenotype, lightGrey, zeroCountColor, zeroPercentColor } from '../../../util/colorHelper';\r\nimport { redColorScale, samplesColorScale, sensitiveColorScale, redColorScale2 } from './mapColorHelper';\r\nimport ReactTooltip from 'react-tooltip';\r\nimport { BottomLeftControls } from './BottomLeftControls';\r\nimport { useAppDispatch, useAppSelector } from '../../../stores/hooks';\r\nimport { setPosition, setTooltipContent } from '../../../stores/slices/mapSlice.ts';\r\nimport { TopRightControls } from './TopRightControls';\r\nimport { setActualCountry } from '../../../stores/slices/dashboardSlice.ts';\r\nimport { TopLeftControls } from './TopLeftControls';\r\nimport { BottomRightControls } from './BottomRightControls';\r\nimport { TopRightControls2 } from './TopRightControls2';\r\n\r\n\r\nconst statKey = {\r\n  MDR: 'MDR',\r\n  'H58 / Non-H58': 'H58',\r\n  XDR: 'XDR',\r\n  AzithR: 'AzithR',\r\n  CipNS: 'CipNS',\r\n  CipR: 'CipR',\r\n  // Sensitive to all drugs': 'Susceptible'\r\n  'Susceptible to all drugs': 'Susceptible'\r\n};\r\n\r\nexport const Map = () => {\r\n  const classes = useStyles();\r\n  const matches = useMediaQuery('(max-width:700px)');\r\n\r\n  const dispatch = useAppDispatch();\r\n  const position = useAppSelector((state) => state.map.position);\r\n  const mapData = useAppSelector((state) => state.map.mapData);\r\n  const mapView = useAppSelector((state) => state.map.mapView);\r\n  const tooltipContent = useAppSelector((state) => state.map.tooltipContent);\r\n  const globalOverviewLabel = useAppSelector((state) => state.dashboard.globalOverviewLabel);\r\n  // const frequenciesGraphSelectedGenotypes = useAppSelector((state) => state.graph.frequenciesGraphSelectedGenotypes);\r\n  const customDropdownMapView = useAppSelector((state) => state.graph.customDropdownMapView);\r\n  const ifCustom = useAppSelector((state) => state.map.ifCustom);\r\n\r\n\r\n  function handleOnClick(countryData) {\r\n    if (countryData !== undefined) {\r\n      dispatch(setActualCountry(countryData.name));\r\n    }\r\n  }\r\n\r\n  function handleOnMouseLeave() {\r\n    dispatch(setTooltipContent(null));\r\n  }\r\n\r\n  function handleOnMouseEnter({ geo, countryStats, countryData, smallerThan20 = false, showTooltip = false }) {\r\n    const { NAME } = geo.properties;\r\n    const tooltip = {\r\n      name: NAME,\r\n      content: {},\r\n      smallerThan20\r\n    };\r\n\r\n    if (countryData !== undefined) {\r\n      switch (mapView) {\r\n        case 'No. Samples':\r\n          Object.assign(tooltip, {\r\n            content: {\r\n              Samples: countryData.count,\r\n              Genotypes: countryStats.GENOTYPE.count,\r\n              H58: `${countryStats.H58.percentage}%`,\r\n              MDR: `${countryStats.MDR.percentage}%`,\r\n              XDR: `${countryStats.XDR.percentage}%`,\r\n              AzithR: `${countryStats.AzithR.percentage}%`,\r\n              CipR: `${countryStats.CipR.percentage}%`,\r\n              CipNS: `${countryStats.CipNS.percentage}%`,\r\n              Susceptible: `${countryStats.Susceptible.percentage}%`\r\n            }\r\n          });\r\n          break;\r\n        case 'Dominant Genotype':\r\n          const genotypes = countryStats.GENOTYPE.items.slice(0, 5);\r\n          genotypes.forEach((genotype) => {\r\n            tooltip.content[genotype.name] = genotype.count;\r\n          });\r\n          break;\r\n        case 'H58 / Non-H58':\r\n        case 'MDR':\r\n        case 'Susceptible to all drugs': // case 'Sensitive to all drugs':\r\n        case 'XDR':\r\n        case 'AzithR':\r\n        case 'CipR':\r\n          if (showTooltip) {\r\n            tooltip.content[statKey[mapView]] = {\r\n              count: countryStats[statKey[mapView]].count,\r\n              percentage: `${countryStats[statKey[mapView]].percentage}%`\r\n            };\r\n          }\r\n          break;\r\n        case 'CipNS':\r\n          if (showTooltip) {\r\n            const combinedCount = (countryStats[statKey[\"CipR\"]].count || 0) + (countryStats[statKey[\"CipNS\"]].count || 0);\r\n            const combinedPercentage = (\r\n              (countryStats[statKey[\"CipR\"]].percentage || 0) + (countryStats[statKey[\"CipNS\"]].percentage || 0));\r\n            tooltip.content['CipNS'] = {\r\n              count: combinedCount,\r\n              percentage: `${combinedPercentage.toFixed(2)}%`\r\n            };\r\n          }\r\n\r\n          break;\r\n        case 'Genotype prevalence':\r\n            let percentCounter = 0;        \r\n            const genotypes1 = countryStats.GENOTYPE.items;\r\n            let genotypes2 = [];\r\n            genotypes1.forEach((genotype) => {\r\n               if (customDropdownMapView.includes(genotype.name)){\r\n                  genotypes2.push(genotype);}\r\n                percentCounter += genotype.count;\r\n            });\r\n            genotypes1.forEach((genotype) => {\r\n               if (customDropdownMapView.includes(genotype.name))\r\n                tooltip.content[genotype.name] = `${genotype.count} (${((genotype.count/percentCounter)*100).toFixed(2)} %)`;\r\n            });\r\n            if (genotypes2.length > 0) {\r\n              let sumCount = 0;\r\n              for (const genotype of genotypes2) {\r\n                sumCount += genotype.count;\r\n              }\r\n              if(countryData.count>=20 && genotypes2.length > 1 )\r\n                tooltip.content['All selected genotypes'] = `${sumCount} (${((sumCount/percentCounter)*100).toFixed(2)} %)`;\r\n\r\n            }\r\n          break;\r\n\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n\r\n    dispatch(setTooltipContent(tooltip));\r\n  }\r\n\r\n  function handleOnMoveEnd(value) {\r\n    dispatch(setPosition(value));\r\n  }\r\n\r\n  function showPercentage() {\r\n    return !['Dominant Genotype','Genotype prevalence','No. Samples'].includes(mapView);\r\n  }\r\n\r\n  return (\r\n    <Card className={classes.card} elevation={2}>\r\n      <CardContent className={classes.cardContent}>\r\n        <Typography gutterBottom variant=\"h5\" fontWeight={'bold'}>\r\n          Global Overview{' '}\r\n          <span>\r\n            of <i>{globalOverviewLabel.italicLabel}</i> {globalOverviewLabel.label}\r\n          </span>\r\n        </Typography>\r\n        <div className={classes.mapWrapper}>\r\n          <ComposableMap\r\n            className={classes.composableMap}\r\n            id=\"global-overview-map\"\r\n            data-tip=\"\"\r\n            projectionConfig={{\r\n              rotate: [-10, 0, 0],\r\n              scale: 210\r\n            }}\r\n          >\r\n            <ZoomableGroup\r\n              zoom={position.zoom}\r\n              center={position.coordinates}\r\n              onMoveEnd={(value) => {\r\n                handleOnMoveEnd(value);\r\n              }}\r\n            >\r\n              <Sphere stroke=\"#E4E5E6\" strokeWidth={0.5} />\r\n              <Graticule stroke=\"#E4E5E6\" strokeWidth={0.5} />\r\n              <Geographies geography={geography}>\r\n                {({ geographies }) => {\r\n                  return geographies.map((geo) => {\r\n                    const countryData = mapData.find((item) => item.name === geo.properties.NAME);\r\n                    const countryStats = countryData?.stats;\r\n                    let fillColor = lightGrey;\r\n                    let smallerThan20 = false;\r\n                    let showTooltip = false;\r\n\r\n                    if (countryData) {\r\n                      let count = 0;\r\n\r\n                      switch (mapView) {\r\n                        case 'No. Samples':\r\n                          if (countryData.count > 0) {\r\n                            fillColor = samplesColorScale(countryData.count);\r\n                          } else {\r\n                            fillColor = zeroCountColor;\r\n                          }\r\n                          break;\r\n                        case 'Dominant Genotype':\r\n                          const genotypes = countryStats.GENOTYPE.items;\r\n                          fillColor = getColorForGenotype(genotypes[0].name);\r\n                          break;\r\n                        case 'Genotype prevalence':\r\n                          let percentCounter = 0;        \r\n                          const genotypes1 = countryStats.GENOTYPE.items;\r\n                          let genotypes2 = [];\r\n                          genotypes1.forEach((genotype) => {\r\n                            if (customDropdownMapView.includes(genotype.name))\r\n                                genotypes2.push(genotype);\r\n                              percentCounter += genotype.count;\r\n                          });\r\n                \r\n                          let sumCount = 0;\r\n\r\n                          if (genotypes2.length > 0 ) {\r\n                            for (const genotype of genotypes2) {\r\n                              sumCount += genotype.count;\r\n\r\n                            }\r\n                          }\r\n                          if (countryData.count >= 20 && genotypes2.length > 0) {\r\n                            if (genotypes2 !== undefined) {\r\n                              fillColor = redColorScale2(((sumCount/percentCounter)*100).toFixed(2));\r\n                            }\r\n                          }\r\n                          else if (countryData.count>=20) {\r\n                            fillColor = darkGrey;\r\n                            smallerThan20 = true;\r\n                          }\r\n\r\n                          break;\r\n\r\n                        case 'Susceptible to all drugs': // case 'Sensitive to all drugs':\r\n                        case 'H58 / Non-H58':\r\n                        case 'MDR':\r\n                        case 'XDR':\r\n                        case 'AzithR':\r\n                        case 'CipR':\r\n                          count = countryStats[statKey[mapView]]?.count;\r\n                          if (countryData.count >= 20 && count > 0) {\r\n                            if (mapView === 'Susceptible to all drugs') {\r\n                              fillColor = sensitiveColorScale(countryStats[statKey[mapView]].percentage);\r\n                            } else {\r\n                              fillColor = redColorScale(countryStats[statKey[mapView]].percentage);\r\n                            }\r\n                            showTooltip = true;\r\n                          } else if (countryData.count >= 20) {\r\n                            if (mapView === 'Susceptible to all drugs') {\r\n                              fillColor = zeroPercentColor;\r\n                            } else {\r\n                              fillColor = darkGrey;\r\n                            }\r\n                            smallerThan20 = true;\r\n                          }\r\n                          break;\r\n                        case 'CipNS':\r\n                          let countCipR = countryStats[statKey[\"CipR\"]]?.count;\r\n                          let countCipNS = countryStats[statKey[\"CipNS\"]]?.count;\r\n                          count = countCipR + countCipNS;\r\n                          // count = countryStats[statKey[mapView]]?.count;\r\n                          let per = countryStats[statKey[\"CipNS\"]].percentage + countryStats[statKey[\"CipR\"]].percentage;\r\n                          console.log(\"per\", countryStats[statKey[\"CipNS\"]], per)\r\n                          if (countryData.count >= 20 && count > 0) {\r\n                            if (mapView === 'Susceptible to all drugs') {\r\n                              fillColor = sensitiveColorScale(per);\r\n                            } else {\r\n                              fillColor = redColorScale(per);\r\n                            }\r\n                            showTooltip = true;\r\n                          } else if (countryData.count >= 20) {\r\n                            if (mapView === 'Susceptible to all drugs') {\r\n                              fillColor = zeroPercentColor;\r\n                            } else {\r\n                              fillColor = darkGrey;\r\n                            }\r\n                            smallerThan20 = true;\r\n                          }\r\n                          break;\r\n                        default:\r\n                          break;\r\n                      }\r\n                    }\r\n\r\n                    return (\r\n                      <Geography\r\n                        key={geo.rsmKey}\r\n                        geography={geo}\r\n                        cursor=\"pointer\"\r\n                        fill={fillColor}\r\n                        onClick={() => handleOnClick(countryData)}\r\n                        onMouseLeave={handleOnMouseLeave}\r\n                        onMouseEnter={() =>\r\n                          handleOnMouseEnter({\r\n                            geo,\r\n                            countryStats,\r\n                            countryData,\r\n                            smallerThan20,\r\n                            showTooltip\r\n                          })\r\n                        }\r\n                        style={{\r\n                          default: {\r\n                            outline: 'none'\r\n                          },\r\n                          hover: {\r\n                            stroke: '#607D8B',\r\n                            strokeWidth: 1,\r\n                            outline: 'none'\r\n                          },\r\n                          pressed: {\r\n                            fill: '#FF5722',\r\n                            stroke: '#607D8B',\r\n                            strokeWidth: 1,\r\n                            outline: 'none'\r\n                          }\r\n                        }}\r\n                      />\r\n                    );\r\n                  });\r\n                }}\r\n              </Geographies>\r\n            </ZoomableGroup>\r\n          </ComposableMap>\r\n          {!matches && (\r\n            <>\r\n              <TopLeftControls />\r\n              <TopRightControls />\r\n              {ifCustom ? <TopRightControls2/> : null}\r\n            </>\r\n          )}\r\n          <BottomLeftControls />\r\n          <BottomRightControls />\r\n        </div>\r\n        {matches && (\r\n          <div className={classes.topControls}>\r\n            <TopRightControls />\r\n            {ifCustom ? <TopRightControls2/> : null}\r\n            <TopLeftControls />\r\n          </div>\r\n        )}\r\n        <ReactTooltip>\r\n          {tooltipContent && (\r\n            <div className={classes.tooltipMap}>\r\n              <span className={classes.country}>{tooltipContent.name}</span>\r\n              <div className={classes.tooltipInfo}>\r\n                {Object.keys(tooltipContent.content).map((key, index) => {\r\n                  return (\r\n                    <div key={`tooltip-${index}`} className={classes.info}>\r\n                      {mapView === 'Dominant Genotype' && (\r\n                        <div\r\n                          className={classes.color}\r\n                          style={{\r\n                            backgroundColor: getColorForGenotype(key)\r\n                          }}\r\n                        />\r\n                      )}\r\n                      <span key={`info-${index}`}>\r\n                        <span>{key}:</span>\r\n                        {showPercentage() ? (\r\n                          <span>{` ${tooltipContent.content[key].count} (${tooltipContent.content[key].percentage})`}</span>\r\n                        ) : (\r\n                          <span>{` ${tooltipContent.content[key]}`}</span>\r\n                        )}\r\n                      </span>\r\n                    </div>\r\n                  );\r\n                })}\r\n                {Object.keys(tooltipContent.content).length === 0 && (\r\n                  <span>{tooltipContent.smallerThan20 ? '0%' : 'Insufficient data'}</span>\r\n                )}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </ReactTooltip>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n","import { makeStyles } from '@mui/styles';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  footer: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    padding: '16px 0px 0px',\r\n    columnGap: '20px',\r\n    rowGap: '24px'\r\n  },\r\n  actions: {\r\n    display: 'flex',\r\n    gap: '8px',\r\n    width: '100%',\r\n    justifyContent: 'space-around',\r\n\r\n    '@media (max-width: 750px)': {\r\n      flexDirection: 'column'\r\n    }\r\n  },\r\n  button: {\r\n    color: '#fff !important',\r\n    textTransform: 'none !important',\r\n    paddingTop: '8px !important',\r\n    paddingBottom: '8px !important',\r\n    borderRadius: '100px !important',\r\n    fontSize: '20px !important',\r\n    fontWeight: '600 !important',\r\n    height: '40px',\r\n\r\n    '@media (max-width: 750px)': {\r\n      width: '100%'\r\n    }\r\n  },\r\n  text: {\r\n    textAlign: 'center'\r\n  }\r\n}));\r\n\r\nexport { useStyles };\r\n","import { Button, Typography } from '@mui/material';\r\nimport { useStyles } from './FooterMUI';\r\nimport { Email, GitHub, Twitter } from '@mui/icons-material';\r\n\r\nexport const Footer = () => {\r\n  const classes = useStyles();\r\n\r\n  function handleClickContact() {\r\n    window.open('mailto:dashboard@typhi.net', '_blank');\r\n  }\r\n\r\n  function handleClickDocumentation() {\r\n    window.open('https://github.com/zadyson/TyphiNET/wiki', '_blank');\r\n  }\r\n\r\n  function handleClickGitHub() {\r\n    window.open('https://github.com/zadyson/TyphiNET', '_blank');\r\n  }\r\n\r\n  function handleClickTwitter() {\r\n    window.open('https://twitter.com/typhinet', '_blank');\r\n  }\r\n\r\n  return (\r\n    <div className={classes.footer}>\r\n      <div className={classes.actions}>\r\n        <Button className={classes.button} variant=\"contained\" onClick={handleClickContact} startIcon={<Email />}>\r\n          Contact\r\n        </Button>\r\n        <Button\r\n          className={classes.button}\r\n          variant=\"contained\"\r\n          onClick={handleClickDocumentation}\r\n          startIcon={<GitHub />}\r\n        >\r\n          Documentation\r\n        </Button>\r\n        <Button className={classes.button} variant=\"contained\" onClick={handleClickGitHub} startIcon={<GitHub />}>\r\n          GitHub\r\n        </Button>\r\n        <Button className={classes.button} variant=\"contained\" onClick={handleClickTwitter} startIcon={<Twitter />}>\r\n          Twitter\r\n        </Button>\r\n      </div>\r\n      <Typography className={classes.text}>\r\n        Data obtained from:{' '}\r\n        <a href=\"https://pathogen.watch\" rel=\"noreferrer\" target=\"_blank\">\r\n          pathogen watch project\r\n        </a>{' '}\r\n        on 12/09/2023.{' '}\r\n        <a href=\"https://holtlab.net\" rel=\"noreferrer\" target=\"_blank\">\r\n          Holt Lab\r\n        </a>\r\n      </Typography>\r\n    </div>\r\n  );\r\n};\r\n","// Static routes to run the app. Only use one: local or heroku.\r\nexport const API_ENDPOINT = 'http://localhost:8080/api/';\r\n//export const API_ENDPOINT = 'https://typhinetdev.herokuapp.com/api/';\r\n","import { makeStyles } from '@mui/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  graphsCard: {\r\n    display: 'grid',\r\n    gridTemplateColumns: 'repeat(12, 1fr)',\r\n    flexDirection: 'column',\r\n    gap: '16px',\r\n    padding: '16px',\r\n    overflow: 'visible !important',\r\n\r\n    '@media (max-width: 500px)': {\r\n      rowGap: '8px',\r\n      padding: '8px'\r\n    },\r\n\r\n    '&.MuiCard-root': {\r\n      borderRadius: '16px'\r\n    }\r\n  },\r\n  card: {\r\n    gridColumn: 'span 6',\r\n    overflow: 'visible !important',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n\r\n    '&.MuiCard-root': {\r\n      borderRadius: '16px'\r\n    },\r\n\r\n    '@media (max-width: 1000px)': {\r\n      gridColumn: 'span 12'\r\n    }\r\n  },\r\n  cardActions: {\r\n    display: 'flex',\r\n    columnGap: '8px',\r\n    flexDirection: 'column',\r\n    justifyContent: 'space-between',\r\n    padding: '16px 16px 0px !important'\r\n  },\r\n  cardContent: {\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center'\r\n  },\r\n  titleWrapper: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    columnGap: '16px',\r\n    textAlign: 'center'\r\n  },\r\n  downloadWrapper: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    columnGap: '8px'\r\n  }\r\n}));\r\n\r\nexport { useStyles };\r\n","import { makeStyles } from '@mui/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  determinantsGraph: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    height: '100%',\r\n    maxWidth: '920px',\r\n    width: '-webkit-fill-available'\r\n  },\r\n  selectsWrapper: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    rowGap: '8px',\r\n    width: '70%',\r\n\r\n    '@media (max-width: 1000px)': {\r\n      width: '100%'\r\n    }\r\n  },\r\n  selectWrapper: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    rowGap: '4px',\r\n    width: '100%',\r\n    alignItems: 'center'\r\n  },\r\n  selectLabel: {\r\n    width: '100%'\r\n  },\r\n  select: {\r\n    width: '100%'\r\n  },\r\n  selectInput: {\r\n    fontSize: '14px !important',\r\n    fontWeight: '600 !important',\r\n    padding: '8px 32px 8px 8px !important'\r\n  },\r\n  selectMenu: {\r\n    '& .MuiMenuItem-root': {\r\n      fontSize: '14px'\r\n    }\r\n  },\r\n  graphWrapper: {\r\n    paddingTop: '16px',\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    gap: '16px',\r\n    height: '560px',\r\n    width: '100%',\r\n\r\n    '@media (max-width: 500px)': {\r\n      height: '460px'\r\n    }\r\n  },\r\n  graph: {\r\n    height: '100%',\r\n    width: '100%'\r\n  },\r\n  graphLabel: {\r\n    textAnchor: 'middle'\r\n  },\r\n  legendWrapper: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    overflowX: 'auto',\r\n    flexWrap: 'wrap',\r\n    height: '110px',\r\n    gap: '4px',\r\n    padding: '8px 0px 4px',\r\n    marginLeft: '60px'\r\n  },\r\n  legendItemWrapper: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    columnGap: '4px',\r\n    paddingRight: '8px'\r\n  },\r\n  colorCircle: {\r\n    height: '10px',\r\n    width: '10px',\r\n    borderRadius: '50%',\r\n    minWidth: '10px'\r\n  },\r\n  tooltip: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    backgroundColor: '#fff',\r\n    padding: '16px',\r\n    border: 'solid rgba(0, 0, 0, 0.25) 1px',\r\n    rowGap: '16px'\r\n  },\r\n  tooltipTitle: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    columnGap: '8px',\r\n    alignItems: 'flex-end'\r\n  },\r\n  tooltipContent: {\r\n    display: 'grid',\r\n    gap: '8px',\r\n    gridTemplateColumns: 'repeat(12, 1fr)',\r\n    width: '450px',\r\n\r\n    '@media (max-width: 1200px)': {\r\n      width: '320px'\r\n    },\r\n\r\n    '@media (max-width: 1000px)': {\r\n      width: '450px'\r\n    },\r\n\r\n    '@media (max-width: 650px)': {\r\n      width: '320px'\r\n    },\r\n\r\n    '@media (max-width: 400px)': {\r\n      width: '275px'\r\n    }\r\n  },\r\n  tooltipItemWrapper: {\r\n    gridColumn: 'span 6',\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    columnGap: '8px'\r\n  },\r\n  tooltipItemBox: {\r\n    height: '18px',\r\n    width: '18px',\r\n    border: 'solid rgb(0, 0, 0, 0.75) 0.5px',\r\n    flex: 'none'\r\n  },\r\n  tooltipItemStats: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n\r\n    '& .MuiTypography-body2': {\r\n      overflowWrap: 'anywhere'\r\n    }\r\n  }\r\n}));\r\n\r\nexport { useStyles };\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Box, CardContent, MenuItem, Select, Typography, useMediaQuery } from '@mui/material';\r\nimport { useStyles } from './DeterminantsGraphMUI';\r\nimport {\r\n  Bar,\r\n  BarChart,\r\n  CartesianGrid,\r\n  Label,\r\n  Legend,\r\n  ResponsiveContainer,\r\n  XAxis,\r\n  YAxis,\r\n  Tooltip as ChartTooltip,\r\n  Brush\r\n} from 'recharts';\r\nimport { useAppDispatch, useAppSelector } from '../../../../stores/hooks';\r\nimport { setDeterminantsGraphDrugClass, setDeterminantsGraphView } from '../../../../stores/slices/graphSlice';\r\nimport { drugClasses } from '../../../../util/drugs';\r\nimport { useEffect, useState } from 'react';\r\nimport { colorForDrugClasses, hoverColor } from '../../../../util/colorHelper';\r\n\r\nconst dataViewOptions = [\r\n  { label: 'Number of genomes', value: 'number', graphLabel: 'Number of occurrences' },\r\n  { label: 'Percentage per genotype', value: 'percentage', graphLabel: '% Genomes' }\r\n];\r\n\r\nexport const DeterminantsGraph = () => {\r\n  const classes = useStyles();\r\n  const [plotChart, setPlotChart] = useState(() => {});\r\n  const matches500 = useMediaQuery('(max-width:500px)');\r\n\r\n  const dispatch = useAppDispatch();\r\n  const canGetData = useAppSelector((state) => state.dashboard.canGetData);\r\n  const genotypesDrugClassesData = useAppSelector((state) => state.graph.genotypesDrugClassesData);\r\n  const determinantsGraphView = useAppSelector((state) => state.graph.determinantsGraphView);\r\n  const determinantsGraphDrugClass = useAppSelector((state) => state.graph.determinantsGraphDrugClass);\r\n\r\n  function getDomain() {\r\n    return determinantsGraphView === 'number' ? undefined : [0, 100];\r\n  }\r\n\r\n  function getData() {\r\n    if (determinantsGraphView === 'number') {\r\n      return genotypesDrugClassesData[determinantsGraphDrugClass];\r\n    }\r\n\r\n    const exclusions = ['name', 'totalCount', 'resistantCount'];\r\n    let genotypeDrugClassesDataPercentage = structuredClone(genotypesDrugClassesData[determinantsGraphDrugClass] ?? []);\r\n    genotypeDrugClassesDataPercentage = genotypeDrugClassesDataPercentage.map((item) => {\r\n      const keys = Object.keys(item).filter((x) => !exclusions.includes(x));\r\n\r\n      keys.forEach((key) => {\r\n        if(item.totalCount>0)\r\n          item[key] = Number(((item[key] / item.totalCount) * 100).toFixed(2));\r\n      });\r\n\r\n      return item;\r\n    });\r\n\r\n    return genotypeDrugClassesDataPercentage;\r\n  }\r\n\r\n  function getTooltipData(label, payload) {\r\n    const data = genotypesDrugClassesData[determinantsGraphDrugClass].find((item) => item.name === label);\r\n\r\n    if (data) {\r\n      const tooltipData = [];\r\n\r\n      payload.forEach((item) => {\r\n        if (item.value === 0) {\r\n          return;\r\n        }\r\n\r\n        const count = data[item.name];\r\n        tooltipData.push({\r\n          name: item.name,\r\n          color: item.color,\r\n          count,\r\n          percentage: Number(((count / data.totalCount) * 100).toFixed(2))\r\n        });\r\n      });\r\n\r\n      tooltipData.sort((a, b) => a.name.localeCompare(b.name));\r\n      return tooltipData;\r\n    }\r\n  }\r\n\r\n  function handleChangeDataView(event) {\r\n    dispatch(setDeterminantsGraphView(event.target.value));\r\n  }\r\n\r\n  function handleChangeDrugClass(event) {\r\n    dispatch(setDeterminantsGraphDrugClass(event.target.value));\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (canGetData) {\r\n      setPlotChart(() => {\r\n        return (\r\n          <ResponsiveContainer width=\"100%\">\r\n            <BarChart data={getData()} maxBarSize={70}>\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis dataKey=\"name\" interval=\"preserveStartEnd\" tick={{ fontSize: 14 }} />\r\n              <YAxis domain={getDomain()} allowDataOverflow={true} allowDecimals={false}>\r\n                <Label angle={-90} position=\"insideLeft\" className={classes.graphLabel}>\r\n                  {dataViewOptions.find((option) => option.value === determinantsGraphView).label}\r\n                </Label>\r\n              </YAxis>\r\n              {(genotypesDrugClassesData[determinantsGraphDrugClass] ?? []).length > 0 && (\r\n                <Brush dataKey=\"name\" height={20} stroke={'rgb(31, 187, 211)'} />\r\n              )}\r\n\r\n              <Legend\r\n                content={(props) => {\r\n                  const { payload } = props;\r\n                  return (\r\n                    <div className={classes.legendWrapper}>\r\n                      {payload.map((entry, index) => {\r\n                        const { dataKey, color } = entry;\r\n                        return (\r\n                          <div key={`distribution-legend-${index}`} className={classes.legendItemWrapper}>\r\n                            <Box className={classes.colorCircle} style={{ backgroundColor: color }} />\r\n                            <Typography variant=\"caption\">{dataKey}</Typography>\r\n                          </div>\r\n                        );\r\n                      })}\r\n                    </div>\r\n                  );\r\n                }}\r\n              />\r\n\r\n              <ChartTooltip\r\n                position={{ x: matches500 ? 0 : 60, y: matches500 ? 310 : 410 }}\r\n                cursor={{ fill: hoverColor }}\r\n                wrapperStyle={{ outline: 'none', zIndex: 1 }}\r\n                content={({ payload, active, label }) => {\r\n                  if (payload !== null && active) {\r\n                    const data = getTooltipData(label, payload);\r\n\r\n                    return (\r\n                      <div className={classes.tooltip}>\r\n                        <div className={classes.tooltipTitle}>\r\n                          <Typography variant=\"h5\" fontWeight=\"600\">\r\n                            {label}\r\n                          </Typography>\r\n                          <Typography variant=\"subtitle1\">{`N = ${payload[0].payload.totalCount}`}</Typography>\r\n                        </div>\r\n                        {payload[0].payload.totalCount > 0?\r\n                          <div className={classes.tooltipContent}>\r\n                          {data.map((item, index) => {\r\n                            return (\r\n                              <div key={`tooltip-content-${index}`} className={classes.tooltipItemWrapper}>\r\n                                <Box\r\n                                  className={classes.tooltipItemBox}\r\n                                  style={{\r\n                                    backgroundColor: item.color\r\n                                  }}\r\n                                />\r\n                                <div className={classes.tooltipItemStats}>\r\n                                  <Typography variant=\"body2\" fontWeight=\"500\" lineHeight={undefined}>\r\n                                    {item.name}\r\n                                  </Typography>\r\n                                  <Typography\r\n                                    fontSize=\"12px\"\r\n                                    noWrap\r\n                                    lineHeight={undefined}\r\n                                  >{`N = ${item.count}`}</Typography>\r\n                                  <Typography\r\n                                    fontSize=\"10px\"\r\n                                    lineHeight={undefined}\r\n                                  >{`${item.percentage}%`}</Typography>\r\n                                </div>\r\n                              </div>\r\n                            );\r\n                          })}\r\n                        </div>: null}\r\n                      </div>\r\n                    );\r\n                  }\r\n                  return null;\r\n                }}\r\n              />\r\n\r\n              {colorForDrugClasses[determinantsGraphDrugClass]?.map((option, index) => (\r\n                <Bar\r\n                  key={`determinants-bar-${index}`}\r\n                  dataKey={option.name}\r\n                  name={option.name}\r\n                  stackId={0}\r\n                  fill={option.color}\r\n                />\r\n              ))}\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        );\r\n      });\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [genotypesDrugClassesData, determinantsGraphView, determinantsGraphDrugClass, matches500]);\r\n\r\n  return (\r\n    <CardContent className={classes.determinantsGraph}>\r\n      <div className={classes.selectsWrapper}>\r\n        <div className={classes.selectWrapper}>\r\n          <Typography variant=\"caption\" className={classes.selectLabel}>\r\n            Select drug class\r\n          </Typography>\r\n          <Select\r\n            className={classes.select}\r\n            value={determinantsGraphDrugClass}\r\n            onChange={handleChangeDrugClass}\r\n            inputProps={{ className: classes.selectInput }}\r\n            MenuProps={{ classes: { list: classes.selectMenu } }}\r\n          >\r\n            {drugClasses.map((option, index) => {\r\n              return (\r\n                <MenuItem key={index + 'determinants-drug-classes'} value={option}>\r\n                  {option === 'Ciprofloxacin NS' ? 'Ciprofloxacin' : option}\r\n                </MenuItem>\r\n              );\r\n            })}\r\n          </Select>\r\n        </div>\r\n        <div className={classes.selectWrapper}>\r\n          <Typography variant=\"caption\" className={classes.selectLabel}>\r\n            Data view\r\n          </Typography>\r\n          <Select\r\n            className={classes.select}\r\n            value={determinantsGraphView}\r\n            onChange={handleChangeDataView}\r\n            inputProps={{ className: classes.selectInput }}\r\n            MenuProps={{ classes: { list: classes.selectMenu } }}\r\n          >\r\n            {dataViewOptions.map((option, index) => {\r\n              return (\r\n                <MenuItem key={index + 'determinants-dataview'} value={option.value}>\r\n                  {option.label}\r\n                </MenuItem>\r\n              );\r\n            })}\r\n          </Select>\r\n        </div>\r\n      </div>\r\n      <div className={classes.graphWrapper}>\r\n        <div className={classes.graph} id=\"RDWG\">\r\n          {plotChart}\r\n        </div>\r\n      </div>\r\n    </CardContent>\r\n  );\r\n};\r\n","import { makeStyles } from '@mui/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  frequenciesGraph: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    height: '100%',\r\n    maxWidth: '920px',\r\n    width: '-webkit-fill-available'\r\n  },\r\n  selectsWrapper: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    rowGap: '4px',\r\n    width: '70%',\r\n\r\n    '@media (max-width: 1000px)': {\r\n      width: '100%'\r\n    }\r\n  },\r\n  selectWrapper: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    rowGap: '8px',\r\n    width: '100%',\r\n    alignItems: 'center'\r\n  },\r\n  select: {\r\n    width: '100%'\r\n  },\r\n  labelWrapper: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    columnGap: '8px'\r\n  },\r\n  labelTooltipIcon: {\r\n    cursor: 'pointer'\r\n  },\r\n  dataViewSelectInput: {\r\n    fontSize: '14px !important',\r\n    fontWeight: '600 !important',\r\n    padding: '8px 32px 8px 8px !important'\r\n  },\r\n  dataViewSelectMenu: {\r\n    '& .MuiMenuItem-root': {\r\n      fontSize: '14px'\r\n    }\r\n  },\r\n  genotypesSelectInput: {\r\n    fontSize: '14px !important',\r\n    fontWeight: '600 !important',\r\n    padding: '8px 32px 8px 8px !important',\r\n    marginRight: '-80px !important'\r\n  },\r\n  genotypesSelectButton: {\r\n    height: '20px',\r\n    fontSize: '10px !important',\r\n    padding: '3px 5px !important',\r\n    whiteSpace: 'nowrap',\r\n    position: 'absolute',\r\n    right: '18px'\r\n  },\r\n  genotypesMenuPaper: {\r\n    maxHeight: '350px !important'\r\n  },\r\n  genotypesSelectMenu: {\r\n    '& .MuiCheckbox-root': {\r\n      padding: '0px 8px 0px 0px'\r\n    },\r\n    '& .MuiTypography-root': {\r\n      fontSize: '14px'\r\n    }\r\n  },\r\n  graphWrapper: {\r\n    paddingTop: '16px',\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    gap: '16px',\r\n    height: '560px',\r\n    width: '100%',\r\n\r\n    '@media (max-width: 500px)': {\r\n      height: '460px'\r\n    }\r\n  },\r\n  graph: {\r\n    height: '100%',\r\n    width: '100%'\r\n  },\r\n  graphLabel: {\r\n    textAnchor: 'middle'\r\n  },\r\n  legendWrapper: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    overflowX: 'auto',\r\n    flexWrap: 'wrap',\r\n    height: '110px',\r\n    gap: '4px',\r\n    padding: '8px 0px 4px',\r\n    marginLeft: '60px'\r\n  },\r\n  legendItemWrapper: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    columnGap: '4px',\r\n    paddingRight: '8px'\r\n  },\r\n  colorCircle: {\r\n    height: '10px',\r\n    width: '10px',\r\n    borderRadius: '50%',\r\n    minWidth: '10px'\r\n  },\r\n  tooltip: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    backgroundColor: '#fff',\r\n    padding: '16px',\r\n    border: 'solid rgba(0, 0, 0, 0.25) 1px',\r\n    rowGap: '16px'\r\n  },\r\n  tooltipTitle: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    columnGap: '8px',\r\n    alignItems: 'flex-end'\r\n  },\r\n  tooltipContent: {\r\n    display: 'grid',\r\n    gap: '8px',\r\n    gridTemplateColumns: 'repeat(12, 1fr)',\r\n    width: '450px',\r\n\r\n    '@media (max-width: 1200px)': {\r\n      width: '320px'\r\n    },\r\n\r\n    '@media (max-width: 1000px)': {\r\n      width: '450px'\r\n    },\r\n\r\n    '@media (max-width: 650px)': {\r\n      width: '320px'\r\n    },\r\n\r\n    '@media (max-width: 400px)': {\r\n      width: '275px'\r\n    }\r\n  },\r\n  tooltipItemWrapper: {\r\n    gridColumn: 'span 6',\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    columnGap: '8px'\r\n  },\r\n  tooltipItemBox: {\r\n    height: '18px',\r\n    width: '18px',\r\n    border: 'solid rgb(0, 0, 0, 0.75) 0.5px',\r\n    flex: 'none'\r\n  },\r\n  tooltipItemStats: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n\r\n    '& .MuiTypography-body2': {\r\n      overflowWrap: 'anywhere'\r\n    }\r\n  }\r\n}));\r\n\r\nexport { useStyles };\r\n","import { lightGrey } from '../../../util/colorHelper';\r\n\r\nexport const getColorForDrug = (drug) => {\r\n  switch (drug) {\r\n    case 'Ampicillin':\r\n    case 'Aminoglycosides':\r\n      return 'rgb(129,178,210)';\r\n\r\n    case 'Azithromycin':\r\n    case 'Carbapenems':\r\n      return 'rgb(144,211,199)';\r\n\r\n    case 'Chloramphenicol':\r\n    case 'Cephalosporins (3rd gen.)':\r\n      return 'rgb(249,129,117)';\r\n\r\n    // case 'Co-trimoxazole':\r\n    case 'Trimethoprim-sulfamethoxazole':\r\n    case 'Cephalosporins (3rd gen.) + β-lactamase inhibitors':\r\n      return 'rgb(252,180,105)';\r\n\r\n    // case 'ESBL':\r\n    case 'Ceftriaxone':\r\n    case 'Colistin':\r\n      return '#DB90F0';\r\n\r\n    // case 'Fosfomycin':\r\n    case 'Fosfomycin':\r\n      return '#98fb98';\r\n\r\n    // case 'Fluoroquinolones (CipNS)':\r\n    case 'Ciprofloxacin NS':\r\n    case 'Penicillins':\r\n      return 'rgb(255,236,120)';\r\n\r\n    // case 'Fluoroquinolones (CipR)':\r\n    case 'Ciprofloxacin R':\r\n    case 'Fluoroquinolones':\r\n      return '#9e9ac8';\r\n\r\n    case 'Sulphonamides':\r\n    case 'Sulfonamides':\r\n      return 'rgb(180,221,112)';\r\n\r\n    case 'Susceptible':\r\n      return lightGrey;\r\n\r\n    case 'Tetracyclines':\r\n    case 'Tetracycline':\r\n      return 'rgb(251,207,229)';\r\n\r\n    case 'Trimethoprim':\r\n      return 'rgb(102,102,255)';\r\n\r\n    case 'Penicillins + β-lactamase inhibitors':\r\n      return '#F3AAB9';\r\n\r\n    case 'Phenicols':\r\n      return '#FBCFBA';\r\n\r\n    case 'Tigecycline':\r\n      return '#54C2FF';\r\n\r\n    case 'XDR':\r\n      return '#000';\r\n\r\n    case 'MDR':\r\n      return '#B80F0F';\r\n\r\n    default:\r\n      return '#F5F4F6';\r\n  }\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport {\r\n  Box,\r\n  Button,\r\n  CardContent,\r\n  Checkbox,\r\n  ListItemText,\r\n  MenuItem,\r\n  Select,\r\n  Tooltip,\r\n  Typography,\r\n  useMediaQuery\r\n} from '@mui/material';\r\nimport { useStyles } from './FrequenciesGraphMUI';\r\nimport { InfoOutlined } from '@mui/icons-material';\r\nimport {\r\n  Bar,\r\n  BarChart,\r\n  CartesianGrid,\r\n  ResponsiveContainer,\r\n  Tooltip as ChartTooltip,\r\n  XAxis,\r\n  YAxis,\r\n  Label,\r\n  Legend,\r\n  Brush\r\n} from 'recharts';\r\nimport { useAppDispatch, useAppSelector } from '../../../../stores/hooks';\r\nimport { setFrequenciesGraphSelectedGenotypes, setFrequenciesGraphView } from '../../../../stores/slices/graphSlice';\r\nimport { useEffect, useState } from 'react';\r\nimport { hoverColor } from '../../../../util/colorHelper';\r\nimport { getColorForDrug } from '../graphColorHelper';\r\nimport { drugs } from '../../../../util/drugs';\r\n\r\nconst dataViewOptions = [\r\n  { label: 'Number of genomes', value: 'number' },\r\n  { label: 'Percentage within genotype', value: 'percentage' }\r\n];\r\n\r\nexport const FrequenciesGraph = () => {\r\n  const classes = useStyles();\r\n  const [plotChart, setPlotChart] = useState(() => {});\r\n  const matches500 = useMediaQuery('(max-width:500px)');\r\n\r\n  const dispatch = useAppDispatch();\r\n  const canGetData = useAppSelector((state) => state.dashboard.canGetData);\r\n  const genotypesDrugsData = useAppSelector((state) => state.graph.genotypesDrugsData);\r\n  const frequenciesGraphView = useAppSelector((state) => state.graph.frequenciesGraphView);\r\n  const frequenciesGraphSelectedGenotypes = useAppSelector((state) => state.graph.frequenciesGraphSelectedGenotypes);\r\n\r\n  function getSelectGenotypeLabel(genotype) {\r\n    const percentage = Number(((genotype.Susceptible / genotype.totalCount) * 100).toFixed(2));\r\n    return `${genotype.name} (total N=${genotype.totalCount===0 ? 0:`${genotype.totalCount},${percentage}% Susceptible`})`;\r\n\r\n  }\r\n\r\n  function getDomain() {\r\n    return frequenciesGraphView === 'number' ? undefined : [0, 100];\r\n  }\r\n\r\n  function getData() {\r\n    const data = genotypesDrugsData.filter((genotype) => frequenciesGraphSelectedGenotypes.includes(genotype.name));\r\n\r\n    if (frequenciesGraphView === 'number') {\r\n      return data;\r\n    }\r\n\r\n    const exclusions = ['name', 'totalCount', 'resistantCount'];\r\n    let genotypeDataPercentage = structuredClone(data);\r\n    genotypeDataPercentage = genotypeDataPercentage.map((item) => {\r\n      const keys = Object.keys(item).filter((x) => !exclusions.includes(x));\r\n\r\n      keys.forEach((key) => {\r\n        item[key] = Number(((item[key] / item.totalCount) * 100).toFixed(2));\r\n      });\r\n\r\n      return item;\r\n    });\r\n\r\n    return genotypeDataPercentage;\r\n  }\r\n\r\n  function handleChangeDataView(event) {\r\n    dispatch(setFrequenciesGraphView(event.target.value));\r\n  }\r\n\r\n  function getTooltipData(label, payload) {\r\n    const data = genotypesDrugsData.find((item) => item.name === label);\r\n\r\n    if (data) {\r\n      const tooltipData = [];\r\n\r\n      payload.forEach((item) => {\r\n        if (item.value === 0) {\r\n          return;\r\n        }\r\n\r\n        const count = data[item.name];\r\n        tooltipData.push({\r\n          name: item.name,\r\n          color: item.color,\r\n          count,\r\n          percentage: Number(((count / data.totalCount) * 100).toFixed(2))\r\n        });\r\n      });\r\n\r\n      tooltipData.sort((a, b) => b.count - a.count);\r\n      return tooltipData;\r\n    }\r\n  }\r\n\r\n  function handleChangeSelectedGenotypes({ event = null, all = false }) {\r\n    if (all) {\r\n      dispatch(setFrequenciesGraphSelectedGenotypes([]));\r\n      return;\r\n    }\r\n\r\n    const {\r\n      target: { value }\r\n    } = event;\r\n\r\n    if (frequenciesGraphSelectedGenotypes.length === 7 && value.length > 7) {\r\n      return;\r\n    }\r\n\r\n    dispatch(setFrequenciesGraphSelectedGenotypes(value));\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (canGetData) {\r\n      setPlotChart(() => {\r\n        return (\r\n          <ResponsiveContainer width=\"100%\">\r\n            <BarChart data={getData()}>\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis dataKey=\"name\" interval=\"preserveStartEnd\" tick={{ fontSize: 14 }} />\r\n              <YAxis domain={getDomain()} allowDecimals={false}>\r\n                <Label angle={-90} position=\"insideLeft\" className={classes.graphLabel}>\r\n                  {dataViewOptions.find((option) => option.value === frequenciesGraphView).label}\r\n                </Label>\r\n              </YAxis>\r\n              {genotypesDrugsData.length > 0 && <Brush dataKey=\"name\" height={20} stroke={'rgb(31, 187, 211)'} />}\r\n\r\n              <Legend\r\n                content={(props) => {\r\n                  const { payload } = props;\r\n                  return (\r\n                    <div className={classes.legendWrapper}>\r\n                      {payload.map((entry, index) => {\r\n                        const { dataKey, color } = entry;\r\n                        return (\r\n                          <div key={`frequencies-legend-${index}`} className={classes.legendItemWrapper}>\r\n                            <Box className={classes.colorCircle} style={{ backgroundColor: color }} />\r\n                            <Typography variant=\"caption\">{dataKey}</Typography>\r\n                          </div>\r\n                        );\r\n                      })}\r\n                    </div>\r\n                  );\r\n                }}\r\n              />\r\n\r\n              <ChartTooltip\r\n                position={{ x: matches500 ? 0 : 60, y: matches500 ? 310 : 410 }}\r\n                cursor={{ fill: hoverColor }}\r\n                wrapperStyle={{ outline: 'none', zIndex: 1 }}\r\n                content={({ payload, active, label }) => {\r\n                  if (payload !== null && active) {\r\n                    const data = getTooltipData(label, payload);\r\n\r\n                    return (\r\n                      <div className={classes.tooltip}>\r\n                        <div className={classes.tooltipTitle}>\r\n                          <Typography variant=\"h5\" fontWeight=\"600\">\r\n                            {label}\r\n                          </Typography>\r\n                          <Typography variant=\"subtitle1\">{`N = ${payload[0].payload.totalCount}`}</Typography>\r\n                        </div>\r\n                        {payload[0].payload.totalCount > 0?\r\n                        <div className={classes.tooltipContent}>\r\n                          {data.map((item, index) => {\r\n                            return (\r\n                              <div key={`tooltip-content-${index}`} className={classes.tooltipItemWrapper}>\r\n                                <Box\r\n                                  className={classes.tooltipItemBox}\r\n                                  style={{\r\n                                    backgroundColor: item.color\r\n                                  }}\r\n                                />\r\n                                <div className={classes.tooltipItemStats}>\r\n                                  <Typography variant=\"body2\" fontWeight=\"500\" lineHeight={undefined}>\r\n                                    {item.name}\r\n                                  </Typography>\r\n                                  <Typography\r\n                                    fontSize=\"12px\"\r\n                                    noWrap\r\n                                    lineHeight={undefined}\r\n                                  >{`N = ${item.count}`}</Typography>\r\n                                  <Typography\r\n                                    fontSize=\"10px\"\r\n                                    lineHeight={undefined}\r\n                                  >{`${item.percentage}%`}</Typography>\r\n                                </div>\r\n                              </div>\r\n                            );\r\n                          })}\r\n                        </div>: null}\r\n                      </div>\r\n                    );\r\n                  }\r\n                  return null;\r\n                }}\r\n              />\r\n\r\n              {drugs.map((option, index) => (\r\n                <Bar key={`frequencies-bar-${index}`} dataKey={option} fill={getColorForDrug(option)} />\r\n              ))}\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        );\r\n      });\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [genotypesDrugsData, frequenciesGraphView, frequenciesGraphSelectedGenotypes, matches500]);\r\n\r\n  return (\r\n    <CardContent className={classes.frequenciesGraph}>\r\n      <div className={classes.selectsWrapper}>\r\n        <div className={classes.labelWrapper}>\r\n          <Typography variant=\"caption\">Data view</Typography>\r\n          <Tooltip title=\"Select up to 7 genotypes\" placement=\"top\">\r\n            <InfoOutlined color=\"action\" fontSize=\"small\" className={classes.labelTooltipIcon} />\r\n          </Tooltip>\r\n        </div>\r\n        <div className={classes.selectWrapper}>\r\n          <Select\r\n            className={classes.select}\r\n            value={frequenciesGraphView}\r\n            onChange={handleChangeDataView}\r\n            inputProps={{ className: classes.dataViewSelectInput }}\r\n            MenuProps={{ classes: { list: classes.dataViewSelectMenu } }}\r\n          >\r\n            {dataViewOptions.map((option, index) => {\r\n              return (\r\n                <MenuItem key={index + 'frequencies-dataview'} value={option.value}>\r\n                  {option.label}\r\n                </MenuItem>\r\n              );\r\n            })}\r\n          </Select>\r\n          <Select\r\n            className={classes.select}\r\n            multiple\r\n            value={frequenciesGraphSelectedGenotypes}\r\n            onChange={(event) => handleChangeSelectedGenotypes({ event })}\r\n            displayEmpty\r\n            endAdornment={\r\n              <Button\r\n                variant=\"outlined\"\r\n                className={classes.genotypesSelectButton}\r\n                onClick={() => handleChangeSelectedGenotypes({ all: true })}\r\n                disabled={frequenciesGraphSelectedGenotypes.length === 0}\r\n                color=\"error\"\r\n              >\r\n                Clear All\r\n              </Button>\r\n            }\r\n            inputProps={{ className: classes.genotypesSelectInput }}\r\n            MenuProps={{ classes: { paper: classes.genotypesMenuPaper, list: classes.genotypesSelectMenu } }}\r\n            renderValue={(selected) => <div>{`${selected.length} of ${genotypesDrugsData.length} selected`}</div>}\r\n          >\r\n            {genotypesDrugsData.map((genotype, index) => (\r\n              <MenuItem key={`frequencies-option-${index}`} value={genotype.name}>\r\n                <Checkbox checked={frequenciesGraphSelectedGenotypes.indexOf(genotype.name) > -1} />\r\n                <ListItemText primary={getSelectGenotypeLabel(genotype)} />\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </div>\r\n      </div>\r\n      <div className={classes.graphWrapper}>\r\n        <div className={classes.graph} id=\"RFWG\">\r\n          {plotChart}\r\n        </div>\r\n      </div>\r\n    </CardContent>\r\n  );\r\n};\r\n","import { makeStyles } from '@mui/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  drugResistanceGraph: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    height: '100%',\r\n    maxWidth: '920px',\r\n    width: '-webkit-fill-available'\r\n  },\r\n  selectWrapper: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    width: '70%',\r\n    alignItems: 'center',\r\n\r\n    '@media (max-width: 1000px)': {\r\n      width: '100%'\r\n    }\r\n  },\r\n  select: {\r\n    width: '100%'\r\n  },\r\n  labelWrapper: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    columnGap: '8px',\r\n    paddingBottom: '4px',\r\n    width: '100%'\r\n  },\r\n  labelTooltipIcon: {\r\n    cursor: 'pointer'\r\n  },\r\n  selectInput: {\r\n    fontSize: '14px !important',\r\n    fontWeight: '600 !important',\r\n    padding: '8px 32px 8px 8px !important',\r\n    marginRight: '-80px !important'\r\n  },\r\n  selectButton: {\r\n    height: '20px',\r\n    fontSize: '10px !important',\r\n    padding: '3px 5px !important',\r\n    whiteSpace: 'nowrap',\r\n    position: 'absolute',\r\n    right: '18px'\r\n  },\r\n  menuPaper: {\r\n    maxHeight: '350px !important'\r\n  },\r\n  selectMenu: {\r\n    '& .MuiCheckbox-root': {\r\n      padding: '0px 8px 0px 0px'\r\n    },\r\n    '& .MuiTypography-root': {\r\n      fontSize: '14px'\r\n    }\r\n  },\r\n  graphWrapper: {\r\n    paddingTop: '16px',\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    gap: '16px',\r\n    height: '560px',\r\n    width: '100%',\r\n\r\n    '@media (max-width: 500px)': {\r\n      height: '460px'\r\n    }\r\n  },\r\n  graph: {\r\n    height: '100%',\r\n    width: '100%'\r\n  },\r\n  graphLabel: {\r\n    textAnchor: 'middle'\r\n  },\r\n  legendWrapper: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    overflowX: 'auto',\r\n    flexWrap: 'wrap',\r\n    height: '110px',\r\n    gap: '4px',\r\n    padding: '8px 0px 4px',\r\n    marginLeft: '60px'\r\n  },\r\n  legendItemWrapper: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    columnGap: '4px',\r\n    paddingRight: '8px'\r\n  },\r\n  colorCircle: {\r\n    height: '10px',\r\n    width: '10px',\r\n    borderRadius: '50%',\r\n    minWidth: '10px'\r\n  },\r\n  tooltip: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    backgroundColor: '#fff',\r\n    padding: '16px',\r\n    border: 'solid rgba(0, 0, 0, 0.25) 1px',\r\n    rowGap: '16px'\r\n  },\r\n  tooltipTitle: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    columnGap: '8px',\r\n    alignItems: 'flex-end'\r\n  },\r\n  tooltipContent: {\r\n    display: 'grid',\r\n    gap: '8px',\r\n    gridTemplateColumns: 'repeat(12, 1fr)',\r\n    width: '450px',\r\n\r\n    '@media (max-width: 1200px)': {\r\n      width: '320px'\r\n    },\r\n\r\n    '@media (max-width: 1000px)': {\r\n      width: '450px'\r\n    },\r\n\r\n    '@media (max-width: 650px)': {\r\n      width: '320px'\r\n    },\r\n\r\n    '@media (max-width: 400px)': {\r\n      width: '275px'\r\n    }\r\n  },\r\n  tooltipItemWrapper: {\r\n    gridColumn: 'span 6',\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    columnGap: '8px'\r\n  },\r\n  tooltipItemBox: {\r\n    height: '18px',\r\n    width: '18px',\r\n    border: 'solid rgb(0, 0, 0, 0.75) 0.5px',\r\n    flex: 'none'\r\n  },\r\n  tooltipItemStats: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n\r\n    '& .MuiTypography-body2': {\r\n      overflowWrap: 'anywhere'\r\n    }\r\n  }\r\n}));\r\n\r\nexport { useStyles };\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport {\r\n  Box,\r\n  Button,\r\n  CardContent,\r\n  Checkbox,\r\n  ListItemText,\r\n  MenuItem,\r\n  Select,\r\n  Tooltip,\r\n  Typography,\r\n  useMediaQuery\r\n} from '@mui/material';\r\nimport { useStyles } from './DrugResistanceGraphMUI';\r\nimport {\r\n  Brush,\r\n  CartesianGrid,\r\n  Legend,\r\n  ResponsiveContainer,\r\n  XAxis,\r\n  YAxis,\r\n  Tooltip as ChartTooltip,\r\n  LineChart,\r\n  Line,\r\n  Label\r\n} from 'recharts';\r\nimport { useAppDispatch, useAppSelector } from '../../../../stores/hooks';\r\nimport { setDrugResistanceGraphView } from '../../../../stores/slices/graphSlice';\r\nimport { drugsForDrugResistanceGraph } from '../../../../util/drugs';\r\nimport { useEffect, useState } from 'react';\r\nimport { hoverColor } from '../../../../util/colorHelper';\r\nimport { getColorForDrug } from '../graphColorHelper';\r\nimport { InfoOutlined } from '@mui/icons-material';\r\n\r\nexport const DrugResistanceGraph = () => {\r\n  const classes = useStyles();\r\n  const [plotChart, setPlotChart] = useState(() => {});\r\n  const matches500 = useMediaQuery('(max-width:500px)');\r\n\r\n  const dispatch = useAppDispatch();\r\n  const drugResistanceGraphView = useAppSelector((state) => state.graph.drugResistanceGraphView);\r\n  const drugsYearData = useAppSelector((state) => state.graph.drugsYearData);\r\n  const canGetData = useAppSelector((state) => state.dashboard.canGetData);\r\n  const timeInitial = useAppSelector((state) => state.dashboard.timeInitial);\r\n  const timeFinal = useAppSelector((state) => state.dashboard.timeFinal);\r\n\r\n  function getData() {\r\n    const exclusions = ['name', 'count'];\r\n    let drugDataPercentage = structuredClone(drugsYearData);\r\n    drugDataPercentage = drugDataPercentage.map((item) => {\r\n      const keys = Object.keys(item).filter((x) => !exclusions.includes(x));\r\n\r\n      keys.forEach((key) => {\r\n        item[key] = Number(((item[key] / item.count) * 100).toFixed(2));\r\n      });\r\n\r\n      return item;\r\n    });\r\n\r\n    return drugDataPercentage;\r\n  }\r\n\r\n  function getTooltipData(label, payload) {\r\n    const data = drugsYearData.find((item) => item.name === label);\r\n\r\n    if (data) {\r\n      const tooltipData = [];\r\n\r\n      payload.forEach((item) => {\r\n        if (item.value === 0) {\r\n          return;\r\n        }\r\n\r\n        const count = data[item.name];\r\n        tooltipData.push({\r\n          name: item.name,\r\n          color: item.color,\r\n          count,\r\n          percentage: Number(((count / data.count) * 100).toFixed(2))\r\n        });\r\n      });\r\n\r\n      tooltipData.sort((a, b) => b.count - a.count);\r\n      return tooltipData;\r\n    }\r\n  }\r\n\r\n  function handleChangeDrugsView({ event = null, all = false }) {\r\n    let newValues = [];\r\n\r\n    if (all) {\r\n      if (drugResistanceGraphView.length === drugsForDrugResistanceGraph.length) {\r\n        newValues = [];\r\n      } else {\r\n        newValues = drugsForDrugResistanceGraph.slice();\r\n      }\r\n    } else {\r\n      const {\r\n        target: { value }\r\n      } = event;\r\n      newValues = value;\r\n    }\r\n\r\n    newValues.sort((a, b) => a.localeCompare(b));\r\n    dispatch(setDrugResistanceGraphView(newValues));\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (canGetData) {\r\n      const doc = document.getElementById('DRT');\r\n      const lines = doc.getElementsByClassName('recharts-line');\r\n\r\n      for (let index = 0; index < lines.length; index++) {\r\n        const hasValue = drugResistanceGraphView.some((value) => drugsForDrugResistanceGraph.indexOf(value) === index);\r\n        lines[index].style.display = hasValue ? 'block' : 'none';\r\n      }\r\n\r\n      setPlotChart(() => {\r\n        return (\r\n          <ResponsiveContainer width=\"100%\">\r\n            <LineChart data={getData()}>\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis\r\n                tickCount={20}\r\n                allowDecimals={false}\r\n                padding={{ left: 20, right: 20 }}\r\n                dataKey=\"name\"\r\n                domain={['dataMin', 'dataMax']}\r\n                interval={'preserveStartEnd'}\r\n                tick={{ fontSize: 14 }}\r\n              />\r\n              <YAxis tickCount={6} padding={{ top: 20, bottom: 20 }} allowDecimals={false}>\r\n                <Label angle={-90} position=\"insideLeft\" className={classes.graphLabel}>\r\n                  Resistant (%)\r\n                </Label>\r\n              </YAxis>\r\n              {drugsYearData.length > 0 && <Brush dataKey=\"name\" height={20} stroke={'rgb(31, 187, 211)'} />}\r\n\r\n              <Legend\r\n                content={(props) => {\r\n                  const { payload } = props;\r\n                  return (\r\n                    <div className={classes.legendWrapper}>\r\n                      {payload.map((entry, index) => {\r\n                        const { dataKey, color } = entry;\r\n                        return (\r\n                          <div key={`drug-resistance-legend-${index}`} className={classes.legendItemWrapper}>\r\n                            <Box className={classes.colorCircle} style={{ backgroundColor: color }} />\r\n                            <Typography variant=\"caption\">{dataKey}</Typography>\r\n                          </div>\r\n                        );\r\n                      })}\r\n                    </div>\r\n                  );\r\n                }}\r\n              />\r\n\r\n              <ChartTooltip\r\n                position={{ x: matches500 ? 0 : 60, y: matches500 ? 310 : 410 }}\r\n                cursor={{ fill: hoverColor }}\r\n                wrapperStyle={{ outline: 'none', zIndex: 1 }}\r\n                content={({ payload, active, label }) => {\r\n                  if (payload !== null && active) {\r\n                    const data = getTooltipData(label, payload);\r\n\r\n                    return (\r\n                      <div className={classes.tooltip}>\r\n                        <div className={classes.tooltipTitle}>\r\n                          <Typography variant=\"h5\" fontWeight=\"600\">\r\n                            {label}\r\n                          </Typography>\r\n                          <Typography variant=\"subtitle1\">{`N = ${payload[0].payload.count}`}</Typography>\r\n                        </div>\r\n                        <div className={classes.tooltipContent}>\r\n                          {data.map((item, index) => {\r\n                            return (\r\n                              <div key={`tooltip-content-${index}`} className={classes.tooltipItemWrapper}>\r\n                                <Box\r\n                                  className={classes.tooltipItemBox}\r\n                                  style={{\r\n                                    backgroundColor: item.color\r\n                                  }}\r\n                                />\r\n                                <div className={classes.tooltipItemStats}>\r\n                                  <Typography variant=\"body2\" fontWeight=\"500\" lineHeight={undefined}>\r\n                                    {item.name}\r\n                                  </Typography>\r\n                                  <Typography\r\n                                    fontSize=\"12px\"\r\n                                    noWrap\r\n                                    lineHeight={undefined}\r\n                                  >{`N = ${item.count}`}</Typography>\r\n                                  <Typography\r\n                                    fontSize=\"10px\"\r\n                                    lineHeight={undefined}\r\n                                  >{`${item.percentage}%`}</Typography>\r\n                                </div>\r\n                              </div>\r\n                            );\r\n                          })}\r\n                        </div>\r\n                      </div>\r\n                    );\r\n                  }\r\n                  return null;\r\n                }}\r\n              />\r\n\r\n              {drugsForDrugResistanceGraph.map((option, index) => (\r\n                <Line\r\n                  key={`drug-resistance-bar-${index}`}\r\n                  dataKey={option}\r\n                  strokeWidth={2}\r\n                  stroke={getColorForDrug(option)}\r\n                  connectNulls\r\n                  type=\"monotone\"\r\n                  activeDot={timeInitial === timeFinal ? true : false}\r\n                />\r\n              ))}\r\n            </LineChart>\r\n          </ResponsiveContainer>\r\n        );\r\n      });\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [drugsYearData, drugResistanceGraphView, matches500]);\r\n\r\n  return (\r\n    <CardContent className={classes.drugResistanceGraph}>\r\n      <div className={classes.selectWrapper}>\r\n        <div className={classes.labelWrapper}>\r\n          <Typography variant=\"caption\">Drugs view</Typography>\r\n          <Tooltip\r\n            title=\"The resistance frequencies are only shown for years with N≥10 genomes. When the data is insufficent per year to calculate annual frequencies, there are no data points to show.\"\r\n            placement=\"top\"\r\n          >\r\n            <InfoOutlined color=\"action\" fontSize=\"small\" className={classes.labelTooltipIcon} />\r\n          </Tooltip>\r\n        </div>\r\n        <Select\r\n          className={classes.select}\r\n          multiple\r\n          value={drugResistanceGraphView}\r\n          onChange={(event) => handleChangeDrugsView({ event })}\r\n          displayEmpty\r\n          endAdornment={\r\n            <Button\r\n              variant=\"outlined\"\r\n              className={classes.selectButton}\r\n              onClick={() => handleChangeDrugsView({ all: true })}\r\n              color={drugResistanceGraphView.length === drugsForDrugResistanceGraph.length ? 'error' : 'primary'}\r\n            >\r\n              {drugResistanceGraphView.length === drugsForDrugResistanceGraph.length ? 'Clear All' : 'Select All'}\r\n            </Button>\r\n          }\r\n          inputProps={{ className: classes.selectInput }}\r\n          MenuProps={{ classes: { paper: classes.menuPaper, list: classes.selectMenu } }}\r\n          renderValue={(selected) => (\r\n            <div>{`${selected.length} of ${drugsForDrugResistanceGraph.length} selected`}</div>\r\n          )}\r\n        >\r\n          {drugsForDrugResistanceGraph.map((drug, index) => (\r\n            <MenuItem key={`drug-resistance-option-${index}`} value={drug}>\r\n              <Checkbox checked={drugResistanceGraphView.indexOf(drug) > -1} />\r\n              <ListItemText primary={drug} />\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </div>\r\n      <div className={classes.graphWrapper}>\r\n        <div className={classes.graph} id=\"DRT\">\r\n          {plotChart}\r\n        </div>\r\n      </div>\r\n    </CardContent>\r\n  );\r\n};\r\n","import { makeStyles } from '@mui/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  distributionGraph: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    height: '100%',\r\n    maxWidth: '920px',\r\n    width: '-webkit-fill-available'\r\n  },\r\n  selectWrapper: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    width: '70%',\r\n    alignItems: 'center',\r\n\r\n    '@media (max-width: 1000px)': {\r\n      width: '100%'\r\n    }\r\n  },\r\n  select: {\r\n    width: '100%'\r\n  },\r\n  selectInput: {\r\n    fontSize: '14px !important',\r\n    fontWeight: '600 !important',\r\n    padding: '8px 32px 8px 8px !important'\r\n  },\r\n  selectMenu: {\r\n    '& .MuiMenuItem-root': {\r\n      fontSize: '14px'\r\n    }\r\n  },\r\n  selectLabel: {\r\n    paddingBottom: '4px',\r\n    width: '100%'\r\n  },\r\n  graphWrapper: {\r\n    paddingTop: '16px',\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    gap: '16px',\r\n    height: '560px',\r\n    width: '100%',\r\n\r\n    '@media (max-width: 500px)': {\r\n      height: '460px'\r\n    }\r\n  },\r\n  graph: {\r\n    height: '100%',\r\n    width: '100%'\r\n  },\r\n  graphLabel: {\r\n    textAnchor: 'middle'\r\n  },\r\n  legendWrapper: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    overflowX: 'auto',\r\n    flexWrap: 'wrap',\r\n    height: '110px',\r\n    gap: '4px',\r\n    padding: '8px 0px 4px',\r\n    marginLeft: '60px'\r\n  },\r\n  legendItemWrapper: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    columnGap: '4px',\r\n    paddingRight: '8px'\r\n  },\r\n  colorCircle: {\r\n    height: '10px',\r\n    width: '10px',\r\n    borderRadius: '50%',\r\n    minWidth: '10px'\r\n  },\r\n  tooltip: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    backgroundColor: '#fff',\r\n    padding: '16px',\r\n    border: 'solid rgba(0, 0, 0, 0.25) 1px',\r\n    rowGap: '16px'\r\n  },\r\n  tooltipTitle: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    columnGap: '8px',\r\n    alignItems: 'flex-end'\r\n  },\r\n  tooltipContent: {\r\n    display: 'grid',\r\n    gap: '8px',\r\n    gridTemplateColumns: 'repeat(10, 1fr)',\r\n    width: '540px',\r\n\r\n    '@media (max-width: 1400px)': {\r\n      gridTemplateColumns: 'repeat(12, 1fr)',\r\n      width: '450px'\r\n    },\r\n\r\n    '@media (max-width: 1200px)': {\r\n      width: '320px'\r\n    },\r\n\r\n    '@media (max-width: 1000px)': {\r\n      width: '450px'\r\n    },\r\n\r\n    '@media (max-width: 650px)': {\r\n      width: '320px'\r\n    },\r\n\r\n    '@media (max-width: 400px)': {\r\n      width: '275px'\r\n    }\r\n  },\r\n  tooltipItemWrapper: {\r\n    gridColumn: 'span 2',\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    columnGap: '8px',\r\n\r\n    '@media (max-width: 1400px)': {\r\n      gridColumn: 'span 3'\r\n    },\r\n\r\n    '@media (max-width: 1200px)': {\r\n      gridColumn: 'span 4'\r\n    },\r\n\r\n    '@media (max-width: 1000px)': {\r\n      gridColumn: 'span 3'\r\n    },\r\n\r\n    '@media (max-width: 650px)': {\r\n      gridColumn: 'span 4'\r\n    }\r\n  },\r\n  tooltipItemBox: {\r\n    height: '18px',\r\n    width: '18px',\r\n    border: 'solid rgb(0, 0, 0, 0.75) 0.5px',\r\n    flex: 'none'\r\n  },\r\n  tooltipItemStats: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n\r\n    '& .MuiTypography-body2': {\r\n      overflowWrap: 'anywhere'\r\n    }\r\n  }\r\n}));\r\n\r\nexport { useStyles };\r\n","import { Box, CardContent, MenuItem, Select, Typography, useMediaQuery } from '@mui/material';\r\nimport { useStyles } from './DistributionGraphMUI';\r\nimport {\r\n  Bar,\r\n  BarChart,\r\n  Brush,\r\n  CartesianGrid,\r\n  Legend,\r\n  ResponsiveContainer,\r\n  XAxis,\r\n  YAxis,\r\n  Tooltip as ChartTooltip,\r\n  Label\r\n} from 'recharts';\r\nimport { useAppDispatch, useAppSelector } from '../../../../stores/hooks';\r\nimport { setDistributionGraphView } from '../../../../stores/slices/graphSlice';\r\nimport { getColorForGenotype, hoverColor } from '../../../../util/colorHelper';\r\nimport { useEffect, useState } from 'react';\r\n\r\nconst dataViewOptions = [\r\n  { label: 'Number of genomes', value: 'number' },\r\n  { label: 'Percentage per year', value: 'percentage' }\r\n];\r\n\r\nexport const DistributionGraph = () => {\r\n  const classes = useStyles();\r\n  const [plotChart, setPlotChart] = useState(() => {});\r\n  const matches500 = useMediaQuery('(max-width:500px)');\r\n\r\n  const dispatch = useAppDispatch();\r\n  const distributionGraphView = useAppSelector((state) => state.graph.distributionGraphView);\r\n  const genotypesYearData = useAppSelector((state) => state.graph.genotypesYearData);\r\n  const genotypesForFilter = useAppSelector((state) => state.dashboard.genotypesForFilter);\r\n  const canGetData = useAppSelector((state) => state.dashboard.canGetData);\r\n\r\n  function getDomain() {\r\n    return distributionGraphView === 'number' ? undefined : [0, 100];\r\n  }\r\n\r\n  function getData() {\r\n    if (distributionGraphView === 'number') {\r\n      return genotypesYearData;\r\n    }\r\n\r\n    const exclusions = ['name', 'count'];\r\n    let genotypeDataPercentage = structuredClone(genotypesYearData);\r\n    genotypeDataPercentage = genotypeDataPercentage.map((item) => {\r\n      const keys = Object.keys(item).filter((x) => !exclusions.includes(x));\r\n\r\n      keys.forEach((key) => {\r\n        item[key] = Number(((item[key] / item.count) * 100).toFixed(2));\r\n      });\r\n\r\n      return item;\r\n    });\r\n\r\n    return genotypeDataPercentage;\r\n  }\r\n\r\n  function getTooltipData(label, payload) {\r\n    const data = genotypesYearData.find((item) => item.name === label);\r\n\r\n    if (data) {\r\n      const tooltipData = [];\r\n\r\n      payload.forEach((item) => {\r\n        if (item.value === 0) {\r\n          return;\r\n        }\r\n\r\n        const count = data[item.name];\r\n        tooltipData.push({\r\n          name: item.name,\r\n          color: item.color,\r\n          count,\r\n          percentage: Number(((count / data.count) * 100).toFixed(2))\r\n        });\r\n      });\r\n\r\n      tooltipData.sort((a, b) => b.name.localeCompare(a.name));\r\n      return tooltipData;\r\n    }\r\n  }\r\n\r\n  function handleChangeDataView(event) {\r\n    dispatch(setDistributionGraphView(event.target.value));\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (canGetData) {\r\n      setPlotChart(() => {\r\n        return (\r\n          <ResponsiveContainer width=\"100%\">\r\n            <BarChart data={getData()} maxBarSize={70}>\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis dataKey=\"name\" interval=\"preserveStartEnd\" tick={{ fontSize: 14 }} />\r\n              <YAxis domain={getDomain()} allowDataOverflow={true} allowDecimals={false}>\r\n                <Label angle={-90} position=\"insideLeft\" className={classes.graphLabel}>\r\n                  {dataViewOptions.find((option) => option.value === distributionGraphView).label}\r\n                </Label>\r\n              </YAxis>\r\n              {genotypesYearData.length > 0 && <Brush dataKey=\"name\" height={20} stroke={'rgb(31, 187, 211)'} />}\r\n\r\n              <Legend\r\n                content={(props) => {\r\n                  const { payload } = props;\r\n                  return (\r\n                    <div className={classes.legendWrapper}>\r\n                      {payload.map((entry, index) => {\r\n                        const { dataKey, color } = entry;\r\n                        return (\r\n                          <div key={`distribution-legend-${index}`} className={classes.legendItemWrapper}>\r\n                            <Box className={classes.colorCircle} style={{ backgroundColor: color }} />\r\n                            <Typography variant=\"caption\">{dataKey}</Typography>\r\n                          </div>\r\n                        );\r\n                      })}\r\n                    </div>\r\n                  );\r\n                }}\r\n              />\r\n\r\n              <ChartTooltip\r\n                position={{ x: matches500 ? 0 : 60, y: matches500 ? 310 : 410 }}\r\n                cursor={{ fill: hoverColor }}\r\n                wrapperStyle={{ outline: 'none', zIndex: 1 }}\r\n                content={({ payload, active, label }) => {\r\n                  if (payload !== null && active) {\r\n                    const data = getTooltipData(label, payload);\r\n\r\n                    return (\r\n                      <div className={classes.tooltip}>\r\n                        <div className={classes.tooltipTitle}>\r\n                          <Typography variant=\"h5\" fontWeight=\"600\">\r\n                            {label}\r\n                          </Typography>\r\n                          <Typography variant=\"subtitle1\">{`N = ${payload[0].payload.count}`}</Typography>\r\n                        </div>\r\n                        <div className={classes.tooltipContent}>\r\n                          {data.map((item, index) => {\r\n                            return (\r\n                              <div key={`tooltip-content-${index}`} className={classes.tooltipItemWrapper}>\r\n                                <Box\r\n                                  className={classes.tooltipItemBox}\r\n                                  style={{\r\n                                    backgroundColor: item.color\r\n                                  }}\r\n                                />\r\n                                <div className={classes.tooltipItemStats}>\r\n                                  <Typography variant=\"body2\" fontWeight=\"500\" lineHeight={undefined}>\r\n                                    {item.name}\r\n                                  </Typography>\r\n                                  <Typography\r\n                                    fontSize=\"12px\"\r\n                                    noWrap\r\n                                    lineHeight={undefined}\r\n                                  >{`N = ${item.count}`}</Typography>\r\n                                  <Typography\r\n                                    fontSize=\"10px\"\r\n                                    lineHeight={undefined}\r\n                                  >{`${item.percentage}%`}</Typography>\r\n                                </div>\r\n                              </div>\r\n                            );\r\n                          })}\r\n                        </div>\r\n                      </div>\r\n                    );\r\n                  }\r\n                  return null;\r\n                }}\r\n              />\r\n\r\n              {genotypesForFilter.map((option, index) => (\r\n                <Bar\r\n                  key={`distribution-bar-${index}`}\r\n                  dataKey={option}\r\n                  name={option}\r\n                  stackId={0}\r\n                  fill={getColorForGenotype(option)}\r\n                />\r\n              ))}\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        );\r\n      });\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [genotypesYearData, distributionGraphView, matches500]);\r\n\r\n  return (\r\n    <CardContent className={classes.distributionGraph}>\r\n      <div className={classes.selectWrapper}>\r\n        <Typography variant=\"caption\" className={classes.selectLabel}>\r\n          Data view\r\n        </Typography>\r\n        <Select\r\n          className={classes.select}\r\n          value={distributionGraphView}\r\n          onChange={handleChangeDataView}\r\n          inputProps={{ className: classes.selectInput }}\r\n          MenuProps={{ classes: { list: classes.selectMenu } }}\r\n        >\r\n          {dataViewOptions.map((option, index) => {\r\n            return (\r\n              <MenuItem key={index + 'distribution-dataview'} value={option.value}>\r\n                {option.label}\r\n              </MenuItem>\r\n            );\r\n          })}\r\n        </Select>\r\n      </div>\r\n      <div className={classes.graphWrapper}>\r\n        <div className={classes.graph} id=\"GD\">\r\n          {plotChart}\r\n        </div>\r\n      </div>\r\n    </CardContent>\r\n  );\r\n};\r\n","export const graphCards = [\r\n  {\r\n    title: 'Resistance frequencies within genotypes',\r\n    description: ['Top Genotypes (up to 7)'],\r\n    id: 'RFWG'\r\n  },\r\n  {\r\n    title: 'Drug resistance trends',\r\n    description: ['Data are plotted for years with N ≥ 10 genomes'],\r\n    id: 'DRT'\r\n  },\r\n  {\r\n    title: 'Resistance determinants within genotypes',\r\n    description: ['Top Genotypes (up to 10)'],\r\n    id: 'RDWG'\r\n  },\r\n  {\r\n    title: 'Genotype distribution',\r\n    description: [],\r\n    id: 'GD'\r\n  }\r\n];\r\n","import { makeStyles } from '@mui/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    gridColumn: 'span 12',\r\n\r\n    '&.MuiCard-root': {\r\n      borderRadius: '16px'\r\n    }\r\n  },\r\n  cardContent: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    rowGap: '8px'\r\n  },\r\n  selectLabel: {\r\n    paddingTop: '16px'\r\n  },\r\n  selectInput: {\r\n    fontSize: '16px !important',\r\n    fontWeight: '600 !important',\r\n    textAlign: 'start',\r\n    minWidth: '250px !important'\r\n  },\r\n  selectMenu: {\r\n    '& .MuiMenuItem-root': {\r\n      fontSize: '16px'\r\n    }\r\n  },\r\n  menuPaper: {\r\n    maxHeight: '350px !important'\r\n  }\r\n}));\r\n\r\nexport { useStyles };\r\n","import { useStyles } from './SelectCountryMUI';\r\nimport { Card, CardContent, MenuItem, Select, Typography } from '@mui/material';\r\nimport { useAppDispatch, useAppSelector } from '../../../stores/hooks';\r\nimport { setActualCountry } from '../../../stores/slices/dashboardSlice';\r\n\r\nexport const SelectCountry = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useAppDispatch();\r\n  const actualCountry = useAppSelector((state) => state.dashboard.actualCountry);\r\n  const countriesForFilter = useAppSelector((state) => state.graph.countriesForFilter);\r\n  const dataset = useAppSelector((state) => state.map.dataset);\r\n  const actualTimeInitial = useAppSelector((state) => state.dashboard.actualTimeInitial);\r\n  const actualTimeFinal = useAppSelector((state) => state.dashboard.actualTimeFinal);\r\n\r\n  function handleChange(event) {\r\n    dispatch(setActualCountry(event.target.value));\r\n  }\r\n\r\n  return (\r\n    <Card className={classes.card} elevation={0}>\r\n      <CardContent className={classes.cardContent}>\r\n        <Typography variant=\"h5\" fontWeight={700} textAlign=\"center\">\r\n          {`Now showing: ${dataset} data from ${actualCountry === 'All' ? 'all countries' : actualCountry} from ${\r\n            actualTimeInitial || 'year'\r\n          } to ${actualTimeFinal || 'year'}`}\r\n        </Typography>\r\n        <Typography className={classes.selectLabel} variant=\"subtitle1\" fontWeight={500}>\r\n          Select country (or click map)\r\n        </Typography>\r\n        <Select\r\n          variant=\"standard\"\r\n          value={actualCountry}\r\n          onChange={handleChange}\r\n          inputProps={{ className: classes.selectInput }}\r\n          MenuProps={{ classes: { paper: classes.menuPaper, list: classes.selectMenu } }}\r\n        >\r\n          <MenuItem value=\"All\">All</MenuItem>\r\n          {countriesForFilter.map((country, index) => {\r\n            return (\r\n              <MenuItem key={index + 'mapview'} value={country}>\r\n                {country}\r\n              </MenuItem>\r\n            );\r\n          })}\r\n        </Select>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n","import { makeStyles } from '@mui/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  downloadDataWrapper: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    padding: '16px 0px',\r\n    gridColumn: 'span 12',\r\n    columnGap: '20px',\r\n\r\n    '@media (max-width: 750px)': {\r\n      flexDirection: 'column',\r\n      rowGap: '8px'\r\n    }\r\n  },\r\n  button: {\r\n    color: '#fff !important',\r\n    textTransform: 'none !important',\r\n    paddingTop: '8px !important',\r\n    paddingBottom: '8px !important',\r\n    borderRadius: '100px !important',\r\n\r\n    '@media (max-width: 750px)': {\r\n      width: '100%'\r\n    }\r\n  }\r\n}));\r\n\r\nexport { useStyles };\r\n","export default __webpack_public_path__ + \"static/media/eu_flag.77134ad3.jpg\";","export function getSalmonellaTexts(date) {\r\n  return [\r\n    `This report was generated at ${date}, using TyphiNET (https://typhi.net), a data visualisation platform that draws genome-derived data on antimicrobial resistance and genotypes from Typhi Pathogenwatch (https://pathogen.watch).`,\r\n    'TyphiNET data were last updated on September 12 2023. For code and further details please see: (https://github.com/typhoidgenomics/TyphiNET).',\r\n    'The genotypes reported here are defined in Dyson & Holt (2021), J. Infect. Dis., please see: (https://academic.oup.com/jid/article/224/Supplement_7/S775/6358992?login=true).',\r\n    'Antimicrobial resistance determinants are described in the Typhi Pathogenwatch paper, Argimón et al. 2021, Nat. Commun., please see: (https://www.nature.com/articles/s41467-021-23091-2).',\r\n    'Travel-associated cases are attributed to the country of travel, not the country of isolation, Ingle et al. 2019, PLoS NTDs., please see: (https://journals.plos.org/plosntds/article?id=10.1371/journal.pntd.0007620).',\r\n    'TyphiNET presents data aggregated from >100 studies. Individual genome information, including derived genotype and AMR calls, sequence data accession numbers, and source information (PubMedID for citation) can be downloaded as a spreadsheet from the TyphiNET website (https://typhi.net).',\r\n    \"This project has received funding from the the Wellcome Trust (Open Research Fund, 219692/Z/19/Z) and the  European Union's Horizon 2020 research and innovation programme under the Marie Sklodowska-Curie grant agreement No 845681.\"\r\n  ];\r\n}\r\n","import { Alert, Snackbar, useMediaQuery } from '@mui/material';\r\nimport { useStyles } from './DownloadDataMUI';\r\nimport { useAppDispatch, useAppSelector } from '../../../stores/hooks';\r\nimport axios from 'axios';\r\nimport download from 'downloadjs';\r\nimport { API_ENDPOINT } from '../../../constants';\r\nimport { useState } from 'react';\r\nimport LoadingButton from '@mui/lab/LoadingButton';\r\nimport { PictureAsPdf, TableChart } from '@mui/icons-material';\r\nimport { setPosition } from '../../../stores/slices/mapSlice';\r\nimport jsPDF from 'jspdf';\r\nimport LogoImg from '../../../assets/img/logo-typhinet-prod.png';\r\nimport EUFlagImg from '../../../assets/img/eu_flag.jpg';\r\nimport moment from 'moment';\r\nimport { svgAsPngUri } from 'save-svg-as-png';\r\nimport { mapLegends } from '../../../util/mapLegends';\r\nimport { imgOnLoadPromise } from '../../../util/imgOnLoadPromise';\r\nimport { graphCards } from '../../../util/graphCards';\r\nimport domtoimage from 'dom-to-image';\r\nimport { drugs, drugsForDrugResistanceGraph } from '../../../util/drugs';\r\nimport { getColorForDrug } from '../Graphs/graphColorHelper';\r\nimport { colorForDrugClasses, getColorForGenotype } from '../../../util/colorHelper';\r\nimport { getSalmonellaTexts } from '../../../util/reportInfoTexts';\r\n\r\nconst columnsToRemove = [\r\n  'azith_pred_pheno',\r\n  'ACCESSION',\r\n  'COUNTRY_ONLY',\r\n  'REGION_IN_COUNTRY',\r\n  'LOCATION',\r\n  'ACCURACY',\r\n  'LATITUDE',\r\n  'LONGITUDE',\r\n  'REFERENCE',\r\n  'MLST ST (EnteroBase)',\r\n  'MLST PROFILE (EnteroBase)',\r\n  'GENOTYPHI SNPs CALLED',\r\n  'Genome ID',\r\n  'Version',\r\n  'Organism Name',\r\n  'Organism ID',\r\n  'Species Name',\r\n  'Species ID',\r\n  'Genus Name',\r\n  'Genus ID',\r\n  'Reference ID',\r\n  'Matching Hashes',\r\n  'p-Value',\r\n  'Mash Distance',\r\n  'cip_pred_pheno',\r\n  'dcs_category',\r\n  'amr_category',\r\n  'num_qrdr',\r\n  'num_acrb',\r\n  'ESBL_category',\r\n  'chloramphenicol_category',\r\n  'tetracycline_category',\r\n  'cip_pheno_qrdr_gene',\r\n  'dcs_mechanisms',\r\n  'num_amr_genes',\r\n  'dfra_any',\r\n  'sul_any',\r\n  'co_trim',\r\n  'GENOTYPE_SIMPLE',\r\n  'h58_genotypes',\r\n  'COUNTRY OF ORIGIN',\r\n  'AGE',\r\n  'TRAVEL COUNTRY',\r\n  'TRAVEL ASSOCIATED',\r\n  'Inc Types'\r\n];\r\n\r\nexport const DownloadData = () => {\r\n  const classes = useStyles();\r\n  const matches500 = useMediaQuery('(max-width:500px)');\r\n  const [loadingCSV, setLoadingCSV] = useState(false);\r\n  const [loadingPDF, setLoadingPDF] = useState(false);\r\n  const [showAlert, setShowAlert] = useState(false);\r\n\r\n  const dispatch = useAppDispatch();\r\n  const actualCountry = useAppSelector((state) => state.dashboard.actualCountry);\r\n  const listPIMD = useAppSelector((state) => state.dashboard.listPMID);\r\n  const globalOverviewLabel = useAppSelector((state) => state.dashboard.globalOverviewLabel);\r\n  const actualGenomes = useAppSelector((state) => state.dashboard.actualGenomes);\r\n  const actualTimeInitial = useAppSelector((state) => state.dashboard.actualTimeInitial);\r\n  const actualTimeFinal = useAppSelector((state) => state.dashboard.actualTimeFinal);\r\n  const mapView = useAppSelector((state) => state.map.mapView);\r\n  const dataset = useAppSelector((state) => state.map.dataset);\r\n  const determinantsGraphDrugClass = useAppSelector((state) => state.graph.determinantsGraphDrugClass);\r\n  const genotypesForFilter = useAppSelector((state) => state.dashboard.genotypesForFilter);\r\n  const customDropdownMapView = useAppSelector((state) => state.graph.customDropdownMapView);\r\n\r\n  async function handleClickDownloadDatabase() {\r\n    setLoadingCSV(true);\r\n    await axios\r\n      .get(`${API_ENDPOINT}file/download`)\r\n      .then((res) => {\r\n        let indexes = [];\r\n        let csv = res.data.split('\\n');\r\n        let lines = [];\r\n\r\n        for (let index = 0; index < csv.length; index++) {\r\n          let line = csv[index].split(',');\r\n          lines.push(line);\r\n        }\r\n        lines[0].forEach((curr, index) => {\r\n          if (curr === 'cip_pred_pheno') {\r\n            lines[0][index] = 'Cip';\r\n          }\r\n        });\r\n\r\n        for (let index = 0; index < columnsToRemove.length; index++) {\r\n          let currentIndex = lines[0].indexOf(columnsToRemove[index]);\r\n          indexes.push(currentIndex);\r\n        }\r\n        indexes.sort();\r\n        indexes.reverse();\r\n\r\n        let newLines = [];\r\n        for (let j = 0; j < lines.length; j++) {\r\n          let aux = [];\r\n          for (let i = 0; i < lines[j].length; i++) {\r\n            if (!indexes.includes(i)) {\r\n              aux.push(lines[j][i]);\r\n            }\r\n          }\r\n          newLines.push(aux);\r\n        }\r\n\r\n        let newCSV = '';\r\n        for (let i = 0; i < newLines.length; i++) {\r\n          let aux = '';\r\n          for (let index = 0; index < newLines[i].length; index++) {\r\n            aux += newLines[i][index];\r\n            if (index !== newLines[i].length - 1) {\r\n              aux += ',';\r\n            }\r\n          }\r\n          if (i !== newLines.length - 1) {\r\n            aux += '\\n';\r\n          }\r\n          newCSV += aux;\r\n        }\r\n\r\n        download(newCSV, 'TyphiNET - Database.csv');\r\n      })\r\n      .finally(() => {\r\n        setLoadingCSV(false);\r\n      });\r\n  }\r\n\r\n  function formatDate(date) {\r\n    return moment(date).format('ddd MMM DD YYYY HH:mm');\r\n  }\r\n\r\n  function drawFooter({ document, pageHeight, pageWidth, date }) {\r\n    document.setFontSize(10);\r\n    document.line(0, pageHeight - 26, pageWidth, pageHeight - 24);\r\n    document.text(`Source: typhi.net [${date}]`, pageWidth / 2, pageHeight - 10, { align: 'center' });\r\n  }\r\n\r\n  function drawLegend({ id = null, legendData, document, factor, rectY, isGenotype = false, isDrug = false, xSpace }) {\r\n    legendData.forEach((legend, i) => {\r\n      const yFactor = (i % factor) * 10;\r\n      const xFactor = Math.floor(i / factor) * xSpace;\r\n\r\n      document.setFillColor(isGenotype ? getColorForGenotype(legend) : isDrug ? getColorForDrug(legend) : legend.color);\r\n      document.circle(50 + xFactor, rectY + 10 + yFactor, 2.5, 'F');\r\n\r\n      if (id === 'CERDT' && i < 2) {\r\n        if (i === 0) {\r\n          document.setFont(undefined, 'bold');\r\n        } else {\r\n          document.setFont(undefined, 'normal');\r\n        }\r\n      }\r\n      document.text(\r\n        isGenotype || isDrug ? legend.replaceAll('β', 'B') : legend.name,\r\n        56 + xFactor,\r\n        rectY + 12 + yFactor\r\n      );\r\n    });\r\n  }\r\n\r\n  async function handleClickDownloadPDF() {\r\n    setLoadingPDF(true);\r\n    dispatch(setPosition({ coordinates: [0, 0], zoom: 1 }));\r\n\r\n    try {\r\n      if(genotypesForFilter.length<=0)\r\n        return console.log(\"No data available to generate report\");\r\n      const doc = new jsPDF({ unit: 'px', format: 'a4' });\r\n      const pageWidth = doc.internal.pageSize.getWidth();\r\n      const pageHeight = doc.internal.pageSize.getHeight();\r\n      const date = formatDate(new Date());\r\n\r\n      // Logo\r\n      const logo = new Image();\r\n      logo.src = LogoImg;\r\n      const logoWidth = 80;\r\n      doc.addImage(logo, 'PNG', 16, 16, logoWidth, 34);\r\n\r\n      // Title and Date\r\n      doc.setFontSize(16).setFont(undefined, 'bold');\r\n      doc.text(`TyphiNET Report - ${globalOverviewLabel.fullLabel}`, pageWidth / 2, 34, { align: 'center' });\r\n      doc.setFontSize(12).setFont(undefined, 'normal');\r\n      doc.text(date, pageWidth / 2, 48, { align: 'center' });\r\n\r\n      const texts = getSalmonellaTexts(date);\r\n\r\n      // Info\r\n      doc.text(texts[0], 16, 85, { align: 'justify', maxWidth: pageWidth - 36 });\r\n      doc.text(texts[1], 16, 125, { align: 'justify', maxWidth: pageWidth - 36 });\r\n      doc.text(texts[2], 16, 153, {\r\n        align: 'justify',\r\n        maxWidth: pageWidth - 36\r\n      });\r\n      doc.text(texts[3], 16, 169, { align: 'justify', maxWidth: pageWidth - 36 });\r\n      doc.text(texts[4], 16, 197, { align: 'justify', maxWidth: pageWidth - 36 });\r\n      doc.text(texts[5], 16, 225, { align: 'justify', maxWidth: pageWidth - 36 });\r\n      doc.text(texts[6], 16, 277, { align: 'justify', maxWidth: pageWidth - 36 });\r\n\r\n      const euFlag = new Image();\r\n      euFlag.src = EUFlagImg;\r\n      doc.addImage(euFlag, 'JPG', 208, 290, 12, 8);\r\n\r\n      if (actualCountry !== 'All') {\r\n        doc.text(\r\n          `Studies contributing genomes representing infections originating from ${actualCountry} have the following PubMed IDs (PMIDs): ${listPIMD.join(\r\n            ', '\r\n          )}.`,\r\n          16,\r\n          317,\r\n          { align: 'justify', maxWidth: pageWidth - 36 }\r\n        );\r\n      }\r\n\r\n      drawFooter({ document: doc, pageHeight, pageWidth, date });\r\n\r\n      // Map\r\n      doc.addPage();\r\n      drawFooter({ document: doc, pageHeight, pageWidth, date });\r\n\r\n      doc.setFontSize(16).setFont(undefined, 'bold');\r\n      doc.text(`Global Overview of ${globalOverviewLabel.fullLabel}`, pageWidth / 2, 24, { align: 'center' });\r\n      doc.setFontSize(12).setFont(undefined, 'normal');\r\n      doc.text(`Total: ${actualGenomes} genomes`, pageWidth / 2, 40, { align: 'center' });\r\n      doc.text(`Country: ${actualCountry}`, pageWidth / 2, 52, { align: 'center' });\r\n      doc.text(`Time period: ${actualTimeInitial} to ${actualTimeFinal}`, pageWidth / 2, 64, { align: 'center' });\r\n      doc.line(16, 76, pageWidth - 16, 76);\r\n\r\n      doc.setFont(undefined, 'bold');\r\n      doc.text('Map', 16, 96);\r\n      doc.setFont(undefined, 'normal');\r\n      const actualMapView = mapLegends.find((x) => x.value === mapView).label;\r\n      doc.text(`Map View: ${actualMapView}`, 16, 108);\r\n      doc.text(`Dataset: ${dataset}${dataset === 'All' ? ' (local + travel)' : ''}`, 16, 120);\r\n\r\n      doc.setFontSize(8);\r\n      if(mapView === 'Genotype prevalence'){\r\n        if (customDropdownMapView.length === 1) {\r\n            doc.text('Selected Genotypes: ' + customDropdownMapView, 16, 140);\r\n        } else if (customDropdownMapView.length > 1) {\r\n            const genotypesText = customDropdownMapView.join('\\n');\r\n            doc.text('Selected Genotypes: \\n' + genotypesText, 16, 140);\r\n        }\r\n      }\r\n      // let mapY = 160 + (customDropdownMapView.length*9);\r\n      await svgAsPngUri(document.getElementById('global-overview-map'), {\r\n        scale: 4,\r\n        backgroundColor: 'white',\r\n        width: 1200,\r\n        left: -200\r\n      }).then(async (uri) => {\r\n        const canvas = document.createElement('canvas');\r\n        const ctx = canvas.getContext('2d');\r\n\r\n        const mapImg = document.createElement('img');\r\n        const mapImgPromise = imgOnLoadPromise(mapImg);\r\n        mapImg.src = uri;\r\n        await mapImgPromise;\r\n\r\n        canvas.width = 4800;\r\n        canvas.height = 2400;\r\n        ctx.drawImage(mapImg, 0, 0, canvas.width, canvas.height);\r\n\r\n        const img = canvas.toDataURL('image/png');\r\n        doc.addImage(img, 'PNG', 0, 160, pageWidth, 223);\r\n        // doc.addImage(img, 'PNG', 0, mapY, pageWidth, 223);\r\n      });\r\n\r\n      const mapLegend = new Image();\r\n      let legendWidth = 58.85;\r\n\r\n      switch (mapView) {\r\n        case 'Dominant Genotype':\r\n          legendWidth = 414.21;\r\n          mapLegend.src = 'legends/MapView_DominantGenotype.png';\r\n          break;\r\n        case 'No. Samples':\r\n          mapLegend.src = 'legends/MapView_NoSamples.png';\r\n          break;\r\n        // case 'Sensitive to all drugs':\r\n        case 'Susceptible to all drugs':\r\n          mapLegend.src = 'legends/MapView_Sensitive.png';\r\n          break;\r\n        case 'Genotype prevalence':\r\n          mapLegend.src = 'legends/MapView_prevalence.png';\r\n          break;\r\n        default:\r\n          mapLegend.src = 'legends/MapView_Others.png';\r\n          break;\r\n      }\r\n      if (mapView === 'Dominant Genotype') {\r\n        doc.addImage(mapLegend, 'PNG', pageWidth / 2 - legendWidth / 2, 351, legendWidth, 47);\r\n      } else {\r\n        doc.addImage(mapLegend, 'PNG', pageWidth - pageWidth / 5 , 85, legendWidth, 47);\r\n      }\r\n\r\n      // Graphs\r\n      const drugClassesBars = colorForDrugClasses[determinantsGraphDrugClass];\r\n      const drugClassesFactor = Math.ceil(drugClassesBars.length / 3);\r\n      const genotypesFactor = Math.ceil(genotypesForFilter.length / 6);\r\n\r\n      for (let index = 0; index < graphCards.length; index++) {\r\n        doc.addPage();\r\n        drawFooter({ document: doc, pageHeight, pageWidth, date });\r\n\r\n        const title = `${graphCards[index].title}${\r\n          graphCards[index].id === 'RDWG' ? `: ${determinantsGraphDrugClass}` : ''\r\n        }`;\r\n        doc.setFontSize(12).setFont(undefined, 'bold');\r\n        doc.text(title, 16, 24);\r\n        doc.setFont(undefined, 'normal');\r\n        doc.setFontSize(10);\r\n        doc.text(graphCards[index].description.join(' / ').replaceAll('≥', '>='), 16, 36);\r\n        doc.setFontSize(12);\r\n        doc.text(`Total: ${actualGenomes} genomes`, 16, 54);\r\n        doc.text(`Country: ${actualCountry}`, 16, 66);\r\n        doc.text(`Time period: ${actualTimeInitial} to ${actualTimeFinal}`, 16, 78);\r\n        doc.text(`Dataset: ${dataset}${dataset === 'All' ? ' (local + travel)' : ''}`, 16, 90);\r\n\r\n        const graphImg = document.createElement('img');\r\n        const graphImgPromise = imgOnLoadPromise(graphImg);\r\n        graphImg.src = await domtoimage.toPng(document.getElementById(graphCards[index].id), { bgcolor: 'white' });\r\n        await graphImgPromise;\r\n        if (graphImg.width <= 741) {\r\n          doc.addImage(graphImg, 'PNG', 16, 110);\r\n        } else {\r\n          doc.addImage(graphImg, 'PNG', 16, 110, pageWidth - 32, 271);\r\n        }\r\n\r\n        doc.setFillColor(255, 255, 255);\r\n        const rectY = matches500 ? 300 : graphImg.width <= 741 ? 360 : 320;\r\n        doc.rect(0, rectY, pageWidth, 200, 'F');\r\n\r\n        doc.setFontSize(9);\r\n        if (graphCards[index].id === 'RFWG') {\r\n          drawLegend({\r\n            document: doc,\r\n            legendData: drugs,\r\n            factor: 4,\r\n            rectY,\r\n            xSpace: 100,\r\n            isDrug: true\r\n          });\r\n        }else if (graphCards[index].id === 'DRT') {\r\n          drawLegend({\r\n            document: doc,\r\n            legendData: drugsForDrugResistanceGraph,\r\n            factor: 4,\r\n            rectY,\r\n            xSpace: 100,\r\n            isDrug: true\r\n          });\r\n        } else if (graphCards[index].id === 'RDWG') {\r\n          drawLegend({\r\n            document: doc,\r\n            legendData: drugClassesBars,\r\n            factor: drugClassesFactor,\r\n            rectY,\r\n            xSpace: 127\r\n          });\r\n        } else if (graphCards[index].id === 'GD') {\r\n          drawLegend({\r\n            document: doc,\r\n            legendData: genotypesForFilter,\r\n            factor: genotypesFactor,\r\n            rectY,\r\n            xSpace: 65,\r\n            isGenotype: true\r\n          });\r\n        }\r\n      }\r\n\r\n      doc.save('TyphiNET - Report.pdf');\r\n    } catch (error) {\r\n      setShowAlert(true);\r\n    } finally {\r\n      setLoadingPDF(false);\r\n    }\r\n  }\r\n\r\n  function handleCloseAlert() {\r\n    setShowAlert(false);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.downloadDataWrapper}>\r\n      <LoadingButton\r\n        className={classes.button}\r\n        variant=\"contained\"\r\n        onClick={handleClickDownloadDatabase}\r\n        loading={loadingCSV}\r\n        startIcon={<TableChart />}\r\n        loadingPosition=\"start\"\r\n      >\r\n        Download database (CSV format, 3.8MB)\r\n      </LoadingButton>\r\n      <LoadingButton\r\n        className={classes.button}\r\n        variant=\"contained\"\r\n        onClick={handleClickDownloadPDF}\r\n        loading={loadingPDF}\r\n        startIcon={<PictureAsPdf />}\r\n        loadingPosition=\"start\"\r\n      >\r\n        Download report from current view\r\n      </LoadingButton>\r\n      <Snackbar open={showAlert} autoHideDuration={5000} onClose={handleCloseAlert}>\r\n        <Alert onClose={handleCloseAlert} severity=\"error\" sx={{ width: '100%' }}>\r\n          Something went wrong with the download, please try again later.\r\n        </Alert>\r\n      </Snackbar>\r\n    </div>\r\n  );\r\n};\r\n\r\n","import {\r\n  Alert,\r\n  Card,\r\n  CardActions,\r\n  CircularProgress,\r\n  IconButton,\r\n  Snackbar,\r\n  Tooltip,\r\n  Typography,\r\n  useMediaQuery\r\n} from '@mui/material';\r\nimport { useStyles } from './GraphsMUI';\r\nimport { useAppSelector } from '../../../stores/hooks';\r\nimport { CameraAlt } from '@mui/icons-material';\r\nimport { DeterminantsGraph } from './DeterminantsGraph';\r\nimport { FrequenciesGraph } from './FrequenciesGraph';\r\nimport { DrugResistanceGraph } from './DrugResistanceGraph';\r\nimport { DistributionGraph } from './DistributionGraph';\r\nimport { useState } from 'react';\r\nimport { imgOnLoadPromise } from '../../../util/imgOnLoadPromise';\r\nimport domtoimage from 'dom-to-image';\r\nimport LogoImg from '../../../assets/img/logo-typhinet-prod.png';\r\nimport download from 'downloadjs';\r\nimport { drugs, drugsForDrugResistanceGraph } from '../../../util/drugs';\r\nimport { getColorForDrug } from './graphColorHelper';\r\nimport { colorForDrugClasses, getColorForGenotype } from '../../../util/colorHelper';\r\nimport { graphCards } from '../../../util/graphCards';\r\nimport { SelectCountry } from '../SelectCountry';\r\nimport { DownloadData } from '../DownloadData';\r\n\r\nexport const Graphs = () => {\r\n  const classes = useStyles();\r\n  const matches500 = useMediaQuery('(max-width:500px)');\r\n  const [showAlert, setShowAlert] = useState(false);\r\n  const [chartLoadings, setChartLoadings] = useState({\r\n    RFWG: false,\r\n    DRT: false,\r\n    RDWG: false,\r\n    GD: false\r\n  });\r\n\r\n  const dataset = useAppSelector((state) => state.map.dataset);\r\n  const actualTimeInitial = useAppSelector((state) => state.dashboard.actualTimeInitial);\r\n  const actualTimeFinal = useAppSelector((state) => state.dashboard.actualTimeFinal);\r\n  const actualCountry = useAppSelector((state) => state.dashboard.actualCountry);\r\n  const determinantsGraphDrugClass = useAppSelector((state) => state.graph.determinantsGraphDrugClass);\r\n  const globalOverviewLabel = useAppSelector((state) => state.dashboard.globalOverviewLabel);\r\n  const genotypesForFilter = useAppSelector((state) => state.dashboard.genotypesForFilter);\r\n\r\n  function drawLegend({\r\n    legendData,\r\n    context,\r\n    factor,\r\n    mobileFactor,\r\n    yPosition,\r\n    isGenotype = false,\r\n    isDrug = false,\r\n    xSpace\r\n  }) {\r\n    legendData.forEach((legend, i) => {\r\n      const yFactor = (i % factor) * 24;\r\n      const xFactor = Math.floor(i / factor) * xSpace;\r\n\r\n      context.fillStyle = isGenotype ? getColorForGenotype(legend) : isDrug ? getColorForDrug(legend) : legend.color;\r\n      context.beginPath();\r\n      context.arc(102 + xFactor, yPosition - mobileFactor + yFactor, 5, 0, 2 * Math.PI);\r\n      context.fill();\r\n      context.closePath();\r\n      context.fillStyle = 'black';\r\n      context.fillText(\r\n        isGenotype || isDrug ? legend : legend.name,\r\n        111 + xFactor,\r\n        yPosition + 4 - mobileFactor + yFactor\r\n      );\r\n    });\r\n  }\r\n\r\n  async function handleClickDownload(event, card) {\r\n    event.stopPropagation();\r\n    handleLoading(card.id, true);\r\n\r\n    try {\r\n      const canvas = document.createElement('canvas');\r\n      const ctx = canvas.getContext('2d');\r\n\r\n      const graph = document.getElementById(card.id);\r\n      const graphImg = document.createElement('img');\r\n      const graphImgPromise = imgOnLoadPromise(graphImg);\r\n\r\n      graphImg.src = await domtoimage.toPng(graph, { quality: 0.1, bgcolor: 'white' });\r\n      await graphImgPromise;\r\n\r\n      let heightFactor = 0,\r\n        drugClassesBars,\r\n        drugClassesFactor,\r\n        genotypesFactor;\r\n\r\n      if (['RFWG', 'DRT'].includes(card.id)) {\r\n        heightFactor = 250;\r\n      }\r\n      if (card.id === 'RDWG') {\r\n        drugClassesBars = colorForDrugClasses[determinantsGraphDrugClass];\r\n        drugClassesFactor = Math.ceil(drugClassesBars.length / 4);\r\n        heightFactor += drugClassesFactor * 22;\r\n      }\r\n      if (card.id === 'GD') {\r\n        genotypesFactor = Math.ceil(genotypesForFilter.length / 9);\r\n        heightFactor += genotypesFactor * 22;\r\n      }\r\n\r\n      canvas.width = 950;\r\n      canvas.height = graphImg.height + 220 + heightFactor;\r\n\r\n      ctx.fillStyle = 'white';\r\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n\r\n      const logo = document.createElement('img');\r\n      const logoPromise = imgOnLoadPromise(logo);\r\n      logo.src = LogoImg;\r\n      await logoPromise;\r\n\r\n      ctx.drawImage(logo, 10, 10, 155, 65);\r\n      ctx.drawImage(graphImg, canvas.width / 2 - graphImg.width / 2, 220);\r\n     \r\n      ctx.font = 'bold 18px Montserrat';\r\n      ctx.fillStyle = 'black';\r\n      ctx.textAlign = 'center';\r\n      ctx.fillText(card.title, canvas.width / 2, 50);\r\n\r\n      ctx.font = '12px Montserrat';\r\n      ctx.fillText(card.description.join(' / '), canvas.width / 2, 72);\r\n\r\n      ctx.font = '14px Montserrat';\r\n      // ctx.fillText(`Organism: ${globalOverviewLabel.fullLabel}`, canvas.width / 2, 110);\r\n      ctx.fillText(`Dataset: ${dataset}`, canvas.width / 2, 110);\r\n      ctx.fillText(`Time period: ${actualTimeInitial} to ${actualTimeFinal}`, canvas.width / 2, 132);\r\n      ctx.fillText(`Country: ${actualCountry}`, canvas.width / 2, 154);\r\n      if (card.id === 'RDWG') ctx.fillText(`Drug Class: ${determinantsGraphDrugClass}`, canvas.width / 2, 176);\r\n\r\n      ctx.fillStyle = 'white';\r\n      ctx.textAlign = 'start';\r\n      ctx.font = '12px Montserrat';\r\n\r\n      const mobileFactor = matches500 ? 100 : 0;\r\n    \r\n      if (['RFWG', 'DRT'].includes(card.id)) {\r\n        ctx.fillRect(0, 660 - mobileFactor, canvas.width, canvas.height);\r\n\r\n        drawLegend({\r\n          legendData: ((['RFWG'].includes(card.id))? drugs: drugsForDrugResistanceGraph),\r\n          context: ctx,\r\n          factor: 4,\r\n          mobileFactor,\r\n          yPosition: 670,\r\n          xSpace: 200,\r\n          isDrug: true\r\n        });\r\n      }\r\n      else if (card.id === 'RDWG') {\r\n        ctx.fillRect(0, 660 - mobileFactor, canvas.width, canvas.height);\r\n\r\n        drawLegend({\r\n          legendData: drugClassesBars,\r\n          context: ctx,\r\n          factor: drugClassesFactor,\r\n          mobileFactor,\r\n          yPosition: 670,\r\n          xSpace: 208\r\n        });\r\n      } else if (card.id === 'GD') {\r\n        ctx.fillRect(0, 660 - mobileFactor, canvas.width, canvas.height);\r\n\r\n        drawLegend({\r\n          legendData: genotypesForFilter,\r\n          context: ctx,\r\n          factor: genotypesFactor,\r\n          mobileFactor,\r\n          yPosition: 670,\r\n          isGenotype: true,\r\n          xSpace: 87\r\n        });\r\n      }\r\n\r\n      const base64 = canvas.toDataURL();\r\n      await download(base64, `TyphiNET - ${globalOverviewLabel.fullLabel} - ${card.title}.png`);\r\n    } catch {\r\n      setShowAlert(true);\r\n    } finally {\r\n      handleLoading(card.id, false);\r\n    }\r\n  }\r\n\r\n  function handleLoading(id, value) {\r\n    setChartLoadings({ ...chartLoadings, [id]: value });\r\n  }\r\n\r\n  function handleCloseAlert() {\r\n    setShowAlert(false);\r\n  }\r\n\r\n  return (\r\n    <Card className={classes.graphsCard} elevation={2}>\r\n      <SelectCountry />\r\n      {graphCards.map((card, index) => {\r\n        return (\r\n          <Card key={`graph-card-${index}`} className={classes.card} elevation={0}>\r\n            <CardActions disableSpacing className={classes.cardActions}>\r\n              <div className={classes.titleWrapper}>\r\n                <Typography fontSize=\"18px\" fontWeight=\"500\">\r\n                  {card.title}\r\n                </Typography>\r\n                <div className={classes.downloadWrapper}>\r\n                  <Tooltip title=\"Download Chart as PNG\" placement=\"top\">\r\n                    <span>\r\n                      <IconButton color=\"primary\" onClick={(event) => handleClickDownload(event, card)}>\r\n                        {chartLoadings[card.id] ? <CircularProgress color=\"primary\" size={24} /> : <CameraAlt />}\r\n                      </IconButton>\r\n                    </span>\r\n                  </Tooltip>\r\n                </div>\r\n              </div>\r\n              <Typography fontSize=\"10px\" component=\"span\">\r\n                {card.description.map((d, i) => (\r\n                  <div key={`description-${i}`}>{d}</div>\r\n                ))}\r\n              </Typography>\r\n            </CardActions>\r\n            <div className={classes.cardContent}>\r\n              {card.id === 'RFWG' && <FrequenciesGraph />}\r\n              {card.id === 'DRT' && <DrugResistanceGraph />}\r\n              {card.id === 'RDWG' && <DeterminantsGraph />}\r\n              {card.id === 'GD' && <DistributionGraph />}\r\n            </div>\r\n          </Card>\r\n        );\r\n      })}\r\n      <DownloadData />\r\n      <Snackbar open={showAlert} autoHideDuration={5000} onClose={handleCloseAlert}>\r\n        <Alert onClose={handleCloseAlert} severity=\"error\" sx={{ width: '100%' }}>\r\n          Something went wrong with the download, please try again later.\r\n        </Alert>\r\n      </Snackbar>\r\n    </Card>\r\n  );\r\n};\r\n","// Drug rules for Salmonella, where the column has to have one of the values to validate the rule. For frequencies and\r\n// drug resistance graphs\r\nexport const drugRules = [\r\n  { key: 'Ampicillin', columnID: 'blaTEM-1D', values: ['1'] },\r\n  { key: 'Azithromycin', columnID: 'azith_pred_pheno', values: ['AzithR'] },\r\n  { key: 'Chloramphenicol', columnID: 'chloramphenicol_category', values: ['ChlR'] },\r\n  // { key: 'Co-trimoxazole', columnID: 'co_trim', values: ['1'] },\r\n  { key: 'Trimethoprim-sulfamethoxazole', columnID: 'co_trim', values: ['1'] },\r\n  // { key: 'ESBL', columnID: 'ESBL_category', values: ['ESBL'] },\r\n  { key: 'Ceftriaxone', columnID: 'ESBL_category', values: ['ESBL'] },\r\n  // { key: 'Fluoroquinolones (CipNS)', columnID: 'cip_pred_pheno', values: ['CipR', 'CipI'] },\r\n  // { key: 'Ciprofloxacin R', columnID: 'cip_pred_pheno', values: ['CipR'] },\r\n  { key: 'Ciprofloxacin NS', columnID: 'cip_pred_pheno', values: ['CipNS'] },\r\n  { key: 'Sulphonamides', columnID: 'sul_any', values: ['1'] },\r\n  { key: 'Susceptible', columnID: 'amr_category', values: ['No AMR detected'] },\r\n  { key: 'Tetracyclines', columnID: 'tetracycline_category', values: ['TetR'] },\r\n  { key: 'Trimethoprim', columnID: 'dfra_any', values: ['1'] }\r\n];\r\n\r\nexport const drugRulesForDrugResistanceGraph = [\r\n  { key: 'MDR', columnID: 'MDR', values: ['MDR'] },\r\n  { key: 'XDR', columnID: 'XDR', values: ['XDR'] }\r\n];\r\n\r\n// Salmonella drug classes rules for determinants graph\r\nexport const drugClassesRules = {\r\n  Ampicillin: [\r\n    {\r\n      name: 'blaTEM-1D',\r\n      susceptible: false,\r\n      rules: [{ columnID: 'blaTEM-1D', value: '1' }]\r\n    },\r\n    {\r\n      name: 'None',\r\n      susceptible: true,\r\n      rules: [{ columnID: 'blaTEM-1D', value: '0' }]\r\n    }\r\n  ],\r\n  Azithromycin: [\r\n    {\r\n      name: 'acrB_R717Q + acrB_R717L',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'azith_pred_pheno', value: 'AzithR' },\r\n        { columnID: 'acrB_R717Q', value: '1' },\r\n        { columnID: 'acrB_R717L', value: '1' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'acrB_R717Q',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'azith_pred_pheno', value: 'AzithR' },\r\n        { columnID: 'acrB_R717Q', value: '1' },\r\n        { columnID: 'acrB_R717L', value: '0' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'acrB_R717L',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'azith_pred_pheno', value: 'AzithR' },\r\n        { columnID: 'acrB_R717L', value: '1' },\r\n        { columnID: 'acrB_R717Q', value: '0' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'None',\r\n      susceptible: true,\r\n      rules: [{ columnID: 'azith_pred_pheno', value: 'AzithS' }]\r\n    }\r\n  ],\r\n  Chloramphenicol: [\r\n    {\r\n      name: 'catA1 + cmlA',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'chloramphenicol_category', value: 'ChlR' },\r\n        { columnID: 'catA1', value: '1' },\r\n        { columnID: 'cmlA', value: '1' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'catA1',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'chloramphenicol_category', value: 'ChlR' },\r\n        { columnID: 'catA1', value: '1' },\r\n        { columnID: 'cmlA', value: '0' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'cmlA',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'chloramphenicol_category', value: 'ChlR' },\r\n        { columnID: 'cmlA', value: '1' },\r\n        { columnID: 'catA1', value: '0' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'None',\r\n      susceptible: true,\r\n      rules: [{ columnID: 'chloramphenicol_category', value: 'ChlS' }]\r\n    }\r\n  ],\r\n  // 'Co-trimoxazole': [\r\n  'Trimethoprim-sulfamethoxazole': [\r\n    {\r\n      name: 'dfrA7 + dfrA14 + sul1 + sul2',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'co_trim', value: '1' },\r\n        { columnID: 'dfrA7', value: '1' },\r\n        { columnID: 'dfrA14', value: '1' },\r\n        { columnID: 'sul1', value: '1' },\r\n        { columnID: 'sul2', value: '1' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'dfrA7 + sul1 + sul2',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'co_trim', value: '1' },\r\n        { columnID: 'dfrA7', value: '1' },\r\n        { columnID: 'dfrA14', value: '0' },\r\n        { columnID: 'sul1', value: '1' },\r\n        { columnID: 'sul2', value: '1' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'dfrA7 + sul1',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'co_trim', value: '1' },\r\n        { columnID: 'dfrA7', value: '1' },\r\n        { columnID: 'dfrA14', value: '0' },\r\n        { columnID: 'sul1', value: '1' },\r\n        { columnID: 'sul2', value: '0' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'dfrA7 + sul2',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'co_trim', value: '1' },\r\n        { columnID: 'dfrA7', value: '1' },\r\n        { columnID: 'dfrA14', value: '0' },\r\n        { columnID: 'sul1', value: '0' },\r\n        { columnID: 'sul2', value: '1' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'dfrA14 + sul1 + sul2',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'co_trim', value: '1' },\r\n        { columnID: 'dfrA7', value: '0' },\r\n        { columnID: 'dfrA14', value: '1' },\r\n        { columnID: 'sul1', value: '1' },\r\n        { columnID: 'sul2', value: '1' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'dfrA14 + sul1',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'co_trim', value: '1' },\r\n        { columnID: 'dfrA7', value: '0' },\r\n        { columnID: 'dfrA14', value: '1' },\r\n        { columnID: 'sul1', value: '1' },\r\n        { columnID: 'sul2', value: '0' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'dfrA14 + sul2',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'co_trim', value: '1' },\r\n        { columnID: 'dfrA7', value: '0' },\r\n        { columnID: 'dfrA14', value: '1' },\r\n        { columnID: 'sul1', value: '0' },\r\n        { columnID: 'sul2', value: '1' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'dfrA1 + sul1 + sul2',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'co_trim', value: '1' },\r\n        { columnID: 'dfrA1', value: '1' },\r\n        { columnID: 'sul1', value: '1' },\r\n        { columnID: 'sul2', value: '1' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'dfrA1 + sul1',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'co_trim', value: '1' },\r\n        { columnID: 'dfrA1', value: '1' },\r\n        { columnID: 'sul1', value: '1' },\r\n        { columnID: 'sul2', value: '0' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'dfrA1 + sul2',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'co_trim', value: '1' },\r\n        { columnID: 'dfrA1', value: '1' },\r\n        { columnID: 'sul1', value: '0' },\r\n        { columnID: 'sul2', value: '1' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'dfrA5 + sul1 + sul2',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'co_trim', value: '1' },\r\n        { columnID: 'dfrA5', value: '1' },\r\n        { columnID: 'sul1', value: '1' },\r\n        { columnID: 'sul2', value: '1' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'dfrA5 + sul1',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'co_trim', value: '1' },\r\n        { columnID: 'dfrA5', value: '1' },\r\n        { columnID: 'sul1', value: '1' },\r\n        { columnID: 'sul2', value: '0' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'dfrA5 + sul2',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'co_trim', value: '1' },\r\n        { columnID: 'dfrA5', value: '1' },\r\n        { columnID: 'sul1', value: '0' },\r\n        { columnID: 'sul2', value: '1' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'dfrA15 + sul1 + sul2',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'co_trim', value: '1' },\r\n        { columnID: 'dfrA15', value: '1' },\r\n        { columnID: 'sul1', value: '1' },\r\n        { columnID: 'sul2', value: '1' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'dfrA15 + sul1',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'co_trim', value: '1' },\r\n        { columnID: 'dfrA15', value: '1' },\r\n        { columnID: 'sul1', value: '1' },\r\n        { columnID: 'sul2', value: '0' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'dfrA15 + sul2',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'co_trim', value: '1' },\r\n        { columnID: 'dfrA15', value: '1' },\r\n        { columnID: 'sul1', value: '0' },\r\n        { columnID: 'sul2', value: '1' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'dfrA17 + sul1 + sul2',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'co_trim', value: '1' },\r\n        { columnID: 'dfrA17', value: '1' },\r\n        { columnID: 'sul1', value: '1' },\r\n        { columnID: 'sul2', value: '1' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'dfrA17 + sul1',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'co_trim', value: '1' },\r\n        { columnID: 'dfrA17', value: '1' },\r\n        { columnID: 'sul1', value: '1' },\r\n        { columnID: 'sul2', value: '0' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'dfrA17 + sul2',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'co_trim', value: '1' },\r\n        { columnID: 'dfrA17', value: '1' },\r\n        { columnID: 'sul1', value: '0' },\r\n        { columnID: 'sul2', value: '1' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'dfrA18 + sul1 + sul2',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'co_trim', value: '1' },\r\n        { columnID: 'dfrA18', value: '1' },\r\n        { columnID: 'sul1', value: '1' },\r\n        { columnID: 'sul2', value: '1' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'dfrA18 + sul1',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'co_trim', value: '1' },\r\n        { columnID: 'dfrA18', value: '1' },\r\n        { columnID: 'sul1', value: '1' },\r\n        { columnID: 'sul2', value: '0' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'dfrA18 + sul2',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'co_trim', value: '1' },\r\n        { columnID: 'dfrA18', value: '1' },\r\n        { columnID: 'sul1', value: '0' },\r\n        { columnID: 'sul2', value: '1' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'None',\r\n      susceptible: true,\r\n      rules: [{ columnID: 'co_trim', value: '0' }]\r\n    }\r\n  ],\r\n  // ESBL: [\r\n  Ceftriaxone: [\r\n    {\r\n      name: 'blaCTX-M-15',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'ESBL_category', value: 'ESBL' },\r\n        { columnID: 'blaCTX-M-15_23', value: '1' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'blaCTX-M-12',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'ESBL_category', value: 'ESBL' },\r\n        { columnID: 'blaCTX-M-12', value: '1' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'blaOXA-7',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'ESBL_category', value: 'ESBL' },\r\n        { columnID: 'blaOXA-7', value: '1' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'blaSHV-12',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'ESBL_category', value: 'ESBL' },\r\n        { columnID: 'blaSHV-12', value: '1' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'blaCTX-M-55',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'ESBL_category', value: 'ESBL' },\r\n        { columnID: 'blaCTX-M-55', value: '1' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'None',\r\n      susceptible: true,\r\n      rules: [{ columnID: 'ESBL_category', value: 'Non-ESBL' }]\r\n    }\r\n  ],\r\n  // 'Fluoroquinolones (CipNS)': [\r\n  'Ciprofloxacin NS': [\r\n    {\r\n      name: '3_QRDR + qnrS (CipR)',\r\n      susceptible: false,\r\n      rules: [{ columnID: 'dcs_mechanisms', value: '3_QRDR + qnrS' }]\r\n    },\r\n    {\r\n      name: '3_QRDR + qnrB (CipR)',\r\n      susceptible: false,\r\n      rules: [{ columnID: 'dcs_mechanisms', value: '3_QRDR + qnrB' }]\r\n    },\r\n    {\r\n      name: '3_QRDR (CipR)',\r\n      susceptible: false,\r\n      rules: [{ columnID: 'dcs_mechanisms', value: '3_QRDR' }]\r\n    },\r\n    {\r\n      name: '2_QRDR + qnrS (CipR)',\r\n      susceptible: false,\r\n      rules: [{ columnID: 'dcs_mechanisms', value: '2_QRDR + qnrS' }]\r\n    },\r\n    {\r\n      name: '2_QRDR + qnrB (CipR)',\r\n      susceptible: false,\r\n      rules: [{ columnID: 'dcs_mechanisms', value: '2_QRDR + qnrB' }]\r\n    },\r\n    {\r\n      name: '2_QRDR (CipR)',\r\n      susceptible: false,\r\n      rules: [{ columnID: 'dcs_mechanisms', value: '2_QRDR' }]\r\n    },\r\n    {\r\n      name: '1_QRDR + qnrS (CipNS)',\r\n      susceptible: false,\r\n      rules: [{ columnID: 'dcs_mechanisms', value: '1_QRDR + qnrS' }]\r\n    },\r\n    {\r\n      name: '1_QRDR + qnrB (CipNS)',\r\n      susceptible: false,\r\n      rules: [{ columnID: 'dcs_mechanisms', value: '1_QRDR + qnrB' }]\r\n    },\r\n    {\r\n      name: '1_QRDR (CipNS)',\r\n      susceptible: false,\r\n      rules: [{ columnID: 'dcs_mechanisms', value: '1_QRDR' }]\r\n    },\r\n    {\r\n      name: '0_QRDR + qnrS (CipNS)',\r\n      susceptible: false,\r\n      rules: [{ columnID: 'dcs_mechanisms', value: '0_QRDR + qnrS' }]\r\n    },\r\n    {\r\n      name: '0_QRDR + qnrB (CipNS)',\r\n      susceptible: false,\r\n      rules: [{ columnID: 'dcs_mechanisms', value: '0_QRDR + qnrB' }]\r\n    },\r\n    {\r\n      name: '0_QRDR + qnrS + qnrD (CipNS)',\r\n      susceptible: false,\r\n      rules: [{ columnID: 'dcs_mechanisms', value: '0_QRDR + qnrS + qnrD' }]\r\n    },\r\n    {\r\n      name: 'None (CipS)',\r\n      susceptible: true,\r\n      rules: [{ columnID: 'dcs_mechanisms', value: '0_QRDR' }]\r\n    }\r\n  ],\r\n  Sulphonamides: [\r\n    {\r\n      name: 'sul1 + sul2',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'sul_any', value: '1' },\r\n        { columnID: 'sul1', value: '1' },\r\n        { columnID: 'sul2', value: '1' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'sul1',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'sul_any', value: '1' },\r\n        { columnID: 'sul1', value: '1' },\r\n        { columnID: 'sul2', value: '0' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'sul2',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'sul_any', value: '1' },\r\n        { columnID: 'sul2', value: '1' },\r\n        { columnID: 'sul1', value: '0' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'None',\r\n      susceptible: true,\r\n      rules: [{ columnID: 'sul_any', value: '0' }]\r\n    }\r\n  ],\r\n  Tetracyclines: [\r\n    {\r\n      name: 'tetA(A)',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'tetracycline_category', value: 'TetR' },\r\n        { columnID: 'tetA(A)', value: '1' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'tetA(B)',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'tetracycline_category', value: 'TetR' },\r\n        { columnID: 'tetA(B)', value: '1' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'tetA(C)',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'tetracycline_category', value: 'TetR' },\r\n        { columnID: 'tetA(C)', value: '1' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'tetA(D)',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'tetracycline_category', value: 'TetR' },\r\n        { columnID: 'tetA(D)', value: '1' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'None',\r\n      susceptible: true,\r\n      rules: [{ columnID: 'tetracycline_category', value: 'TetS' }]\r\n    }\r\n  ],\r\n  Trimethoprim: [\r\n    {\r\n      name: 'dfrA7 + dfrA14',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'dfra_any', value: '1' },\r\n        { columnID: 'dfrA7', value: '1' },\r\n        { columnID: 'dfrA14', value: '1' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'dfrA7',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'dfra_any', value: '1' },\r\n        { columnID: 'dfrA7', value: '1' },\r\n        { columnID: 'dfrA14', value: '0' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'dfrA14',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'dfra_any', value: '1' },\r\n        { columnID: 'dfrA14', value: '1' },\r\n        { columnID: 'dfrA7', value: '0' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'dfrA1',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'dfra_any', value: '1' },\r\n        { columnID: 'dfrA1', value: '1' },\r\n        { columnID: 'dfrA14', value: '0' },\r\n        { columnID: 'dfrA7', value: '0' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'dfrA5',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'dfra_any', value: '1' },\r\n        { columnID: 'dfrA5', value: '1' },\r\n        { columnID: 'dfrA14', value: '0' },\r\n        { columnID: 'dfrA7', value: '0' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'dfrA15',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'dfra_any', value: '1' },\r\n        { columnID: 'dfrA15', value: '1' },\r\n        { columnID: 'dfrA14', value: '0' },\r\n        { columnID: 'dfrA7', value: '0' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'dfrA17',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'dfra_any', value: '1' },\r\n        { columnID: 'dfrA17', value: '1' },\r\n        { columnID: 'dfrA14', value: '0' },\r\n        { columnID: 'dfrA7', value: '0' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'dfrA18',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'dfra_any', value: '1' },\r\n        { columnID: 'dfrA18', value: '1' },\r\n        { columnID: 'dfrA14', value: '0' },\r\n        { columnID: 'dfrA7', value: '0' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'None',\r\n      susceptible: true,\r\n      rules: [{ columnID: 'dfra_any', value: '0' }]\r\n    }\r\n  ]\r\n};\r\n","import { drugClassesRules, drugRules, drugRulesForDrugResistanceGraph } from '../../util/drugClassesRules';\r\n\r\n// This filter is called after either dataset, initialYear, finalYear or country changes and if reset button is pressed.\r\n// And it returns the data filtered by the variables said before, also the list of unique genotypes, count of genotypes\r\n\r\n\r\n// and count of genomes.\r\nexport function filterData({ data, dataset, actualTimeInitial, actualTimeFinal, actualCountry }) {\r\n  const checkDataset = (item) => dataset === 'All' || item.TRAVEL === dataset.toLowerCase();\r\n  const checkTime = (item) => {\r\n    return item.DATE >= actualTimeInitial && item.DATE <= actualTimeFinal;\r\n  };\r\n\r\n  const newData = data.filter((x) => checkDataset(x) && checkTime(x));\r\n  const genotypes = [...new Set(newData.map((x) => x.GENOTYPE))];\r\n  // genotypes.sort((a, b) => a.localeCompare(b));\r\n\r\n  let genomesCount = newData.length;\r\n  let genotypesCount = genotypes.length;\r\n  let listPMID = [];\r\n\r\n  if (actualCountry !== 'All') {\r\n    const countryData = newData.filter((x) => getCountryDisplayName(x.COUNTRY_ONLY) === actualCountry);\r\n    genomesCount = countryData.length;\r\n    listPMID = [...new Set(countryData.map((x) => x.PMID))];\r\n\r\n    const countryGenotypes = [...new Set(countryData.map((x) => x.GENOTYPE))];\r\n    genotypesCount = countryGenotypes.length;\r\n  }\r\n\r\n  return {\r\n    data: newData,\r\n    genotypes,\r\n    genomesCount,\r\n    genotypesCount,\r\n    listPMID\r\n  };\r\n}\r\n\r\n// Adjust the country names to its correct name\r\nexport function getCountryDisplayName(country) {\r\n  switch (country) {\r\n    case 'Democratic Republic of the Congo':\r\n      return 'Dem. Rep. Congo';\r\n    case 'Central African Republic':\r\n      return 'Central African Rep.';\r\n    case 'Ivory Coast':\r\n    case \"Cote d'Ivoire\":\r\n      return \"Côte d'Ivoire\";\r\n    case 'East Timor':\r\n      return 'Timor-Leste';\r\n    case 'State of Palestine':\r\n      return 'Palestine';\r\n    case 'Dominican Republic':\r\n      return 'Dominican Rep.';\r\n    case 'Viet Nam':\r\n      return 'Vietnam';\r\n    case 'USA':\r\n      return 'United States of America';\r\n    case 'Cape Verde':\r\n      return 'Cabo Verde';\r\n    case 'Turks and Caicos Islands':\r\n      return 'Turks and Caicos Is.';\r\n    case 'United Kingdom (England/Wales/N. Ireland)':\r\n    case 'United Kingdom (Scotland)':\r\n    case 'UK':\r\n      return 'United Kingdom';\r\n    case 'The Gambia':\r\n      return 'Gambia';\r\n    default:\r\n      return country;\r\n  }\r\n}\r\n\r\n// Get specific drug count, percentage and al its types for the map component\r\nfunction getMapStatsData({ countryData, columnKey, statsKey }) {\r\n  const data = {\r\n    items: [],\r\n    percentage: 0,\r\n    count: 0\r\n  };\r\n\r\n  const columnData = [...new Set(countryData.map((x) => x[columnKey]))];\r\n  data.items = columnData.map((name) => {\r\n    const count = countryData.filter((x) => x[columnKey] === name).length;\r\n    const percentage = Number(((count / countryData.length) * 100).toFixed(2));\r\n\r\n    if (name === statsKey) {\r\n      data.count = count;\r\n      data.percentage = percentage;\r\n    }\r\n    return { name, count, percentage };\r\n  });\r\n\r\n  if (statsKey === '-') {\r\n    data.count = countryData.length - data.count;\r\n    data.percentage = Number(((data.count / countryData.length) * 100).toFixed(2));\r\n  }\r\n\r\n  return data;\r\n}\r\n\r\n// Get country data for map component, the data includes the name, count and drug stats\r\nexport function getMapData({ data, countries }) {\r\n  const mapData = countries.map((country) => {\r\n    const stats = {\r\n      GENOTYPE: {\r\n        items: [],\r\n        count: 0\r\n      }\r\n    };\r\n\r\n    const countryData = data.filter((x) => getCountryDisplayName(x.COUNTRY_ONLY) === country);\r\n\r\n    if (countryData.length === 0) {\r\n      return {};\r\n    }\r\n\r\n    const genotypes = [...new Set(countryData.map((x) => x.GENOTYPE))];\r\n    stats.GENOTYPE.count = genotypes.length;\r\n    stats.GENOTYPE.items = genotypes.map((genotype) => {\r\n      return {\r\n        name: genotype,\r\n        count: countryData.filter((x) => x.GENOTYPE === genotype).length\r\n      };\r\n    });\r\n    stats.GENOTYPE.items.sort((a, b) => (a.count <= b.count ? 1 : -1));\r\n\r\n    stats.H58 = getMapStatsData({ countryData, columnKey: 'GENOTYPE_SIMPLE', statsKey: 'H58' });\r\n    stats.MDR = getMapStatsData({ countryData, columnKey: 'MDR', statsKey: 'MDR' });\r\n    stats.XDR = getMapStatsData({ countryData, columnKey: 'XDR', statsKey: 'XDR' });\r\n    stats.AzithR = getMapStatsData({ countryData, columnKey: 'azith_pred_pheno', statsKey: 'AzithR' });\r\n    stats.Susceptible = getMapStatsData({ countryData, columnKey: 'amr_category', statsKey: 'No AMR detected' });\r\n    stats.CipR = getMapStatsData({ countryData, columnKey: 'cip_pred_pheno', statsKey: 'CipR' });\r\n    stats.CipNS = getMapStatsData({ countryData, columnKey: 'cip_pred_pheno', statsKey: 'CipNS' });\r\n\r\n    return {\r\n      name: country,\r\n      count: countryData.length,\r\n      stats\r\n    };\r\n  });\r\n\r\n  return mapData;\r\n}\r\n\r\n// Get data for distribution and drug resistance graphs\r\nexport function getYearsData({ data, years, actualCountry, getUniqueGenotypes = false }) {\r\n  const drugsData = [];\r\n  const genotypesAndDrugsData = {};\r\n  let uniqueGenotypes = [];\r\n  const genotypesAndDrugsDataUniqueGenotypes = {};\r\n\r\n  const genotypesData = years.map((year) => {\r\n    const yearData = data.filter((x) => x.DATE === year && (actualCountry === 'All' || getCountryDisplayName(x.COUNTRY_ONLY) === actualCountry)\r\n);\r\n    const response = {\r\n      name: year.toString(),\r\n      count: yearData.length\r\n    };\r\n    let stats = {};\r\n\r\n    if (yearData.length > 0) {\r\n      const genotypes = [...new Set(yearData.map((x) => x.GENOTYPE))];\r\n\r\n      stats = genotypes.reduce((accumulator, currentValue) => {\r\n        const count = yearData.filter((x) => x.GENOTYPE === currentValue).length;\r\n        accumulator[currentValue] = count;\r\n\r\n        return accumulator;\r\n      }, {});\r\n\r\n      if (yearData.length >= 10) {\r\n        const drugStats = {};\r\n\r\n        drugRules.forEach((rule) => {\r\n          const drugData = yearData.filter((x) => rule.values.includes(x[rule.columnID]));\r\n          drugStats[rule.key] = drugData.length;\r\n\r\n          if (rule.key === 'Ciprofloxacin NS') {\r\n            drugStats['Ciprofloxacin R'] = yearData.filter((x) => x[rule.columnID] === 'CipR').length;\r\n            drugStats['Ciprofloxacin NS'] = drugStats['Ciprofloxacin NS'] + drugStats['Ciprofloxacin R'];\r\n          }\r\n        });\r\n\r\n        drugRulesForDrugResistanceGraph.forEach((rule) => {\r\n          const drugData = yearData.filter((x) => rule.values.includes(x[rule.columnID]));\r\n          drugStats[rule.key] = drugData.length;\r\n        });\r\n        \r\n        // const susceptible = yearData.filter((x) => x.num_resistance_classes === '0');\r\n        // drugStats['Susceptible'] = susceptible.length;\r\n\r\n        drugsData.push({ ...response, ...drugStats });\r\n      }\r\n    }\r\n\r\n    return {\r\n      ...response,\r\n      ...stats\r\n    };\r\n  });\r\n  if (getUniqueGenotypes) {\r\n    uniqueGenotypes = [...new Set(uniqueGenotypes.map((x) => x))];\r\n    uniqueGenotypes.sort((a, b) => a - b);\r\n  }\r\n\r\n  Object.keys(genotypesAndDrugsDataUniqueGenotypes).forEach((key) => {\r\n    const unique = [...new Set(genotypesAndDrugsDataUniqueGenotypes[key])];\r\n\r\n    genotypesAndDrugsData[key].forEach((item) => {\r\n      const keys = Object.keys(item);\r\n      const filtered = unique.filter((x) => !keys.includes(x));\r\n      filtered.forEach((x) => {\r\n        item[x] = 0;\r\n      });\r\n    });\r\n  });\r\n\r\n  return { genotypesData: genotypesData.filter((x) => x.count > 0), drugsData };\r\n}\r\n\r\n// Get data for frequencies and determinants graphs\r\nexport function getGenotypesData({ data, genotypes, actualCountry }) {\r\n  const genotypesDrugClassesData = {};\r\n\r\n  drugRules.forEach((drug) => {\r\n    if (drug.key !== 'Susceptible') {\r\n      genotypesDrugClassesData[drug.key] = [];\r\n    }\r\n  });\r\n\r\n  const genotypesDrugsData = genotypes.map((genotype) => {\r\n    const genotypeData = data.filter((x) => x.GENOTYPE === genotype && (actualCountry === 'All' || getCountryDisplayName(x.COUNTRY_ONLY) === actualCountry)\r\n    );\r\n\r\n    const response = {\r\n      name: genotype,\r\n      totalCount: genotypeData.length,\r\n      resistantCount: 0\r\n    };\r\n\r\n    const drugClassResponse = {\r\n      name: genotype,\r\n      totalCount: genotypeData.length,\r\n      resistantCount: 0\r\n    };\r\n\r\n    drugRules.forEach((rule) => {\r\n      const drugData = genotypeData.filter((x) => rule.values.includes(x[rule.columnID]));\r\n      response[rule.key] = drugData.length;\r\n\r\n      if (rule.key === 'Ciprofloxacin NS') {\r\n        response['Ciprofloxacin R'] = genotypeData.filter((x) => x[rule.columnID] === 'CipR').length;\r\n        response['Ciprofloxacin NS'] = response['Ciprofloxacin NS'] + response['Ciprofloxacin R'];\r\n\r\n      }\r\n\r\n      if (rule.key !== 'Susceptible') {\r\n        const drugClass = { ...drugClassResponse };\r\n\r\n        drugClassesRules[rule.key].forEach((classRule) => {\r\n          const classRuleName = classRule.name;\r\n\r\n          drugClass[classRuleName] = genotypeData.filter((x) => {\r\n            return classRule.rules.every((r) => x[r.columnID] === r.value);\r\n          }).length;\r\n\r\n          if (classRule.susceptible) {\r\n            drugClass.resistantCount = drugClass.totalCount - drugClass[classRuleName];\r\n          }\r\n        });\r\n\r\n        genotypesDrugClassesData[rule.key].push(drugClass);\r\n      }\r\n    });\r\n\r\n    response.resistantCount = response.totalCount - response['Susceptible'];\r\n    return response;\r\n  });\r\n\r\n  genotypesDrugsData.sort((a, b) => b.resistantCount - a.resistantCount);\r\n  Object.keys(genotypesDrugClassesData).forEach((key) => {\r\n    genotypesDrugClassesData[key].sort((a, b) => b.resistantCount - a.resistantCount);\r\n    genotypesDrugClassesData[key] = genotypesDrugClassesData[key].slice(0, 10);\r\n  });\r\n\r\n  return { genotypesDrugsData, genotypesDrugClassesData };\r\n}\r\n","import { makeStyles } from '@mui/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  resetButton: {\r\n    position: 'fixed',\r\n    right: 16,\r\n    bottom: 0,\r\n    padding: '16px',\r\n\r\n    '@media (max-width: 500px)': {\r\n      right: 8,\r\n      padding: '8px'\r\n    }\r\n  }\r\n}));\r\n\r\nexport { useStyles };\r\n","import { RestartAlt } from '@mui/icons-material';\r\nimport { useStyles } from './ResetButtonMUI';\r\nimport { Fab, Tooltip, useMediaQuery } from '@mui/material';\r\nimport { useAppDispatch, useAppSelector } from '../../../stores/hooks';\r\nimport { setActualTimeFinal, setActualTimeInitial, setCanGetData } from '../../../stores/slices/dashboardSlice';\r\nimport { setDataset, setMapView, setPosition, setIfCustom} from '../../../stores/slices/mapSlice';\r\nimport { setActualCountry } from '../../../stores/slices/dashboardSlice';\r\nimport {\r\n  setDeterminantsGraphDrugClass,\r\n  setDeterminantsGraphView,\r\n  setDistributionGraphView,\r\n  setDrugResistanceGraphView,\r\n  setFrequenciesGraphView,\r\n  setCustomDropdownMapView\r\n} from '../../../stores/slices/graphSlice';\r\nimport { defaultDrugsForDrugResistanceGraph } from '../../../util/drugs';\r\nimport {\r\n  getGenotypesData\r\n} from '../../Dashboard/filters';\r\n\r\nexport const ResetButton = (props) => {\r\n  const classes = useStyles();\r\n  const matches500 = useMediaQuery('(max-width: 500px)');\r\n\r\n  const dispatch = useAppDispatch();\r\n  const timeInitial = useAppSelector((state) => state.dashboard.timeInitial);\r\n  const timeFinal = useAppSelector((state) => state.dashboard.timeFinal);\r\n  const genotypes = useAppSelector((state) => state.dashboard.genotypesForFilter);\r\n  const actualCountry = useAppSelector((state) => state.dashboard.actualCountry);\r\n\r\n  function handleClick() {\r\n    dispatch(setCanGetData(false));\r\n  \r\n    dispatch(setDataset('All'));\r\n    dispatch(setActualTimeInitial(timeInitial));\r\n    dispatch(setActualTimeFinal(timeFinal));\r\n    dispatch(setPosition({ coordinates: [0, 0], zoom: 1 }));\r\n    dispatch(setActualCountry('All'));\r\n\r\n    dispatch(setMapView('CipNS'));\r\n    dispatch(setDrugResistanceGraphView(defaultDrugsForDrugResistanceGraph));\r\n    dispatch(setDeterminantsGraphDrugClass('Ciprofloxacin NS'));\r\n\r\n    dispatch(setFrequenciesGraphView('percentage'));\r\n    dispatch(setDeterminantsGraphView('percentage'));\r\n    dispatch(setDistributionGraphView('number'));\r\n    dispatch(setCanGetData(true));\r\n    dispatch(setIfCustom(false));\r\n    const genotypesData = getGenotypesData({ data: props.data, genotypes, actualCountry });\r\n    dispatch(setCustomDropdownMapView(genotypesData.genotypesDrugsData.slice(0, 1).map((x) => x.name)));\r\n  }\r\n\r\n  return (\r\n    <div className={classes.resetButton}>\r\n      <Tooltip title=\"Reset Configurations\" placement=\"left\">\r\n        <span>\r\n          <Fab color=\"primary\" size={matches500 ? 'medium' : 'large'} onClick={handleClick}>\r\n            <RestartAlt sx={{ color: '#fff' }} />\r\n          </Fab>\r\n        </span>\r\n      </Tooltip>\r\n    </div>\r\n  );\r\n};\r\n","import { makeStyles } from '@mui/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    '&.MuiCard-root': {\r\n      borderRadius: '16px'\r\n    }\r\n  },\r\n  cardContent: {\r\n    padding: '24px !important',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n\r\n    '@media (max-width: 500px)': {\r\n      padding: '16px !important'\r\n    }\r\n  },\r\n  paragraph: {\r\n    textAlign: 'justify',\r\n    margin: '16px 0px'\r\n  }\r\n}));\r\n\r\nexport { useStyles };\r\n","import { Card, CardContent, Typography } from '@mui/material';\r\nimport { useStyles } from './AboutMUI';\r\nimport euFlagImg from '../../assets/img/eu_flag.jpg';\r\n\r\nexport const About = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.card} elevation={2}>\r\n      <CardContent className={classes.cardContent}>\r\n        <Typography variant=\"h5\" fontWeight={700}>\r\n          About TyphiNET\r\n        </Typography>\r\n\r\n        <div className={classes.paragraph}>\r\n          The TyphiNET dashboard collates antimicrobial resistance (AMR) and genotype (lineage) information extracted\r\n          from whole genome sequence (WGS) data from the bacterial pathogen <i> Salmonella</i> Typhi, the agent of\r\n          typhoid fever.\r\n        </div>\r\n\r\n        <div className={classes.paragraph}>\r\n          AMR determinants identified in the genome assemblies using Pathogenwatch are used to define drug resistance\r\n          variables as follows.Multidrug resistance(MDR): resistance determinants for chloramphenicol (<i>catA1</i> or{' '}\r\n          <i>cmlA</i>), ampicillin (<i>bla</i>TEM-1D, <i>bla</i>OXA-7), and co-trimoxazole (at least one <i>dfrA</i>{' '}\r\n          gene and at least one <i>sul</i> gene). Ciprofloxacin non-susceptible (CipNS): one or more of the quinolone\r\n          resistance determining region(QRDR) mutations at <i>gyrA</i>-83, <i>gyrA</i>\r\n          -87, <i>parC</i>-80, <i>parC</i>-84, <i>gyrB</i>-464 or presence of a plasmid - mediated quinolone\r\n          resistance(PMQR) gene(<i>qnrB</i>, <i>qnrD</i> , <i>qnrS</i>). Ciprofloxacin resistant (CipR): QRDR triple\r\n          mutant (<i>gyrA</i>-83 and <i>gyrA</i>-87, together with either <i>parC</i>-80 or <i>parC</i>-84), or plasmid\r\n          - mediated quinolone resistance(PMQR) together with <i>gyrA</i>-83, <i>gyrA</i>\r\n          -87 and/or <i>gyrB</i>-464. Third - generation cephalosporin resistance (3 GCR): presence of an extended -\r\n          spectrum beta-lactamase(ESBL) (<i>bla</i>CTX-M-12, <i>bla</i>CTX-M-15, <i>bla</i>CTX-M-55,{' '}\r\n          <i>bla</i>SHV-12) or <i>ampC</i> gene.Extreme drug resistance(XDR): MDR plus CipR plus 3 GCR. Azithromycin\r\n          resistance(AzithR): mutation at <i>acrB</i>-717. See{' '}\r\n          <a href=\"https://www.nature.com/articles/s41467-021-23091-2\" target=\"_blank\" rel=\"noreferrer\">\r\n            Argimon et al, 2021\r\n          </a>{' '}\r\n          for details.\r\n        </div>\r\n\r\n        <div className={classes.paragraph}>\r\n          <b>Data:</b> Data are sourced regularly from Typhi{' '}\r\n          <a href=\"https://pathogen.watch/\" target=\"_blank\" rel=\"noreferrer\">\r\n            Pathogenwatch\r\n          </a>\r\n          , and filtered to include only genomes from unbiased sampling frames (e.g. routine or project - based enteric\r\n          fever surveillance, as opposed to AMR - focused sampling), based on curation by the{' '}\r\n          <a href=\"https://www.typhoidgenomics.org/\" target=\"_blank\" rel=\"noreferrer\">\r\n            Global Typhoid Genomics Consortium\r\n          </a>\r\n          . The database can be downloaded using the button below.\r\n          <p>\r\n            <b>Documentation:</b> Full documentation for the dashboard is available{' '}\r\n            <a href=\"https://github.com/typhoidgenomics/TyphiNET/wiki\" target=\"_blank\" rel=\"noreferrer\">\r\n              here\r\n            </a>\r\n            .\r\n          </p>\r\n          Information on genotype definitions can be found in{' '}\r\n          <a\r\n            href=\"https://academic.oup.com/jid/article/224/Supplement_7/S775/6358992?login=true\"\r\n            target=\"_blank\"\r\n            rel=\"noreferrer\"\r\n          >\r\n            Dyson & Holt, 2021\r\n          </a>\r\n          .\r\n        </div>\r\n\r\n        <div className={classes.paragraph}>\r\n          <b>Team:</b> The TyphiNET dashboard is coordinated by{' '}\r\n          <a href=\"https://scholar.google.com.au/citations?hl=en&user=klhFnE0AAAAJ\" target=\"_blank\" rel=\"noreferrer\">\r\n            Dr Zoe Dyson\r\n          </a>\r\n          ,{' '}\r\n          <a href=\"https://scholar.google.com.au/citations?hl=en&user=O2dcz5MAAAAJ\" target=\"_blank\" rel=\"noreferrer\">\r\n            Dr Louise Cerdeira\r\n          </a>\r\n          &amp;{' '}\r\n          <a href=\"https://holtlab.net/\" target=\"_blank\" rel=\"noreferrer\">\r\n            Prof Kat Holt\r\n          </a>\r\n          , with support from the Wellcome Trust (Open Research Fund, 219692/Z/19/Z), the European Union's Horizon 2020\r\n          research and innovation programme under the Marie Sklodowska-Curie grant agreement No 845681.\r\n          <img className=\"euFlagImage\" src={euFlagImg} alt=\"EU_FLAG\" height=\"20\" />, the{' '}\r\n          <a href=\"https://www.lshtm.ac.uk/\" target=\"_blank\" rel=\"noreferrer\">\r\n            London School of Hygiene and Tropical Medicine\r\n          </a>{' '}\r\n          &amp;{' '}\r\n          <a href=\"https://www.monash.edu/\" target=\"_blank\" rel=\"noreferrer\">\r\n            Monash University\r\n          </a>\r\n          .\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { MainLayout } from '../Layout';\r\nimport { Map } from '../Elements/Map';\r\nimport { Footer } from '../Elements/Footer';\r\nimport { API_ENDPOINT } from '../../constants';\r\nimport { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useAppDispatch, useAppSelector } from '../../stores/hooks';\r\nimport {\r\n  setActualGenomes,\r\n  setActualGenotypes,\r\n  setGenotypesForFilter,\r\n  setListPMID,\r\n  setLoadingData,\r\n  setTotalGenomes,\r\n  setTotalGenotypes,\r\n  setYears\r\n} from '../../stores/slices/dashboardSlice.ts';\r\nimport { setMapData, setIfCustom } from '../../stores/slices/mapSlice.ts';\r\nimport { Graphs } from '../Elements/Graphs';\r\nimport {\r\n  setCountriesForFilter,\r\n  setDrugsYearData,\r\n  setFrequenciesGraphSelectedGenotypes,\r\n  setGenotypesDrugClassesData,\r\n  setGenotypesDrugsData,\r\n  setGenotypesYearData,\r\n  setCustomDropdownMapView,\r\n} from '../../stores/slices/graphSlice.ts';\r\nimport { filterData, getYearsData, getMapData, getGenotypesData, getCountryDisplayName } from './filters';\r\nimport { ResetButton } from '../Elements/ResetButton/ResetButton';\r\nimport { About } from '../About';\r\n\r\nexport const DashboardPage = () => {\r\n  const [data, setData] = useState([]);\r\n\r\n  const dispatch = useAppDispatch();\r\n  const canGetData = useAppSelector((state) => state.dashboard.canGetData);\r\n  const dataset = useAppSelector((state) => state.map.dataset);\r\n  const actualTimeInitial = useAppSelector((state) => state.dashboard.actualTimeInitial);\r\n  const actualTimeFinal = useAppSelector((state) => state.dashboard.actualTimeFinal);\r\n  const actualCountry = useAppSelector((state) => state.dashboard.actualCountry);\r\n  const countriesForFilter = useAppSelector((state) => state.graph.countriesForFilter);\r\n  const yearsForFilter = useAppSelector((state) => state.dashboard.years);\r\n  const genotypesForFilter = useAppSelector((state) => state.dashboard.genotypesForFilter);\r\n\r\n  // This function is only called once, after the csv is read. It gets all the static and dynamic data\r\n  // that came from the csv file and sets all the data the organism needs to show\r\n  function getInfoFromData(response) {\r\n    const responseData = response.data;\r\n    dispatch(setTotalGenomes(responseData.length));\r\n    dispatch(setActualGenomes(responseData.length));\r\n\r\n    const genotypes = [...new Set(responseData.map((x) => x.GENOTYPE))];\r\n    genotypes.sort((a, b) => a.localeCompare(b));\r\n    dispatch(setGenotypesForFilter(genotypes));\r\n\r\n    const years = [...new Set(responseData.map((x) => x.DATE))];\r\n    const countries = [...new Set(responseData.map((x) => getCountryDisplayName(x.COUNTRY_ONLY)))];\r\n\r\n    years.sort();\r\n    countries.sort();\r\n\r\n    dispatch(setTotalGenotypes(genotypes.length));\r\n    dispatch(setActualGenotypes(genotypes.length));\r\n    dispatch(setYears(years));\r\n    // dispatch(setTimeInitial(years[0]));\r\n    // dispatch(setActualTimeInitial(years[0]));\r\n    // dispatch(setTimeFinal(years[years.length - 1]));\r\n    // dispatch(setActualTimeFinal(years[years.length - 1]));\r\n    dispatch(setCountriesForFilter(countries));\r\n\r\n    dispatch(setMapData(getMapData({ data: responseData, countries })));\r\n\r\n    const genotypesData = getGenotypesData({ data: responseData, genotypes, actualCountry });\r\n    dispatch(setGenotypesDrugsData(genotypesData.genotypesDrugsData));\r\n    dispatch(setFrequenciesGraphSelectedGenotypes(genotypesData.genotypesDrugsData.slice(0, 5).map((x) => x.name)));\r\n    dispatch(setCustomDropdownMapView(genotypesData.genotypesDrugsData.slice(0, 1).map((x) => x.name)));\r\n    dispatch(setGenotypesDrugClassesData(genotypesData.genotypesDrugClassesData));\r\n\r\n    const yearsData = getYearsData({\r\n      data: responseData,\r\n      years,\r\n      actualCountry\r\n    });\r\n\r\n    dispatch(setGenotypesYearData(yearsData.genotypesData));\r\n    dispatch(setDrugsYearData(yearsData.drugsData));\r\n\r\n    return responseData;\r\n  }\r\n\r\n  // This function reads the csv file\r\n  async function getData() {\r\n    dispatch(setLoadingData(true));\r\n\r\n    await axios\r\n      .get(`${API_ENDPOINT}filters/getDataFromCSV`)\r\n      .then((response) => {\r\n        const newData = getInfoFromData(response);\r\n        setData(newData);\r\n      })\r\n      .finally(() => {\r\n        dispatch(setLoadingData(false));\r\n      });\r\n  }\r\n\r\n  // This useEffect is called once when the website starts to get info for the dashboard\r\n  useEffect(() => {\r\n    getData();\r\n    dispatch(setIfCustom(false));\r\n  }, []);\r\n\r\n  // This useEffect is called everytime the main filters are changed, it does not need to read the csv file again.\r\n  // It filters accordingly to the filters give. Is also called when the reset button is pressed.\r\n  useEffect(() => {\r\n    if (data.length > 0 && canGetData) {\r\n      const filters = filterData({ data, dataset, actualTimeInitial, actualTimeFinal, actualCountry });\r\n      dispatch(setActualGenomes(filters.genomesCount));\r\n      dispatch(setActualGenotypes(filters.genotypesCount));\r\n      dispatch(setListPMID(filters.listPMID));\r\n\r\n      dispatch(setMapData(getMapData({ data: filters.data, countries: countriesForFilter })));\r\n\r\n      const genotypesData = getGenotypesData({\r\n        data: filters.data,\r\n        genotypes: genotypesForFilter,\r\n        actualCountry\r\n      });\r\n      dispatch(setGenotypesDrugsData(genotypesData.genotypesDrugsData));\r\n      dispatch(setFrequenciesGraphSelectedGenotypes(genotypesData.genotypesDrugsData.slice(0, 5).map((x) => x.name)));\r\n      dispatch(setGenotypesDrugClassesData(genotypesData.genotypesDrugClassesData));\r\n\r\n      const yearsData = getYearsData({\r\n        data: filters.data,\r\n        years: yearsForFilter,\r\n        actualCountry\r\n      });\r\n      dispatch(setGenotypesYearData(yearsData.genotypesData));\r\n      dispatch(setDrugsYearData(yearsData.drugsData));\r\n    }\r\n  }, [canGetData, dataset, actualTimeInitial, actualTimeFinal, actualCountry]);\r\n\r\n  return (\r\n    <MainLayout>\r\n      <Map />\r\n      <Graphs />\r\n      <About />\r\n      <Footer />\r\n      <ResetButton data={data} />\r\n    </MainLayout>\r\n  );\r\n};\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport deashboardReducer from './slices/dashboardSlice';\r\nimport mapReducer from './slices/mapSlice';\r\nimport graphReducer from './slices/graphSlice';\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    dashboard: deashboardReducer,\r\n    map: mapReducer,\r\n    graph: graphReducer\r\n  },\r\n  middleware: (getDefaultMiddleware) => {\r\n    return getDefaultMiddleware({\r\n      serializableCheck: false\r\n    });\r\n  }\r\n});\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppDispatch = typeof store.dispatch;\r\n","import './App.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport registerServiceWorker from './registerServiceWorker';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { createTheme, ThemeProvider } from '@mui/material';\r\nimport { Provider } from 'react-redux';\r\nimport { DashboardPage } from './components/Dashboard';\r\nimport { HashRouter, Route, Routes } from 'react-router-dom';\r\nimport { store } from './stores/store.ts';\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#1fbbd3'\r\n    }\r\n  },\r\n  typography: {\r\n    fontFamily: [\r\n      'Montserrat',\r\n      '-apple-system',\r\n      'BlinkMacSystemFont',\r\n      '\"Segoe UI\"',\r\n      '\"Roboto\"',\r\n      '\"Oxygen\"',\r\n      '\"Ubuntu\"',\r\n      '\"Cantarell\"',\r\n      '\"Fira Sans\"',\r\n      '\"Droid Sans\"',\r\n      '\"Helvetica Neue\"',\r\n      'sans-serif'\r\n    ].join(',')\r\n  }\r\n});\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <HashRouter>\r\n      <Provider store={store}>\r\n        <ThemeProvider theme={theme}>\r\n          <div className=\"App\">\r\n            <Routes>\r\n              <Route path=\"/\" element={<DashboardPage />} />\r\n            </Routes>\r\n          </div>\r\n        </ThemeProvider>\r\n      </Provider>\r\n    </HashRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nregisterServiceWorker();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}