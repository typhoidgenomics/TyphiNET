{"version":3,"sources":["assets/img/logo-typhinet-prod.png","assets/img/eu_flag.jpg","constants.js","util/colorHelper.js","pages/dashboard/materialUI.js","pages/dashboard/filters.js","pages/dashboard/index.js","pages/admin/materialUI.js","pages/admin/index.js","App.js","registerServiceWorker.js","reportWebVitals.js","index.js"],"names":["API_ENDPOINT","getColorForGenotype","genotype","getColorForDrug","drug","getColorForTetracyclines","tetA","useStyles","makeStyles","theme","formControlSelect","marginBottom","marginTop","minWidth","color","borderBottomColor","formControlSelectCountryRegion","alignItems","select","fontWeight","fontFamily","fontSize","selectYear","width","borderColor","selectCountry","textAlign","selectCountryValues","typography","typographyEndYear","tbg","inputLabel","paddingBottom","tooltipButton","height","marginLeft","tooltipTitle","tooltipIcon","backgroundColor","borderWidth","borderRadius","CustomCircularProgress","withStyles","root","position","top","left","CircularProgress","CustomToggleButton","padding","selected","ToggleButton","Buttons","styled","div","ButtonClearSelect","button","WMCDTemplate","GENOTYPES","GENOTYPES_LIST","TOTAL","H58","MDR","XDR","DCS","AzithR","CipI","CipR","CipI_R","STAD","TOTAL_OCCURRENCE","WMCountData","currentData","data","displayName","elementToCount","parentName","childName","h58","other","cipI","JSON","parse","some","e","name","COUNTRY_ONLY","country","find","countryIndex","findIndex","parent","index","count","push","total","forEach","g","percentage","Math","round","toFixed","item","parseFloat","undefined","aux","CipIs","filter","x","type","aux2","length","WMCountDataResults","worldMapCurrent","sort","a","b","localeCompare","filterForComponents","minYear","maxYear","dataset","region","results","amr","genotypes","worldMapResults","PMIDResults","auxWM","worldMapComplementaryResults","worldMapG","worldMapH58","worldMapSTAD","worldMapMDR","worldMapXDR","worldMapAZITH","worldMapCIPR","worldMapCIPI","RFWGResults","DRTResults","AMRResults","GDResults","Ampicillin","Azithromycin","Chloramphenicol","ESBL","Sulphonamides","Tetracyclines","Trimethoprim","DRTData","empty","DATE","TRAVEL","toLowerCase","includes","REGION_IN_COUNTRY","indexOf","WMCDAux","stringify","GENOTYPE","chartData","RFWGData","totalS","index2","drugsPercentage","Susceptible","currentRFWG","currentDRT","ChartData","fluoroR","fluoroI","cotrim","trime","Object","keys","key","total2","AZITH","CHLO","COTRIM","genes","i","join","SULPH","TRIM","TETRA","AMRData","GDData","PMID","WMCDResults","element","top10","maxSum","ceil","AMRDataResults","DashboardPage","classes","useState","coordinates","zoom","controlMapPosition","setControlMapPosition","worldMapSamplesData","setWorldMapSamplesData","worldMapComplementaryData","setWorldMapComplementaryData","worldMapGenotypesData","setWorldMapGenotypesData","worldMapH58Data","setWorldMapH58Data","worldMapMDRData","setWorldMapMDRData","worldMapSTADData","setWorldMapSTADData","worldMapXDRData","setWorldMapXDRData","worldMapAZITHData","setWorldMapAZITHData","worldMapCIPIData","setWorldMapCIPIData","worldMapCIPRData","setWorldMapCIPRData","plotAmrClassChart","setPlotAmrClassChart","plotDrugsAndGenotypesChart","setPlotDrugsAndGenotypesChart","plotPopulationStructureChart","setPlotPopulationStructureChart","plotDrugTrendsChart","setPlotDrugTrendsChart","captureControlMapInProgress","setCaptureControlMapInProgress","captureControlChartRFWGInProgress","setCaptureControlChartRFWGInProgress","captureControlChartDRTInProgress","setCaptureControlChartDRTInProgress","captureControlChartGDInProgress","setCaptureControlChartGDInProgress","captureControlChartRFWAGInProgress","setCaptureControlChartRFWAGInProgress","captureReportInProgress","setCaptureReportInProgress","tooltipContent","setTooltipContent","React","timeInitial","setTimeInitial","timeFinal","setTimeFinal","actualTimeInitial","setActualTimeInitial","actualTimeFinal","setActualTimeFinal","years","setYears","countriesForFilter","setCountriesForFilter","setRegionsForFilter","actualCountry","setActualCountry","actualRegion","setActualRegion","actualContinent","setActualContinent","populationStructureFilter","setPopulationStructureFilter","value","id","populationStructureFilterOptions","RFWGFilterOptions","amrClassFilterOptions","amrClassFilterforFilterOptions","RFWGFilter","setRFWGFilter","amrClassesForFilter","drtClassesForFilter","trendClassesForFilter","trendDropdownOptions","RFWGDropdownOptions","setRFWGDropdownOptions","amrClassFilter","setAmrClassFilter","RDWAGDataviewFilter","setRDWAGDataviewFilter","drugTrendsChartData","setDrugTrendsChartData","drugsAndGenotypesChartData","setDrugsAndGenotypesChartData","populationStructureChartData","setPopulationStructureChartData","amrClassChartData","setAmrClassChartData","mapView","setMapView","setDataset","totalGenomes","setTotalGenomes","actualGenomes","setActualGenomes","totalGenotypes","setTotalGenotypes","actualGenotypes","setActualGenotypes","appLoading","setAppLoading","setLastUpdated","countryPMID","setCountryPMID","trendValues","setTrendValues","RFWGValues","setRFWGValues","desktop","mobile","hoverColor","window","innerHeight","innerWidth","dimensions","setDimensions","formatDate","date","moment","format","useEffect","debouncedHandleResize","fn","ms","timer","_","clearTimeout","setTimeout","apply","arguments","debounce","addEventListener","removeEventListener","axios","get","then","res","Date","mapSamplesColorScale","domain","mapRedColorScale","p","parseInt","tooltip","useCallback","positionY","width1","width2","wrapperS","stroke","chart","y","wrapperStyle","cursor","fill","content","active","payload","label","reverse","className","quantities","style","map","dataKey","imgOnLoadPromise","obj","Promise","resolve","reject","onload","onerror","maxH","margin","bottom","right","maxBarSize","strokeDasharray","interval","tick","allowDataOverflow","allowDecimals","angle","offset","props","entry","zIndex","stackId","teste","barCategoryGap","amrClassChartTooltip","allowEscapeViewBox","armClassFilterComponent","info","dataAMR","slice","layout","justifyContent","bars","barSize","temp","fontsize","strokeWidth","colors1","colors2","colors3","dataDRT","TCFF","toString","tickCount","connectNulls","activeDot","values","aux3","stopLoading","names","brokenNames","ids","doc","jsPDF","unit","orientation","IPW","internal","pageSize","getWidth","typhinetLogo","Image","src","typhinetLogoImg","addImage","euFlag","euFlagImg","setFontSize","setTextColor","paragraph1","paragraph2","paragraph3","paragraph4","paragraph5","paragraph6","paragraph7","paragraph8","setFont","text","align","maxWidth","line","addPage","svgAsPngUri","document","getElementById","scale","uri","canvas","createElement","ctx","getContext","mapImg","mapImgPromise","drawImage","img","toDataURL","actualMapView","actualTimePeriodRange","img2","img3","names2","url","domtoimage","toJpeg","quality","bgcolor","dataUrl","subtitleH","imgWidth","API","getImageProperties","floor","texts","spaceBetween","drugs","RFWGCount","setFillColor","rect","img4","img5","save","graph","graphImg","graphImgPromise","toPng","cHeight","logoHeight","legendHeight","filterHeight","subtitleHeight","imgHeight","fillStyle","fillRect","font","fillText","legendImg","legendImgPromise","typhinetLogoPromise","base64","download","textHeight","legendImgoPromise","centerWidth","h","w","capturePicture","cols_to_remove","indexes","csv","split","lines","currentIndex","newLines","j","newCSV","dowloadBaseSpreadsheet","generateMapLegendOptions","percentageSteps","n","legends","Array","renderMapLegend","FormControl","fullWidth","title","placement","IconButton","icon","faInfoCircle","size","Select","onChange","evt","target","MenuItem","setData","setCurrentData","init","setInit","allCountryRegions","setAllCountryRegions","loading","setLoading","auxTGenotypes","auxYears","auxCountries","auxRegions","unshift","update","alt","display","flexDirection","projectionConfig","rotate","center","onMoveEnd","geography","geographies","geo","sample","s","properties","NAME","CONTINENT","d","darkGray","lineage","countH58","isH58","onClick","onMouseLeave","onMouseEnter","additionalInfo","samples","genotypeInfo","simpleGenotypeInfo","smallerThan20","MDRs","mdrInfo","STADs","stadInfo","XDRs","xdrInfo","AZs","azInfo","cipR","cipIInfo","cipRInfo2","cipIRInfo","CipRs","cipRInfo","default","outline","hover","pressed","rsmKey","Typography","ToggleButtonGroup","exclusive","newDataset","gutterBottom","Zoom","in","c","Tooltip","faCrosshairs","pos","faPlus","faMinus","faCamera","thickness","paddingRight","options","searchable","labelField","multi","clearable","separator","contentRenderer","state","itemRenderer","itemIndex","methods","isSelected","addItem","checked","valueField","clearRenderer","clearAll","selectAll","InputLabel","o","paddingLeft","areAllSelected","getElementsByClassName","isValue","paddingTop","faTable","marginRight","faFilePdf","href","rel","open","faEnvelope","faGithub","faTwitter","flex","Fab","innerText","click","text2","faUndoAlt","cellON","off","tableID","tablePadding","actionsCell","borderLeft","stickyCell","actionsHeaderCell","stickyHeaderCell","changesTable","maxHeight","viewButton","resetButton","uploadButton","checkChangesButton","dialog","flexWrap","input","input2","whiteSpace","toolbar","borderBottom","deleteSelected","checkboxCell","checkbox","tableRowRoot","tableRowSelected","box","textAlignLast","userSelect","letterSpacing","choosePage","opacity","selectFilter","header","headerTitle","rowHeader","deleteChangeButton","border","ColorButton","Button","ColorButton3","ColorButton4","ColorButton5","StyledHeaderCell","head","palette","common","black","white","body","TableCell","CustomTableContainer","TableContainer","CustomTableSortLabel","TableSortLabel","createData","changes","AdminPage","rows","setRows","originalData","setOriginalData","tableKeys","setTableKeys","page","setPage","rowsPerPage","setRowsPerPage","order","setOrder","orderBy","setOrderBy","currentRow","setCurrentRow","setOpen","open2","setOpen2","open3","setOpen3","open4","setOpen4","open5","setOpen5","open6","setOpen6","open7","setOpen7","open8","setOpen8","resultMessage","setResultMessage","setSelected","search","setSearch","filters","setFilters","filterOptions","setFilterOptions","filteredData","setFilteredData","isLoading","setIsLoading","startProgress","setStartProgress","loadingMessage","setLoadingMessage","currentChange","setCurrentChange","exceptions","descendingComparator","changeView","resetChanges","added","genome","gIndex","splice","deleted","updated","old","betterChanges","entries","updates","point","new","handleUpload","handleCheckChanges","message","post","getChangeData","finally","checkChanges","showPopup","Status","getData","catch","error","changeData","updatedAt","toLocaleString","aux4","aux5","response","pass","EnhancedTableToolbar","numSelected","Toolbar","sx","variant","component","placeholder","onCancelSearch","onRequestSearch","faTrashAlt","EnhancedTableHead","onRequestSort","onSelectAllClick","rowCount","TableHead","TableRow","Checkbox","indeterminate","headCell","sortDirection","direction","property","event","stopPropagation","displayEmpty","onOpen","onClose","option","Paper","Table","stickyHeader","TableBody","row","r","t","newSelecteds","array","comparator","stabilizedThis","el","stableSort","getComparator","isItemSelected","dataRow","role","selectedIndex","newSelected","concat","handleClick","cell","random","handleEdit","faEdit","handleDelete","disableUnderline","TablePagination","rowsPerPageOptions","onPageChange","newPage","onRowsPerPageChange","ActionsComponent","useTheme","Box","flexShrink","ml","disabled","LastPage","FirstPage","KeyboardArrowRight","KeyboardArrowLeft","max","Dialog","dialogTransition","DialogTitle","DialogContent","DialogContentText","DialogActions","deleteRow","autoFocus","TextField","defaultValue","rowIndex","inputs","editRow","addRow","times","parts","LZString","compress","current","uploadChanges","deleteRows","deleteChange","App","to","path","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createTheme","primary","main","ReactDOM","render","StrictMode","ThemeProvider","URL","process","origin","fetch","status","headers","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"+2xIAAe,MAA0B,+CCA1B,MAA0B,oC,SCC5BA,EAAe,6BCCfC,EAAsB,SAACC,GAClC,OAAQA,GACN,IAAK,IACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,MACL,IAAK,QACL,IAAK,QACL,IAAK,QACH,MAAO,UACT,IAAK,MACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACH,MAAO,UACT,IAAK,MACL,IAAK,QACH,MAAO,UACT,IAAK,IACL,IAAK,QACL,IAAK,QACL,IAAK,QACH,MAAO,UACT,IAAK,QACL,IAAK,MACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,UACL,IAAK,UACH,MAAO,UACT,IAAK,MACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACH,MAAO,UACT,IAAK,MACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACH,MAAO,UACT,IAAK,QACL,IAAK,MACL,IAAK,QACH,MAAO,UACT,IAAK,QACL,IAAK,MACL,IAAK,QACL,IAAK,QACH,MAAO,UACT,IAAK,QACL,IAAK,IACL,IAAK,QACL,IAAK,QACH,MAAO,UACT,IAAK,QACL,IAAK,MACL,IAAK,QACL,IAAK,QACH,MAAO,UACT,IAAK,QACL,IAAK,MACL,IAAK,QACH,MAAO,UACT,IAAK,QACL,IAAK,MACL,IAAK,QACL,IAAK,QACL,IAAK,YACL,IAAK,YACH,MAAO,UACT,IAAK,MACH,MAAO,UACT,IAAK,MACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACH,MAAO,UACT,IAAK,IACL,IAAK,QACL,IAAK,MACL,IAAK,QACH,MAAO,UACT,IAAK,MACL,IAAK,QACL,IAAK,QACL,IAAK,QACH,MAAO,UAGT,IAAK,QACH,MAAO,UACT,IAAK,UACL,IAAK,cACH,MAAO,UACT,IAAK,aACH,MAAO,QACT,IAAK,UACL,IAAK,cACL,IAAK,cACH,MAAO,UACT,IAAK,UACL,IA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","file":"static/js/main.a1a930cc.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo-typhinet-prod.f503745b.png\";","export default __webpack_public_path__ + \"static/media/eu_flag.77134ad3.jpg\";","// Static routes to run the app. Only use one: local or heroku.\r\nexport const API_ENDPOINT = \"http://localhost:8080/api/\";\r\n//export const API_ENDPOINT = \"https://typhinetdev2.herokuapp.com/api/\";","\r\n// Helper for genotype color\r\nexport const getColorForGenotype = (genotype) => {\r\n  switch (genotype) {\r\n    case '0':\r\n    case '0.0.1':\r\n    case '0.0.2':\r\n    case '0.0.3':\r\n    case '0.1.0':\r\n    case '0.1':\r\n    case '0.1.1':\r\n    case '0.1.2':\r\n    case '0.1.3':\r\n      return \"#808080\";\r\n    case '1.1':\r\n    case '1.1.1':\r\n    case '1.1.2':\r\n    case '1.1.3':\r\n    case '1.1.4':\r\n      return \"#ffff00\";\r\n    case '1.2':\r\n    case '1.2.1':\r\n      return \"#ffd700\";\r\n    case '2':\r\n    case '2.0.0':\r\n    case '2.0.1':\r\n    case '2.0.2':\r\n      return \"#32cd32\";\r\n    case '2.1.0':\r\n    case '2.1':\r\n    case '2.1.1':\r\n    case '2.1.2':\r\n    case '2.1.3':\r\n    case '2.1.4':\r\n    case '2.1.5':\r\n    case '2.1.6':\r\n    case '2.1.7':\r\n    case '2.1.8':\r\n    case '2.1.9':\r\n    case '2.1.7.1':\r\n    case '2.1.7.2':\r\n      return \"#adff2f\";\r\n    case '2.2':\r\n    case '2.2.0':\r\n    case '2.2.1':\r\n    case '2.2.2':\r\n    case '2.2.3':\r\n    case '2.2.4':\r\n      return \"#98fb98\";\r\n    case '2.3':\r\n    case '2.3.1':\r\n    case '2.3.2':\r\n    case '2.3.3':\r\n    case '2.3.4':\r\n    case '2.3.5':\r\n      return \"#6b8e23\";\r\n    case '2.4.0':\r\n    case '2.4':\r\n    case '2.4.1':\r\n      return \"#2e8b57\";\r\n    case '2.5.0':\r\n    case '2.5':\r\n    case '2.5.1':\r\n    case '2.5.2':\r\n      return \"#006400\";\r\n    case '3.0.0':\r\n    case '3':\r\n    case '3.0.1':\r\n    case '3.0.2':\r\n      return \"#0000cd\";\r\n    case '3.1.0':\r\n    case '3.1':\r\n    case '3.1.1':\r\n    case '3.1.2':\r\n      return \"#4682b4\";\r\n    case '3.2.1':\r\n    case '3.2':\r\n    case '3.2.2':\r\n      return \"#00bfff\";\r\n    case '3.3.0':\r\n    case '3.3':\r\n    case '3.3.1':\r\n    case '3.3.2':\r\n    case '3.3.2.Bd1':\r\n    case '3.3.2.Bd2':\r\n      return \"#1e90ff\";\r\n    case '3.4':\r\n      return \"#6a5acd\";\r\n    case '3.5':\r\n    case '3.5.1':\r\n    case '3.5.2':\r\n    case '3.5.3':\r\n    case '3.5.4':\r\n      return \"#4b0082\";\r\n    case '4':\r\n    case '4.1.0':\r\n    case '4.1':\r\n    case '4.1.1':\r\n      return \"#8b0000\";\r\n    case '4.2':\r\n    case '4.2.1':\r\n    case '4.2.2':\r\n    case '4.2.3':\r\n      return \"#ff6347\";\r\n    // case '4.3':\r\n    // case '4.3.0':\r\n    case '4.3.1':\r\n      return \"#ff0000\";\r\n    case '4.3.1.1':\r\n    case '4.3.1.1.EA1':\r\n      return '#f1b6da';\r\n    case '4.3.1.1.P1':\r\n      return \"black\";\r\n    case '4.3.1.2':\r\n    case '4.3.1.2.EA2':\r\n    case '4.3.1.2.EA3':\r\n      return \"#c51b7d\";\r\n    case '4.3.1.3':\r\n    case '4.3.1.3.Bdq':\r\n      return \"#fb8072\";\r\n    default:\r\n      return \"#F5F4F6\";\r\n  }\r\n}\r\n\r\nexport const getColorForAMR = (amr) => {\r\n  switch (amr) {\r\n    case 'No AMR detected':\r\n      return \"#addd8e\";\r\n    case 'MDR_DCS':\r\n      return \"#9e9ac8\"\r\n    case 'MDR':\r\n      return \"red\"\r\n    case 'DCS':\r\n      return \"#6baed6\"\r\n    case 'AzithR_MDR':\r\n      return \"#a50f15\"\r\n    case 'AzithR_DCS':\r\n      return \"#7a0177\"\r\n    case 'AzithR_DCS_MDR':\r\n      return \"#54278f\"\r\n    case 'XDR':\r\n      return \"black\"\r\n    case 'AMR':\r\n      return \"#ffeda0\"\r\n    case 'AMR_DCS':\r\n      return \"#fd8d3c\";\r\n    default:\r\n      return \"#F5F4F6\";\r\n  }\r\n}\r\n\r\nexport const getColorForSimpleGenotype = (genotype) => {\r\n  switch (genotype) {\r\n    case 'H58':\r\n      return \"green\";\r\n    case 'Non-H58':\r\n      return \"red\";\r\n    default:\r\n      return \"#F5F4F6\";\r\n  }\r\n}\r\n\r\nexport const getColorForDrug = (drug) => {\r\n  switch (drug) {\r\n    case 'Azithromycin':\r\n      return \"rgb(144,211,199)\";\r\n    case 'Fluoroquinolones (CipI/R)':\r\n      return \"rgb(255,236,120)\";\r\n    case 'ESBL':\r\n      return \"#DB90F0\";\r\n    case 'Chloramphenicol':\r\n      return \"rgb(249,129,117)\";\r\n    case 'Ampicillin':\r\n      return \"rgb(129,178,210)\";\r\n    case 'Co-trimoxazole':\r\n      return \"rgb(252,180,105)\";\r\n    case 'Sulphonamides':\r\n      return \"rgb(180,221,112)\";\r\n    case 'Trimethoprim':\r\n      return \"rgb(102,102,255)\";\r\n    case 'Tetracyclines':\r\n      return \"rgb(251,207,229)\";\r\n    case 'Susceptible':\r\n      return \"lightGray\";\r\n    case 'Fluoroquinolones (CipI)':\r\n      return \"#98fb98\";\r\n    case 'Fluoroquinolones (CipR)':\r\n      return \"#9e9ac8\";\r\n    default:\r\n      return \"#F5F4F6\";\r\n  }\r\n}\r\n\r\nexport const getColorForIncType = (incType) => {\r\n  switch (incType) {\r\n    case 'IncX1':\r\n      return 'rgb(174,227,154)'\r\n    case 'IncFIA(HI1)':\r\n      return 'rgb(138,35,139)'\r\n    case 'IncFIB(pHCM2)':\r\n      return 'rgb(163,215,30)'\r\n    case 'IncA/C2':\r\n      return 'rgb(69,51,214)'\r\n    case 'IncP1':\r\n      return 'rgb(223,207,231)'\r\n    case 'IncFIA(HI1)/IncHI1A/IncHI1B(R27)':\r\n      return 'rgb(66,69,94)'\r\n    case 'Col(BS512)':\r\n      return 'rgb(251,172,246)'\r\n    case 'IncHI1A/IncHI1B(R27)':\r\n      return 'rgb(34,151,67)'\r\n    case 'IncN':\r\n      return 'rgb(238,83,190)'\r\n    case 'IncHI1B(R27)':\r\n      return 'rgb(68,242,112)'\r\n    case 'p0111':\r\n      return 'rgb(251,45,76)'\r\n    case 'IncHI1A':\r\n      return 'rgb(101,230,249)'\r\n    case 'IncI1':\r\n      return 'rgb(123,44,49)'\r\n    case 'IncY':\r\n      return 'rgb(231,173,121)'\r\n    case 'IncFIB(AP001918)':\r\n      return 'rgb(32,80,46)'\r\n    case 'IncFIB(K)':\r\n      return 'rgb(53,136,209)'\r\n    case 'IncHI2/IncHI2A':\r\n      return 'rgb(115,140,78)'\r\n    case 'Col440I':\r\n      return 'rgb(159,4,252)'\r\n    case 'Col156':\r\n      return 'rgb(244,212,3)'\r\n    case 'Col440II/Col440II':\r\n      return 'rgb(17,160,170)'\r\n    case 'IncFIA(HI1)/IncHI1A':\r\n      return 'rgb(251,120,16)'\r\n    case 'ColRNAI':\r\n      return 'rgb(91,67,11)'\r\n    case 'ColpVC':\r\n      return 'rgb(248,117,116)'\r\n    case 'IncX3':\r\n      return 'rgb(190,177,231)'\r\n    default:\r\n      return \"#F5F4F6\";\r\n  }\r\n}\r\n\r\nexport const getColorForTetracyclines = (tetA) => {\r\n  switch (tetA) {\r\n    case 'tetA(A)':\r\n      return 'rgb(174,227,154)'\r\n    case 'tetA(B)':\r\n      return '#D7AEF7'\r\n    case 'tetA(C)':\r\n      return '#FFEC78'\r\n    case 'tetA(D)':\r\n      return '#FCB469'\r\n    case 'tetA(AB)':\r\n      return 'rgb(223,207,231)'\r\n    case 'tetA(ABC)':\r\n      return 'rgb(66,69,94)'\r\n    case 'tetA(ABD)':\r\n      return 'rgb(251,172,246)'\r\n    case 'tetA(ABCD)':\r\n      return 'rgb(34,151,67)'\r\n    case 'tetA(AC)':\r\n      return 'rgb(238,83,190)'\r\n    case 'tetA(ACD)':\r\n      return 'rgb(68,242,112)'\r\n    case 'tetA(AD)':\r\n      return 'rgb(251,45,76)'\r\n    case 'tetA(BC)':\r\n      return 'rgb(101,230,249)'\r\n    case 'tetA(BD)':\r\n      return 'rgb(123,44,49)'\r\n    case 'tetA(BCD)':\r\n      return 'rgb(231,173,121)'\r\n    case 'tetA(CD)':\r\n      return 'rgb(32,80,46)'\r\n    default:\r\n      return \"#F5F4F6\";\r\n  }\r\n}","import { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport ToggleButton from '@material-ui/lab/ToggleButton';\r\nimport styled from \"@emotion/styled\";\r\n\r\n// CSS like classes\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControlSelect: {\r\n        marginBottom: 12,\r\n        marginTop: 2,\r\n        minWidth: 120,\r\n        '&.label.Mui-focused': {\r\n            color: \"rgb(31, 187, 211)\",\r\n        },\r\n        '&:not(.Mui-error).MuiInput-underline:after': {\r\n            borderBottomColor: \"rgb(31, 187, 211)\",\r\n        },\r\n    },\r\n    formControlSelectCountryRegion: {\r\n        marginBottom: 16,\r\n        marginTop: 2,\r\n        minWidth: 120,\r\n        '&.label.Mui-focused': {\r\n            color: \"rgb(31, 187, 211)\",\r\n        },\r\n        '&:not(.Mui-error).MuiInput-underline:after': {\r\n            borderBottomColor: \"rgb(31, 187, 211)\",\r\n        },\r\n        alignItems: \"center\"\r\n    },\r\n    select: {\r\n        fontWeight: 600,\r\n        fontFamily: \"Montserrat\",\r\n        fontSize: 14\r\n    },\r\n    selectYear: {\r\n        fontWeight: 600,\r\n        fontFamily: \"Montserrat\",\r\n        fontSize: 14,\r\n        width: '85px',\r\n        '&:before': {\r\n            borderColor: 'rgba(0, 0, 0, 0.12)',\r\n        }\r\n    },\r\n    selectCountry: {\r\n        fontWeight: 600,\r\n        fontFamily: \"Montserrat\",\r\n        width: 200,\r\n        textAlign: \"left\"\r\n    },\r\n    selectCountryValues: {\r\n        fontWeight: 600,\r\n        fontFamily: \"Montserrat\"\r\n    },\r\n    typography: {\r\n        fontWeight: 500,\r\n        fontFamily: \"Montserrat\",\r\n        color: \"rgb(117,117,117)\",\r\n        fontSize: 12\r\n    },\r\n    typographyEndYear: {\r\n        fontWeight: 500,\r\n        fontFamily: \"Montserrat\",\r\n        color: \"rgb(117,117,117)\",\r\n        fontSize: 12\r\n    },\r\n    tbg: {\r\n        marginTop: 5\r\n    },\r\n    inputLabel: {\r\n        fontSize: 12,\r\n        fontWeight: 500,\r\n        fontFamily: \"Montserrat\",\r\n        paddingBottom: 5\r\n    },\r\n    tooltipButton: {\r\n        height: 15.5,\r\n        width: 15.5,\r\n        marginLeft: 5\r\n    },\r\n    tooltipTitle: {\r\n        fontSize: 12\r\n    },\r\n    tooltipIcon: {\r\n        color: \"white\",\r\n        backgroundColor: \"black\",\r\n        borderColor: \"black\",\r\n        borderWidth: 1,\r\n        borderRadius: \"50%\"\r\n    }\r\n}));\r\n\r\n// Loading circular progress for the map and charts download buttons\r\nconst CustomCircularProgress = withStyles({\r\n    root: {\r\n        color: \"rgb(31, 187, 211)\",\r\n        position: \"absolute\",\r\n        top: -5,\r\n        left: -6\r\n    }\r\n})(CircularProgress);\r\n\r\n// Options for dataset ToggleButtonGroup\r\nconst CustomToggleButton = withStyles({\r\n    root: {\r\n        padding: \"2px 8px\",\r\n        fontFamily: \"Montserrat\",\r\n        fontWeight: 600\r\n    },\r\n    selected: {\r\n        backgroundColor: 'rgb(31, 187, 211) !important',\r\n        color: \"white !important\"\r\n    }\r\n})(ToggleButton);\r\n\r\n// Wrapper for the ButtonClearSelect component (below)\r\nconst Buttons = styled.div`\r\n  display: flex;\r\n\r\n  & div {\r\n    margin: 0 0 0 10px;\r\n    font-weight: 600;\r\n  }\r\n`;\r\n\r\n// 'Clear all' and 'reset' buttons from the dropdowns on RFWG and DRT charts\r\nconst ButtonClearSelect = styled.button`\r\n  background: none;\r\n  border: 1px solid #555;\r\n  color: #555;\r\n  border-radius: 3px;\r\n  margin: 0 10px 0;\r\n  padding: 3px 5px;\r\n  font-size: 10px;\r\n  text-transform: uppercase;\r\n  cursor: pointer;\r\n  outline: none;\r\n\r\n  &.clear {\r\n    color: tomato;\r\n    border: 1px solid tomato;\r\n  }\r\n\r\n  :hover {\r\n    border: 1px solid deepskyblue;\r\n    color: deepskyblue;\r\n  }\r\n`;\r\n\r\nexport { useStyles, CustomCircularProgress, CustomToggleButton, Buttons, ButtonClearSelect };","const WMCDTemplate = {\r\n  GENOTYPES: {\r\n    GENOTYPES_LIST: [],\r\n    TOTAL: 0,\r\n  },\r\n  H58: 0,\r\n  MDR: 0,\r\n  XDR: 0,\r\n  DCS: 0,\r\n  AzithR: 0,\r\n  CipI: 0,\r\n  CipR: 0,\r\n  CipI_R: 0,\r\n  STAD: 0,\r\n  TOTAL_OCCURRENCE: 0,\r\n};\r\n\r\nfunction WMCDAux(currentData, data) {\r\n  currentData = JSON.parse(currentData);\r\n\r\n  currentData[\"TOTAL_OCCURRENCE\"]++;\r\n  if (\r\n    currentData[\"GENOTYPES\"][\"GENOTYPES_LIST\"].indexOf(data[\"GENOTYPE\"]) === -1\r\n  ) {\r\n    currentData[\"GENOTYPES\"][\"GENOTYPES_LIST\"].push(data[\"GENOTYPE\"]);\r\n    currentData[\"GENOTYPES\"][\"TOTAL\"]++;\r\n  }\r\n\r\n  if (data[\"GENOTYPE_SIMPLE\"] === \"H58\") {\r\n    currentData[\"H58\"]++;\r\n  }\r\n  if (data[\"MDR\"] === \"MDR\") {\r\n    currentData[\"MDR\"]++;\r\n  }\r\n  if (data[\"XDR\"] === \"XDR\") {\r\n    currentData[\"XDR\"]++;\r\n  }\r\n  if (data[\"dcs_category\"] === \"DCS\") {\r\n    currentData[\"DCS\"]++;\r\n  }\r\n  if (data[\"azith_pred_pheno\"] === \"AzithR\") {\r\n    currentData[\"AzithR\"]++;\r\n  }\r\n  if (data[\"cip_pred_pheno\"] === \"CipI\") {\r\n    currentData[\"CipI\"]++;\r\n    currentData[\"CipI_R\"]++;\r\n  }\r\n  if (data[\"cip_pred_pheno\"] === \"CipR\") {\r\n    currentData[\"CipR\"]++;\r\n    currentData[\"CipI_R\"]++;\r\n  }\r\n  if (data[\"amr_category\"] === \"No AMR detected\") {\r\n    currentData[\"STAD\"]++;\r\n  }\r\n\r\n  return currentData;\r\n}\r\n\r\nfunction WMCDResults(worldMapComplementaryResults) {\r\n  worldMapComplementaryResults = JSON.parse(worldMapComplementaryResults);\r\n\r\n  for (let data in worldMapComplementaryResults) {\r\n    worldMapComplementaryResults[data][\"H58\"] =\r\n      (worldMapComplementaryResults[data][\"H58\"] /\r\n        worldMapComplementaryResults[data][\"TOTAL_OCCURRENCE\"]) *\r\n      100;\r\n    worldMapComplementaryResults[data][\"MDR\"] =\r\n      (worldMapComplementaryResults[data][\"MDR\"] /\r\n        worldMapComplementaryResults[data][\"TOTAL_OCCURRENCE\"]) *\r\n      100;\r\n    worldMapComplementaryResults[data][\"XDR\"] =\r\n      (worldMapComplementaryResults[data][\"XDR\"] /\r\n        worldMapComplementaryResults[data][\"TOTAL_OCCURRENCE\"]) *\r\n      100;\r\n    worldMapComplementaryResults[data][\"DCS\"] =\r\n      (worldMapComplementaryResults[data][\"DCS\"] /\r\n        worldMapComplementaryResults[data][\"TOTAL_OCCURRENCE\"]) *\r\n      100;\r\n    worldMapComplementaryResults[data][\"AzithR\"] =\r\n      (worldMapComplementaryResults[data][\"AzithR\"] /\r\n        worldMapComplementaryResults[data][\"TOTAL_OCCURRENCE\"]) *\r\n      100;\r\n    worldMapComplementaryResults[data][\"CipI\"] =\r\n      (worldMapComplementaryResults[data][\"CipI\"] /\r\n        worldMapComplementaryResults[data][\"TOTAL_OCCURRENCE\"]) *\r\n      100;\r\n    worldMapComplementaryResults[data][\"CipR\"] =\r\n      (worldMapComplementaryResults[data][\"CipR\"] /\r\n        worldMapComplementaryResults[data][\"TOTAL_OCCURRENCE\"]) *\r\n      100;\r\n    worldMapComplementaryResults[data][\"CipI_R\"] =\r\n      (worldMapComplementaryResults[data][\"CipI_R\"] /\r\n        worldMapComplementaryResults[data][\"TOTAL_OCCURRENCE\"]) *\r\n      100;\r\n    worldMapComplementaryResults[data][\"STAD\"] =\r\n      (worldMapComplementaryResults[data][\"STAD\"] /\r\n        worldMapComplementaryResults[data][\"TOTAL_OCCURRENCE\"]) *\r\n      100;\r\n    delete worldMapComplementaryResults[data].TOTAL_OCCURRENCE;\r\n  }\r\n  return worldMapComplementaryResults;\r\n}\r\n\r\nfunction WMCountData(\r\n  currentData,\r\n  data,\r\n  displayName,\r\n  elementToCount,\r\n  parentName,\r\n  childName,\r\n  h58 = false,\r\n  other = \"\",\r\n  cipI = false\r\n) {\r\n  currentData = JSON.parse(currentData);\r\n\r\n  if (!currentData.some((e) => e.name === data.COUNTRY_ONLY)) {\r\n    currentData.push({\r\n      name: data.COUNTRY_ONLY,\r\n      displayName: displayName,\r\n      total: 1,\r\n      [parentName]: [{ [childName]: data[elementToCount], count: 1 }],\r\n    });\r\n    if (elementToCount !== \"GENOTYPE\")\r\n      currentData[currentData.length - 1].percentage = 0;\r\n    if (!h58 && elementToCount !== \"GENOTYPE\")\r\n      currentData[currentData.length - 1].count = 0;\r\n  } else {\r\n    const country = currentData.find((e) => e.name === data[\"COUNTRY_ONLY\"]);\r\n    const countryIndex = currentData.findIndex(\r\n      (e) => e.name === data[\"COUNTRY_ONLY\"]\r\n    );\r\n\r\n    if (\r\n      !country[parentName].some((e) => e[childName] === data[elementToCount])\r\n    ) {\r\n      country[parentName].push({\r\n        [childName]: data[elementToCount],\r\n        count: 1,\r\n      });\r\n    } else {\r\n      let parent = country[parentName].find(\r\n        (e) => e[childName] === data[elementToCount]\r\n      );\r\n      let index = country[parentName].findIndex(\r\n        (e) => e[childName] === data[elementToCount]\r\n      );\r\n      parent.count = parent.count + 1;\r\n      country[parentName][index] = parent;\r\n    }\r\n    country.total = country.total + 1;\r\n\r\n    if (h58) {\r\n      country[parentName].forEach((g, index) => {\r\n        let percentage = (g.count / country.total) * 100;\r\n        if (Math.round(percentage) !== percentage) {\r\n          percentage = percentage.toFixed(2);\r\n        }\r\n        g.percentage = percentage;\r\n      });\r\n    } else if (other !== \"\") {\r\n      country[parentName].forEach((item, index) => {\r\n        if (item[childName] === other) {\r\n          let percentage = (item.count / country.total) * 100;\r\n          if (Math.round(percentage) !== percentage)\r\n            percentage = percentage.toFixed(2);\r\n          percentage = parseFloat(percentage);\r\n          country.percentage = percentage;\r\n          country.count = item.count;\r\n        }\r\n      });\r\n      if (country.percentage === undefined) {\r\n        country.percentage = parseFloat(0);\r\n      }\r\n      if (country.count === undefined) {\r\n        country.count = 0;\r\n      }\r\n    } else if (cipI) {\r\n      let aux = country.CipIs.filter((x) => x.type === \"CipI\");\r\n      let aux2 = country.CipIs.filter((x) => x.type === \"CipR\");\r\n      if (aux.length) {\r\n        aux[0].percentage = (aux[0].count / country.total) * 100;\r\n        aux = aux[0].count;\r\n      } else aux = 0;\r\n      if (aux2.length) {\r\n        aux2[0].percentage = (aux2[0].count / country.total) * 100;\r\n        aux2 = aux2[0].count;\r\n      } else aux2 = 0;\r\n\r\n      let percentage = ((aux + aux2) / country.total) * 100;\r\n      if (Math.round(percentage) !== percentage)\r\n        percentage = percentage.toFixed(2);\r\n      percentage = parseFloat(percentage);\r\n      country.percentage = percentage;\r\n      country.count = aux + aux2;\r\n      if (country.percentage === undefined) country.percentage = parseFloat(0);\r\n      if (country.count === undefined) country.count = 0;\r\n    }\r\n\r\n    currentData[countryIndex] = country;\r\n  }\r\n\r\n  return currentData;\r\n}\r\n\r\nfunction WMCountDataResults(worldMapCurrent, parentName) {\r\n  worldMapCurrent = JSON.parse(worldMapCurrent);\r\n  worldMapCurrent.forEach((country) => {\r\n    country[parentName].sort((a, b) => b.count - a.count);\r\n  });\r\n  worldMapCurrent.sort((a, b) => a.name.localeCompare(b.name));\r\n\r\n  return worldMapCurrent;\r\n}\r\n\r\nfunction ChartData(RFWGData, DRTData, data) {\r\n  RFWGData = JSON.parse(RFWGData);\r\n  DRTData = JSON.parse(DRTData);\r\n\r\n  let index = RFWGData.findIndex((x) => x.name === data.GENOTYPE);\r\n  if (index === -1) {\r\n    RFWGData.push({ name: data.GENOTYPE, total: 0, totalS: 0 });\r\n    index = RFWGData.length - 1;\r\n  }\r\n  RFWGData[index].totalS += 1;\r\n\r\n  let index2 = DRTData.findIndex((x) => x.name === data.DATE);\r\n  if (index2 === -1) {\r\n    DRTData.push({\r\n      name: data.DATE,\r\n      total: 0,\r\n      drugsPercentage: {},\r\n      Azithromycin: 0,\r\n      \"Fluoroquinolones (CipI/R)\": 0,\r\n      ESBL: 0,\r\n      Chloramphenicol: 0,\r\n      Ampicillin: 0,\r\n      \"Co-trimoxazole\": 0,\r\n      Sulphonamides: 0,\r\n      Trimethoprim: 0,\r\n      Tetracyclines: 0,\r\n      Susceptible: 0,\r\n      \"Fluoroquinolones (CipR)\": 0,\r\n    });\r\n    index2 = DRTData.length - 1;\r\n  }\r\n  DRTData[index2].total += 1;\r\n\r\n  const currentRFWG = RFWGData[index];\r\n  const currentDRT = DRTData[index2];\r\n\r\n  if (data[\"azith_pred_pheno\"] === \"AzithR\") {\r\n    if (currentRFWG[\"Azithromycin\"] === undefined)\r\n      currentRFWG[\"Azithromycin\"] = 1;\r\n    else currentRFWG[\"Azithromycin\"] += 1;\r\n    currentDRT[\"Azithromycin\"] += 1;\r\n  }\r\n  if (data[\"dcs_category\"] === \"DCS\") {\r\n    if (currentRFWG[\"Fluoroquinolones (CipI/R)\"] === undefined)\r\n      currentRFWG[\"Fluoroquinolones (CipI/R)\"] = 1;\r\n    else currentRFWG[\"Fluoroquinolones (CipI/R)\"] += 1;\r\n    currentDRT[\"Fluoroquinolones (CipI/R)\"] += 1;\r\n  }\r\n  if (data[\"ESBL_category\"] === \"ESBL\") {\r\n    if (currentRFWG[\"ESBL\"] === undefined) currentRFWG[\"ESBL\"] = 1;\r\n    else currentRFWG[\"ESBL\"] += 1;\r\n    currentDRT[\"ESBL\"] += 1;\r\n  }\r\n  if (data[\"chloramphenicol_category\"] === \"ChlR\") {\r\n    if (currentRFWG[\"Chloramphenicol\"] === undefined)\r\n      currentRFWG[\"Chloramphenicol\"] = 1;\r\n    else currentRFWG[\"Chloramphenicol\"] += 1;\r\n    currentDRT[\"Chloramphenicol\"] += 1;\r\n  }\r\n  if (data[\"blaTEM-1D\"] === \"1\") {\r\n    if (currentRFWG[\"Ampicillin\"] === undefined) currentRFWG[\"Ampicillin\"] = 1;\r\n    else currentRFWG[\"Ampicillin\"] += 1;\r\n    currentDRT[\"Ampicillin\"] += 1;\r\n  }\r\n  if (data[\"co_trim\"] === \"1\") {\r\n    if (currentRFWG[\"Co-trimoxazole\"] === undefined)\r\n      currentRFWG[\"Co-trimoxazole\"] = 1;\r\n    else currentRFWG[\"Co-trimoxazole\"] += 1;\r\n    currentDRT[\"Co-trimoxazole\"] += 1;\r\n  }\r\n  if (data[\"sul_any\"] === \"1\") {\r\n    if (currentRFWG[\"Sulphonamides\"] === undefined)\r\n      currentRFWG[\"Sulphonamides\"] = 1;\r\n    else currentRFWG[\"Sulphonamides\"] += 1;\r\n    currentDRT[\"Sulphonamides\"] += 1;\r\n  }\r\n  if (data[\"dfra_any\"] === \"1\") {\r\n    if (currentRFWG[\"Trimethoprim\"] === undefined)\r\n      currentRFWG[\"Trimethoprim\"] = 1;\r\n    else currentRFWG[\"Trimethoprim\"] += 1;\r\n    currentDRT[\"Trimethoprim\"] += 1;\r\n  }\r\n  if (data[\"tetracycline_category\"] === \"TetR\") {\r\n    if (currentRFWG[\"Tetracyclines\"] === undefined)\r\n      currentRFWG[\"Tetracyclines\"] = 1;\r\n    else currentRFWG[\"Tetracyclines\"] += 1;\r\n    currentDRT[\"Tetracyclines\"] += 1;\r\n  }\r\n  if (data[\"amr_category\"] === \"No AMR detected\") {\r\n    if (currentRFWG[\"Susceptible\"] === undefined)\r\n      currentRFWG[\"Susceptible\"] = 1;\r\n    else currentRFWG[\"Susceptible\"] += 1;\r\n    currentDRT[\"Susceptible\"] += 1;\r\n  } else {\r\n    currentRFWG.total += 1;\r\n  }\r\n  if (data[\"cip_pred_pheno\"] === \"CipR\") {\r\n    if (currentRFWG[\"Fluoroquinolones (CipR)\"] === undefined)\r\n      currentRFWG[\"Fluoroquinolones (CipR)\"] = 1;\r\n    else currentRFWG[\"Fluoroquinolones (CipR)\"] += 1;\r\n    currentDRT[\"Fluoroquinolones (CipR)\"] += 1;\r\n  }\r\n\r\n  return [RFWGData, DRTData];\r\n}\r\n\r\nfunction DRTDataResults(DRTData) {\r\n  DRTData = JSON.parse(DRTData);\r\n  DRTData.forEach((element) => {\r\n    const drugsPercentage = {};\r\n    for (const key in element) {\r\n      if (key !== \"name\" && key !== \"total\") {\r\n        const aux = (element[key] * 100) / element.total;\r\n        drugsPercentage[key] = element[key];\r\n        element[key] = aux;\r\n      }\r\n    }\r\n    element.drugsPercentage = drugsPercentage;\r\n  });\r\n  return DRTData;\r\n}\r\n\r\nfunction AMRData(currentData, data) {\r\n  currentData = JSON.parse(currentData);\r\n  const fluoroR = [\r\n    \"3_QRDR + qnrS\",\r\n    \"3_QRDR + qnrB\",\r\n    \"3_QRDR\",\r\n    \"2_QRDR + qnrS\",\r\n    \"2_QRDR + qnrB\",\r\n    \"1_QRDR + qnrS\",\r\n    \"1_QRDR + qnrB\",\r\n  ];\r\n  const fluoroI = [\"2_QRDR\", \"1_QRDR\", \"0_QRDR + qnrS\", \"0_QRDR + qnrB\"];\r\n  const cotrim = [\r\n    \"dfrA1\",\r\n    \"dfrA5\",\r\n    \"dfrA7\",\r\n    \"dfrA14\",\r\n    \"dfrA15\",\r\n    \"dfrA17\",\r\n    \"dfrA18\",\r\n  ];\r\n  const trime = [\r\n    \"dfrA1\",\r\n    \"dfrA14\",\r\n    \"dfrA15\",\r\n    \"dfrA17\",\r\n    \"dfrA18\",\r\n    \"dfrA5\",\r\n    \"dfrA7\",\r\n  ];\r\n\r\n  Object.keys(currentData).forEach((key) => {\r\n    let index = currentData[key].findIndex((x) => x.genotype === data.GENOTYPE);\r\n    if (index === -1) {\r\n      currentData[key].push({ genotype: data.GENOTYPE, total: 0, total2: 0 });\r\n      index = currentData[key].length - 1;\r\n    }\r\n    if (key === \"Azithromycin\") {\r\n      const AZITH = data[\"azith_pred_pheno\"];\r\n      if (AZITH === \"AzithR\") {\r\n        currentData[key][index].total += 1;\r\n        currentData[key][index].total2 += 1;\r\n        if (\r\n          data[\"ereA\"] === \"1\" &&\r\n          data[\"acrB_R717Q\"] === \"1\" &&\r\n          data[\"acrB_R717L\" == \"1\"]\r\n        ) {\r\n          const name = \"ereA + acrB_R717Q + acrB_R717L\";\r\n          if (currentData[key][index][name] === undefined) {\r\n            currentData[key][index][name] = 1;\r\n          } else {\r\n            currentData[key][index][name] += 1;\r\n          }\r\n        } else {\r\n          if (data[\"ereA\"] === \"1\" && data[\"acrB_R717Q\"] === \"1\") {\r\n            const name = \"ereA + acrB_R717Q\";\r\n            if (currentData[key][index][name] === undefined) {\r\n              currentData[key][index][name] = 1;\r\n            } else {\r\n              currentData[key][index][name] += 1;\r\n            }\r\n          } else if (data[\"ereA\"] === \"1\" && data[\"acrB_R717L\"] === \"1\") {\r\n            const name = \"ereA + acrB_R717L\";\r\n            if (currentData[key][index][name] === undefined) {\r\n              currentData[key][index][name] = 1;\r\n            } else {\r\n              currentData[key][index][name] += 1;\r\n            }\r\n          } else if (data[\"acrB_R717Q\"] === \"1\" && data[\"acrB_R717L\"] === \"1\") {\r\n            const name = \"acrB_R717Q + acrB_R717L\";\r\n            if (currentData[key][index][name] === undefined) {\r\n              currentData[key][index][name] = 1;\r\n            } else {\r\n              currentData[key][index][name] += 1;\r\n            }\r\n          } else if (data[\"ereA\"] === \"1\") {\r\n            const name = \"ereA\";\r\n            if (currentData[key][index][name] === undefined) {\r\n              currentData[key][index][name] = 1;\r\n            } else {\r\n              currentData[key][index][name] += 1;\r\n            }\r\n          } else if (data[\"acrB_R717Q\"] === \"1\") {\r\n            const name = \"acrB_R717Q\";\r\n            if (currentData[key][index][name] === undefined) {\r\n              currentData[key][index][name] = 1;\r\n            } else {\r\n              currentData[key][index][name] += 1;\r\n            }\r\n          } else if (data[\"acrB_R717L\"] === \"1\") {\r\n            const name = \"acrB_R717L\";\r\n            if (currentData[key][index][name] === undefined) {\r\n              currentData[key][index][name] = 1;\r\n            } else {\r\n              currentData[key][index][name] += 1;\r\n            }\r\n          }\r\n        }\r\n      } else if (AZITH === \"AzithS\") {\r\n        currentData[key][index].total2 += 1;\r\n        const name = \"None\";\r\n        if (currentData[key][index][name] === undefined) {\r\n          currentData[key][index][name] = 1;\r\n        } else {\r\n          currentData[key][index][name] += 1;\r\n        }\r\n      }\r\n    } else if (key === \"Fluoroquinolones (CipI/R)\") {\r\n      const DCS = data[\"dcs_mechanisms\"];\r\n      if (DCS === \"0_QRDR\") {\r\n        currentData[key][index].total2 += 1;\r\n        const name = \"None (CipS)\";\r\n        if (currentData[key][index][name] === undefined) {\r\n          currentData[key][index][name] = 1;\r\n        } else {\r\n          currentData[key][index][name] += 1;\r\n        }\r\n      } else if (fluoroR.includes(DCS)) {\r\n        currentData[key][index].total2 += 1;\r\n        currentData[key][index].total += 1;\r\n        const name = DCS + \" (CipR)\";\r\n        if (currentData[key][index][name] === undefined) {\r\n          currentData[key][index][name] = 1;\r\n        } else {\r\n          currentData[key][index][name] += 1;\r\n        }\r\n      } else if (fluoroI.includes(DCS)) {\r\n        currentData[key][index].total2 += 1;\r\n        currentData[key][index].total += 1;\r\n        const name = DCS + \" (CipI)\";\r\n        if (currentData[key][index][name] === undefined) {\r\n          currentData[key][index][name] = 1;\r\n        } else {\r\n          currentData[key][index][name] += 1;\r\n        }\r\n      }\r\n    } else if (key === \"ESBL\") {\r\n      const ESBL = data[\"ESBL_category\"];\r\n      if (ESBL === \"ESBL\") {\r\n        currentData[key][index].total2 += 1;\r\n        currentData[key][index].total += 1;\r\n        // if (data[\"blaCTX-M-12\"] === \"1\") {\r\n        //   const name = \"blaCTX-M-12\";\r\n        //   if (currentData[key][index][name] === undefined) {\r\n        //     currentData[key][index][name] = 1;\r\n        //   } else {\r\n        //     currentData[key][index][name] += 1;\r\n        //   }\r\n        // }\r\n        if (data[\"blaCTX-M-15_23\"] === \"1\") {\r\n          const name = \"blaCTX-M-15\";\r\n          if (currentData[key][index][name] === undefined) {\r\n            currentData[key][index][name] = 1;\r\n          } else {\r\n            currentData[key][index][name] += 1;\r\n          }\r\n        }\r\n        if (data[\"blaOXA-7\"] === \"1\") {\r\n          const name = \"blaOXA-7\";\r\n          if (currentData[key][index][name] === undefined) {\r\n            currentData[key][index][name] = 1;\r\n          } else {\r\n            currentData[key][index][name] += 1;\r\n          }\r\n        }\r\n        if (data[\"blaSHV-12\"] === \"1\") {\r\n          const name = \"blaSHV-12\";\r\n          if (currentData[key][index][name] === undefined) {\r\n            currentData[key][index][name] = 1;\r\n          } else {\r\n            currentData[key][index][name] += 1;\r\n          }\r\n        }\r\n        if (data[\"blaCTX-M-55\"] === \"1\") {\r\n          const name = \"blaCTX-M-55\";\r\n          if (currentData[key][index][name] === undefined) {\r\n            currentData[key][index][name] = 1;\r\n          } else {\r\n            currentData[key][index][name] += 1;\r\n          }\r\n        }\r\n      } else if (ESBL === \"Non-ESBL\") {\r\n        currentData[key][index].total2 += 1;\r\n        const name = \"None\";\r\n        if (currentData[key][index][name] === undefined) {\r\n          currentData[key][index][name] = 1;\r\n        } else {\r\n          currentData[key][index][name] += 1;\r\n        }\r\n      }\r\n    } else if (key === \"Chloramphenicol\") {\r\n      const CHLO = data[\"chloramphenicol_category\"];\r\n      if (CHLO === \"ChlR\") {\r\n        currentData[key][index].total2 += 1;\r\n        currentData[key][index].total += 1;\r\n        if (data[\"catA1\"] === \"1\" && data[\"cmlA\"] === \"1\") {\r\n          const name = \"catA1 + cmlA\";\r\n          if (currentData[key][index][name] === undefined) {\r\n            currentData[key][index][name] = 1;\r\n          } else {\r\n            currentData[key][index][name] += 1;\r\n          }\r\n        } else {\r\n          if (data[\"catA1\"] === \"1\") {\r\n            const name = \"catA1\";\r\n            if (currentData[key][index][name] === undefined) {\r\n              currentData[key][index][name] = 1;\r\n            } else {\r\n              currentData[key][index][name] += 1;\r\n            }\r\n          }\r\n          if (data[\"cmlA\"] === \"1\") {\r\n            const name = \"cmlA\";\r\n            if (currentData[key][index][name] === undefined) {\r\n              currentData[key][index][name] = 1;\r\n            } else {\r\n              currentData[key][index][name] += 1;\r\n            }\r\n          }\r\n        }\r\n      } else if (CHLO === \"ChlS\") {\r\n        currentData[key][index].total2 += 1;\r\n        const name = \"None\";\r\n        if (currentData[key][index][name] === undefined) {\r\n          currentData[key][index][name] = 1;\r\n        } else {\r\n          currentData[key][index][name] += 1;\r\n        }\r\n      }\r\n    } else if (key === \"Ampicillin\") {\r\n      currentData[key][index].total2 += 1;\r\n      //   if (data[\"blaTEM-1D\"] === \"1\" && data[\"blaOXA-1\"] === \"1\") {\r\n      //     currentData[key][index].total += 1;\r\n      //     const name = \"blaTEM-1D + blaOXA-1\";\r\n      //     if (currentData[key][index][name] === undefined) {\r\n      //       currentData[key][index][name] = 1;\r\n      //     } else {\r\n      //       currentData[key][index][name] += 1;\r\n      //     }\r\n      //   } else\r\n\r\n      if (data[\"blaTEM-1D\"] === \"1\") {\r\n        currentData[key][index].total += 1;\r\n        const name = \"blaTEM-1D\";\r\n        if (currentData[key][index][name] === undefined) {\r\n          currentData[key][index][name] = 1;\r\n        } else {\r\n          currentData[key][index][name] += 1;\r\n        }\r\n      }\r\n      //   else if (data[\"blaOXA-1\"] === \"1\") {\r\n      //     currentData[key][index].total += 1;\r\n      //     const name = \"blaOXA-1\";\r\n      //     if (currentData[key][index][name] === undefined) {\r\n      //       currentData[key][index][name] = 1;\r\n      //     } else {\r\n      //       currentData[key][index][name] += 1;\r\n      //     }\r\n      //   }\r\n      else {\r\n        const name = \"None\";\r\n        if (currentData[key][index][name] === undefined) {\r\n          currentData[key][index][name] = 1;\r\n        } else {\r\n          currentData[key][index][name] += 1;\r\n        }\r\n      }\r\n    } else if (key === \"Co-trimoxazole\") {\r\n      const COTRIM = data[\"co_trim\"];\r\n      if (COTRIM === \"1\") {\r\n        const genes = [];\r\n        currentData[key][index].total2 += 1;\r\n        currentData[key][index].total += 1;\r\n        for (const i in cotrim) {\r\n          if (data[cotrim[i]] === \"1\") {\r\n            genes.push(cotrim[i]);\r\n          }\r\n        }\r\n        if (data[\"sul1\"] === \"1\") {\r\n          genes.push(\"sul1\");\r\n        }\r\n        if (data[\"sul2\"] === \"1\") {\r\n          genes.push(\"sul2\");\r\n        }\r\n        const name = genes.join(\" + \");\r\n        if (currentData[key][index][name] === undefined) {\r\n          currentData[key][index][name] = 1;\r\n        } else {\r\n          currentData[key][index][name] += 1;\r\n        }\r\n      } else if (COTRIM === \"0\") {\r\n        currentData[key][index].total2 += 1;\r\n        const name = \"None\";\r\n        if (currentData[key][index][name] === undefined) {\r\n          currentData[key][index][name] = 1;\r\n        } else {\r\n          currentData[key][index][name] += 1;\r\n        }\r\n      }\r\n    } else if (key === \"Sulphonamides\") {\r\n      const SULPH = data[\"sul_any\"];\r\n      if (SULPH === \"1\") {\r\n        currentData[key][index].total2 += 1;\r\n        currentData[key][index].total += 1;\r\n        if (data[\"sul1\"] === \"1\" && data[\"sul2\"] === \"1\") {\r\n          const name = \"sul1 + sul2\";\r\n          if (currentData[key][index][name] === undefined) {\r\n            currentData[key][index][name] = 1;\r\n          } else {\r\n            currentData[key][index][name] += 1;\r\n          }\r\n        } else if (data[\"sul1\"] === \"1\") {\r\n          const name = \"sul1\";\r\n          if (currentData[key][index][name] === undefined) {\r\n            currentData[key][index][name] = 1;\r\n          } else {\r\n            currentData[key][index][name] += 1;\r\n          }\r\n        } else if (data[\"sul2\"] === \"1\") {\r\n          const name = \"sul2\";\r\n          if (currentData[key][index][name] === undefined) {\r\n            currentData[key][index][name] = 1;\r\n          } else {\r\n            currentData[key][index][name] += 1;\r\n          }\r\n        }\r\n      } else if (SULPH === \"0\") {\r\n        currentData[key][index].total2 += 1;\r\n        const name = \"None\";\r\n        if (currentData[key][index][name] === undefined) {\r\n          currentData[key][index][name] = 1;\r\n        } else {\r\n          currentData[key][index][name] += 1;\r\n        }\r\n      }\r\n    } else if (key === \"Trimethoprim\") {\r\n      const TRIM = data[\"dfra_any\"];\r\n      if (TRIM === \"1\") {\r\n        currentData[key][index].total2 += 1;\r\n        currentData[key][index].total += 1;\r\n        if (data[\"dfrA7\"] === \"1\" && data[\"dfrA14\"] === \"1\") {\r\n          const name = \"dfrA7 + dfrA14\";\r\n          if (currentData[key][index][name] === undefined) {\r\n            currentData[key][index][name] = 1;\r\n          } else {\r\n            currentData[key][index][name] += 1;\r\n          }\r\n        } else {\r\n          for (const i in trime) {\r\n            if (data[trime[i]] === \"1\") {\r\n              const name = trime[i];\r\n              if (currentData[key][index][name] === undefined) {\r\n                currentData[key][index][name] = 1;\r\n              } else {\r\n                currentData[key][index][name] += 1;\r\n              }\r\n              break;\r\n            }\r\n          }\r\n        }\r\n      } else if (TRIM === \"0\") {\r\n        currentData[key][index].total2 += 1;\r\n        const name = \"None\";\r\n        if (currentData[key][index][name] === undefined) {\r\n          currentData[key][index][name] = 1;\r\n        } else {\r\n          currentData[key][index][name] += 1;\r\n        }\r\n      }\r\n    } else if (key === \"Tetracyclines\") {\r\n      const TETRA = data[\"tetracycline_category\"];\r\n      if (TETRA === \"TetR\") {\r\n        currentData[key][index].total2 += 1;\r\n        currentData[key][index].total += 1;\r\n        if (data[\"tetA(A)\"] === \"1\") {\r\n          const name = \"tetA(A)\";\r\n          if (currentData[key][index][name] === undefined) {\r\n            currentData[key][index][name] = 1;\r\n          } else {\r\n            currentData[key][index][name] += 1;\r\n          }\r\n        }\r\n        if (data[\"tetA(B)\"] === \"1\") {\r\n          const name = \"tetA(B)\";\r\n          if (currentData[key][index][name] === undefined) {\r\n            currentData[key][index][name] = 1;\r\n          } else {\r\n            currentData[key][index][name] += 1;\r\n          }\r\n        }\r\n        if (data[\"tetA(C)\"] === \"1\") {\r\n          const name = \"tetA(C)\";\r\n          if (currentData[key][index][name] === undefined) {\r\n            currentData[key][index][name] = 1;\r\n          } else {\r\n            currentData[key][index][name] += 1;\r\n          }\r\n        }\r\n        if (data[\"tetA(D)\"] === \"1\") {\r\n          const name = \"tetA(D)\";\r\n          if (currentData[key][index][name] === undefined) {\r\n            currentData[key][index][name] = 1;\r\n          } else {\r\n            currentData[key][index][name] += 1;\r\n          }\r\n        }\r\n      } else if (TETRA === \"TetS\") {\r\n        currentData[key][index].total2 += 1;\r\n        const name = \"None\";\r\n        if (currentData[key][index][name] === undefined) {\r\n          currentData[key][index][name] = 1;\r\n        } else {\r\n          currentData[key][index][name] += 1;\r\n        }\r\n      }\r\n    }\r\n  });\r\n\r\n  return currentData;\r\n}\r\n\r\nfunction AMRDataResults(AMRData) {\r\n  AMRData = JSON.parse(AMRData);\r\n\r\n  Object.keys(AMRData).forEach((key) => {\r\n    const data = AMRData[key];\r\n\r\n    const top10 = [];\r\n    data.forEach((element) => {\r\n      if (top10.length < 10) {\r\n        top10.push(element);\r\n      } else {\r\n        top10.sort(function (a, b) {\r\n          if (a.total === b.total && a.genotype > b.genotype) return -1;\r\n          return a.total > b.total ? -1 : 1;\r\n        });\r\n        if (element.total === top10[9].total) {\r\n          if (element.genotype > top10[9].genotype) top10[9] = element;\r\n        }\r\n        if (element.total > top10[9].total) top10[9] = element;\r\n      }\r\n    });\r\n    top10.sort(function (a, b) {\r\n      if (a.total === b.total && a.genotype > b.genotype) return -1;\r\n      return a.total > b.total ? -1 : 1;\r\n    });\r\n    top10.push({\r\n      maxSum: data.length === 0 ? 0 : Math.ceil(data[0].total2 / 50) * 50,\r\n    });\r\n\r\n    AMRData[key] = top10;\r\n  });\r\n\r\n  return AMRData;\r\n}\r\n\r\nfunction GDData(currentData, data) {\r\n  currentData = JSON.parse(currentData);\r\n\r\n  const index = currentData.findIndex((x) => x.name === data.DATE);\r\n  if (index === -1) {\r\n    currentData.push({\r\n      name: data.DATE,\r\n      [data.GENOTYPE]: 1,\r\n      total: 1,\r\n    });\r\n  } else {\r\n    currentData[index].total += 1;\r\n    if (currentData[index][data.GENOTYPE] === undefined)\r\n      currentData[index][data.GENOTYPE] = 1;\r\n    else currentData[index][data.GENOTYPE] += 1;\r\n  }\r\n\r\n  return currentData;\r\n}\r\n\r\nexport function filterForComponents({\r\n  country,\r\n  minYear,\r\n  maxYear,\r\n  dataset,\r\n  region,\r\n  data,\r\n  amr,\r\n}) {\r\n  const [results, genotypes, worldMapResults, PMIDResults] = [[], [], [], []];\r\n  let [\r\n    aux,\r\n    auxWM,\r\n    worldMapComplementaryResults,\r\n    worldMapG,\r\n    worldMapH58,\r\n    worldMapSTAD,\r\n    worldMapMDR,\r\n    worldMapXDR,\r\n    worldMapAZITH,\r\n    worldMapCIPR,\r\n    worldMapCIPI,\r\n    RFWGResults,\r\n    DRTResults,\r\n    AMRResults,\r\n    GDResults,\r\n  ] = [null, null, {}, [], [], [], [], [], [], [], [], [], [], {}, []];\r\n  AMRResults = {\r\n    Ampicillin: [],\r\n    Azithromycin: [],\r\n    Chloramphenicol: [],\r\n    \"Co-trimoxazole\": [],\r\n    ESBL: [],\r\n    \"Fluoroquinolones (CipI/R)\": [],\r\n    Sulphonamides: [],\r\n    Tetracyclines: [],\r\n    Trimethoprim: [],\r\n  };\r\n\r\n  const empty = [\"\", \"-\"];\r\n  data.forEach((x) => {\r\n    aux = true;\r\n    auxWM = true; // WM = World Map\r\n\r\n    // Validation if row will be used, this will allways happen\r\n    if (country !== \"All\" && x.COUNTRY_ONLY !== country) auxWM = false;\r\n    if (x.DATE < minYear || x.DATE > maxYear) aux = false;\r\n    if (dataset !== \"All\" && x.TRAVEL !== dataset.toLowerCase()) aux = false;\r\n    if (\r\n      country !== \"All\" &&\r\n      region !== \"All\" &&\r\n      (empty.includes(x.REGION_IN_COUNTRY) || region !== x.REGION_IN_COUNTRY)\r\n    )\r\n      auxWM = false;\r\n\r\n    // If this passes than it's data for the map\r\n    if (aux && !empty.includes(x.COUNTRY_ONLY)) {\r\n      let displayName = x.COUNTRY_ONLY;\r\n      if (x.COUNTRY_ONLY === \"Democratic Republic of Congo\")\r\n        displayName = \"Dem. Rep. Congo\";\r\n      else if (x.COUNTRY_ONLY === \"Central African Republic\")\r\n        displayName = \"Central African Rep.\";\r\n      else if (x.COUNTRY_ONLY === \"Ivory Coast\") displayName = \"Côte d'Ivoire\";\r\n      else if (x.COUNTRY_ONLY === \"East Timor\") displayName = \"Timor-Leste\";\r\n\r\n      // WORLD MAP\r\n      if (!worldMapResults.some((e) => e.name === x.COUNTRY_ONLY)) {\r\n        worldMapResults.push({\r\n          name: x.COUNTRY_ONLY,\r\n          displayName: displayName,\r\n          count: 1,\r\n        });\r\n      } else {\r\n        let aux2 = worldMapResults.find((e) => e.name === x.COUNTRY_ONLY);\r\n        let countryIndex = worldMapResults.findIndex(\r\n          (e) => e.name === x.COUNTRY_ONLY\r\n        );\r\n        aux2.count += 1;\r\n        worldMapResults[countryIndex] = aux2;\r\n      }\r\n\r\n      // WORLD MAP COMPLEMENTARY DATA FOR WORLD MAP (lines 572-583)\r\n      if (worldMapComplementaryResults[displayName] === undefined)\r\n        worldMapComplementaryResults[displayName] = WMCDTemplate;\r\n      worldMapComplementaryResults[displayName] = WMCDAux(\r\n        JSON.stringify(worldMapComplementaryResults[displayName]),\r\n        x\r\n      );\r\n\r\n      // WORLD MAP DATA FOR EACH MAPVIEW\r\n      worldMapG = WMCountData(\r\n        JSON.stringify(worldMapG),\r\n        x,\r\n        displayName,\r\n        \"GENOTYPE\",\r\n        \"genotypes\",\r\n        \"lineage\"\r\n      );\r\n      worldMapH58 = WMCountData(\r\n        JSON.stringify(worldMapH58),\r\n        x,\r\n        displayName,\r\n        \"GENOTYPE_SIMPLE\",\r\n        \"genotypes\",\r\n        \"type\",\r\n        true\r\n      );\r\n      worldMapSTAD = WMCountData(\r\n        JSON.stringify(worldMapSTAD),\r\n        x,\r\n        displayName,\r\n        \"amr_category\",\r\n        \"STADs\",\r\n        \"type\",\r\n        false,\r\n        \"No AMR detected\"\r\n      );\r\n      worldMapMDR = WMCountData(\r\n        JSON.stringify(worldMapMDR),\r\n        x,\r\n        displayName,\r\n        \"MDR\",\r\n        \"MDRs\",\r\n        \"type\",\r\n        false,\r\n        \"MDR\"\r\n      );\r\n      worldMapXDR = WMCountData(\r\n        JSON.stringify(worldMapXDR),\r\n        x,\r\n        displayName,\r\n        \"XDR\",\r\n        \"XDRs\",\r\n        \"type\",\r\n        false,\r\n        \"XDR\"\r\n      );\r\n      worldMapAZITH = WMCountData(\r\n        JSON.stringify(worldMapAZITH),\r\n        x,\r\n        displayName,\r\n        \"azith_pred_pheno\",\r\n        \"AZs\",\r\n        \"type\",\r\n        false,\r\n        \"AzithR\"\r\n      );\r\n      worldMapCIPR = WMCountData(\r\n        JSON.stringify(worldMapCIPR),\r\n        x,\r\n        displayName,\r\n        \"cip_pred_pheno\",\r\n        \"CipRs\",\r\n        \"type\",\r\n        false,\r\n        \"CipR\"\r\n      );\r\n      worldMapCIPI = WMCountData(\r\n        JSON.stringify(worldMapCIPI),\r\n        x,\r\n        displayName,\r\n        \"cip_pred_pheno\",\r\n        \"CipIs\",\r\n        \"type\",\r\n        false,\r\n        \"\",\r\n        true\r\n      );\r\n    }\r\n\r\n    // If this passes than it's data for the graphs\r\n    if (aux && auxWM) {\r\n      results.push(x);\r\n      if (!genotypes.includes(x.GENOTYPE)) genotypes.push(x.GENOTYPE);\r\n\r\n      let chartData = ChartData(\r\n        JSON.stringify(RFWGResults),\r\n        JSON.stringify(DRTResults),\r\n        x\r\n      );\r\n      RFWGResults = chartData[0];\r\n      DRTResults = chartData[1];\r\n      AMRResults = AMRData(JSON.stringify(AMRResults), x);\r\n      GDResults = GDData(JSON.stringify(GDResults), x);\r\n\r\n      if (x.COUNTRY_ONLY === country) {\r\n        if (!PMIDResults.includes(x.PMID)) {\r\n          PMIDResults.push(x.PMID);\r\n        }\r\n      }\r\n    }\r\n  });\r\n  // Here are some ordenations and filters for the information before it is returned to the dashboard. IT IS IMPORTANT FOR THE CODE\r\n  worldMapComplementaryResults = WMCDResults(\r\n    JSON.stringify(worldMapComplementaryResults)\r\n  );\r\n  worldMapG = WMCountDataResults(JSON.stringify(worldMapG), \"genotypes\");\r\n  worldMapH58 = WMCountDataResults(JSON.stringify(worldMapH58), \"genotypes\");\r\n  worldMapSTAD = WMCountDataResults(JSON.stringify(worldMapSTAD), \"STADs\");\r\n  worldMapMDR = WMCountDataResults(JSON.stringify(worldMapMDR), \"MDRs\");\r\n  worldMapXDR = WMCountDataResults(JSON.stringify(worldMapXDR), \"XDRs\");\r\n  worldMapAZITH = WMCountDataResults(JSON.stringify(worldMapAZITH), \"AZs\");\r\n  worldMapCIPR = WMCountDataResults(JSON.stringify(worldMapCIPR), \"CipRs\");\r\n  worldMapCIPI = WMCountDataResults(JSON.stringify(worldMapCIPI), \"CipIs\");\r\n  RFWGResults.sort((a, b) => b.total - a.total);\r\n  DRTResults = DRTResults.filter((item) => item.total >= 10);\r\n  DRTResults.sort((a, b) => a.name.localeCompare(b.name));\r\n  DRTResults = DRTDataResults(JSON.stringify(DRTResults));\r\n  AMRResults = AMRDataResults(JSON.stringify(AMRResults));\r\n  GDResults.sort((a, b) => a.name - b.name);\r\n\r\n  return [\r\n    results, // ALL ROWS\r\n    genotypes.length, // Number of genotypes\r\n    worldMapResults, // Data for World Map Samples\r\n    worldMapComplementaryResults, // Data for World Map Complementary Data\r\n    worldMapG, // World Map Genotypes data\r\n    worldMapH58, // WM H58 data\r\n    worldMapSTAD, // WM Sensitive to all drugs data\r\n    worldMapMDR, // WM MDR data\r\n    worldMapXDR, // WM XDR data\r\n    worldMapAZITH, // WM AzithR data\r\n    worldMapCIPR, // WM CipR data\r\n    worldMapCIPI, // WM CipI data\r\n    PMIDResults, // PMID data\r\n    RFWGResults, // Data for Resistance frequencies within genotypes graph\r\n    DRTResults, // Data for Drug resistance trends graph\r\n    AMRResults, // Data for Resistance determinants within genotypes graph\r\n    GDResults, // DATA for Genotype distribution graph\r\n  ];\r\n}\r\n","import './index.css';\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { scaleLinear } from \"d3-scale\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport { ComposableMap, Geographies, Geography, Sphere, Graticule, ZoomableGroup } from \"react-simple-maps\";\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport { Tooltip as IconTooltip } from '@material-ui/core';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TooltipMaterialUI from '@material-ui/core/Tooltip';\r\nimport Zoom from '@material-ui/core/Zoom';\r\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport { BarChart, Bar, XAxis, Label, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, Brush, LineChart, Line, Legend } from 'recharts';\r\nimport axios from 'axios';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlus, faMinus, faCrosshairs, faCamera, faTable, faFilePdf, faInfoCircle, faUndoAlt } from '@fortawesome/free-solid-svg-icons'\r\nimport download from 'downloadjs';\r\nimport { svgAsPngUri } from 'save-svg-as-png';\r\nimport typhinetLogoImg from '../../assets/img/logo-typhinet-prod.png';\r\nimport euFlagImg from '../../assets/img/eu_flag.jpg';\r\nimport geography from '../../assets/world-110m.json'\r\nimport { API_ENDPOINT } from '../../constants';\r\nimport { getColorForGenotype, getColorForDrug, getColorForTetracyclines } from '../../util/colorHelper';\r\nimport { faEnvelope } from '@fortawesome/free-solid-svg-icons'\r\nimport { faGithub, faTwitter } from \"@fortawesome/free-brands-svg-icons\"\r\nimport { Select as DropDownSelect } from \"react-dropdown-select\"\r\nimport 'rodal/lib/rodal.css';\r\nimport domtoimage from 'dom-to-image';\r\nimport { jsPDF } from \"jspdf\";\r\nimport { useStyles, CustomCircularProgress, CustomToggleButton, Buttons, ButtonClearSelect } from './materialUI'\r\nimport moment from 'moment';\r\nimport { filterForComponents } from \"./filters\";\r\n\r\nconst DashboardPage = () => {\r\n  const classes = useStyles();\r\n\r\n  const [controlMapPosition, setControlMapPosition] = useState({ coordinates: [0, 0], zoom: 1 });\r\n\r\n  const [worldMapSamplesData, setWorldMapSamplesData] = useState([]);\r\n  const [worldMapComplementaryData, setWorldMapComplementaryData] = useState({});\r\n  const [worldMapGenotypesData, setWorldMapGenotypesData] = useState([]);\r\n  const [worldMapH58Data, setWorldMapH58Data] = useState([]);\r\n  const [worldMapMDRData, setWorldMapMDRData] = useState([]);\r\n  const [worldMapSTADData, setWorldMapSTADData] = useState([]);\r\n  const [worldMapXDRData, setWorldMapXDRData] = useState([]);\r\n  const [worldMapAZITHData, setWorldMapAZITHData] = useState([]);\r\n  const [worldMapCIPIData, setWorldMapCIPIData] = useState([]);\r\n  const [worldMapCIPRData, setWorldMapCIPRData] = useState([]);\r\n\r\n  const [plotAmrClassChart, setPlotAmrClassChart] = useState(function () { })\r\n  const [plotDrugsAndGenotypesChart, setPlotDrugsAndGenotypesChart] = useState(function () { })\r\n  const [plotPopulationStructureChart, setPlotPopulationStructureChart] = useState(function () { })\r\n  const [plotDrugTrendsChart, setPlotDrugTrendsChart] = useState(function () { })\r\n\r\n  const [captureControlMapInProgress, setCaptureControlMapInProgress] = useState(false)\r\n  const [captureControlChartRFWGInProgress, setCaptureControlChartRFWGInProgress] = useState(false)\r\n  const [captureControlChartDRTInProgress, setCaptureControlChartDRTInProgress] = useState(false)\r\n  const [captureControlChartGDInProgress, setCaptureControlChartGDInProgress] = useState(false)\r\n  const [captureControlChartRFWAGInProgress, setCaptureControlChartRFWAGInProgress] = useState(false)\r\n  const [captureReportInProgress, setCaptureReportInProgress] = useState(false)\r\n  const [tooltipContent, setTooltipContent] = useState(null);\r\n\r\n  const [timeInitial, setTimeInitial] = React.useState(0);\r\n  const [timeFinal, setTimeFinal] = React.useState(0);\r\n  const [actualTimeInitial, setActualTimeInitial] = React.useState(0);\r\n  const [actualTimeFinal, setActualTimeFinal] = React.useState(0);\r\n  const [years, setYears] = useState([0, 0])\r\n\r\n  const [countriesForFilter, setCountriesForFilter] = React.useState(['All']);\r\n  const [regionsForFilter, setRegionsForFilter] = React.useState(['All']);\r\n  const [actualCountry, setActualCountry] = useState(\"All\");\r\n  const [actualRegion, setActualRegion] = useState(\"All\");\r\n\r\n  const [actualContinent, setActualContinent] = useState(\"All\")\r\n  // const [continentOptions] = useState(['All', 'Africa', 'Asia', 'Central America', 'Europe', 'North America', 'Oceania', 'South America'])\r\n\r\n  const [populationStructureFilter, setPopulationStructureFilter] = React.useState(1);\r\n  const [populationStructureFilterOptions] = useState([{ value: 'Number of genomes', id: 1 }, { value: 'Percentage per year', id: 2 }])\r\n  const [RFWGFilterOptions] = useState([{ value: 'Number of genomes', id: 1 }, { value: 'Percentage within genotype', id: 2 }])\r\n  const [amrClassFilterOptions] = useState([{ value: 'Number of genomes', id: 1 }, { value: 'Percentage per genotype', id: 2 }])\r\n  const [amrClassFilterforFilterOptions] = useState([{ value: \"Ampicillin\", id: 0 }, { value: \"Azithromycin\", id: 1 }, { value: \"Chloramphenicol\", id: 2 }, { value: \"Co-trimoxazole\", id: 3 }, { value: \"ESBL\", id: 4 }, { value: \"Fluoroquinolones (CipI/R)\", id: 5 }, { value: \"Sulphonamides\", id: 6 }, { value: \"Tetracyclines\", id: 7 }, { value: \"Trimethoprim\", id: 8 }])\r\n\r\n  const [RFWGFilter, setRFWGFilter] = React.useState(2);\r\n  const [amrClassesForFilter] = useState([\"Ampicillin\", \"Azithromycin\", \"Chloramphenicol\", \"Co-trimoxazole\", \"ESBL\", \"Fluoroquinolones (CipI/R)\", \"Sulphonamides\", \"Tetracyclines\", \"Trimethoprim\"])\r\n  const [drtClassesForFilter] = useState([\"Ampicillin\", \"Azithromycin\", \"Chloramphenicol\", \"Co-trimoxazole\", \"ESBL\", \"Fluoroquinolones (CipI/R)\", \"Susceptible\", \"Sulphonamides\", \"Tetracyclines\", \"Trimethoprim\"])\r\n  const [trendClassesForFilter] = useState([\"Ampicillin\", \"Azithromycin\", \"Chloramphenicol\", /*\"Fluoroquinolone (CipI)\",*/ \"Fluoroquinolones (CipR)\", \"Co-trimoxazole\", \"ESBL\", \"Fluoroquinolones (CipI/R)\", \"Susceptible\", \"Sulphonamides\", \"Tetracyclines\", \"Trimethoprim\"])\r\n  const [trendDropdownOptions] = useState([{ value: \"Ampicillin\", id: 0 }, { value: \"Azithromycin\", id: 1 }, { value: \"Chloramphenicol\", id: 2 }, /*{value: \"Fluoroquinolone (CipI)\", id: 3},*/ { value: \"Fluoroquinolones (CipR)\", id: 3 }, { value: \"Co-trimoxazole\", id: 4 }, { value: \"ESBL\", id: 5 }, { value: \"Fluoroquinolones (CipI/R)\", id: 6 }, { value: \"Susceptible\", id: 7 }, { value: \"Sulphonamides\", id: 8 }, { value: \"Tetracyclines\", id: 9 }, { value: \"Trimethoprim\", id: 10 }])\r\n  const [RFWGDropdownOptions, setRFWGDropdownOptions] = useState([])\r\n  const [amrClassFilter, setAmrClassFilter] = React.useState(amrClassesForFilter[5])\r\n  const [RDWAGDataviewFilter, setRDWAGDataviewFilter] = React.useState(2)\r\n\r\n  const [drugTrendsChartData, setDrugTrendsChartData] = useState([])\r\n  const [drugsAndGenotypesChartData, setDrugsAndGenotypesChartData] = useState([])\r\n  const [populationStructureChartData, setPopulationStructureChartData] = useState([])\r\n  const [amrClassChartData, setAmrClassChartData] = useState({})\r\n\r\n  const [mapView, setMapView] = React.useState('CipI');\r\n  const [dataset, setDataset] = React.useState('All');\r\n  const [totalGenomes, setTotalGenomes] = useState(0)\r\n  const [actualGenomes, setActualGenomes] = useState(0)\r\n  const [totalGenotypes, setTotalGenotypes] = useState(0)\r\n  const [actualGenotypes, setActualGenotypes] = useState(0)\r\n  const [appLoading, setAppLoading] = useState(true)\r\n  const [lastUpdated, setLastUpdated] = useState(\"\")\r\n  const [countryPMID, setCountryPMID] = useState([])\r\n\r\n  const [trendValues, setTrendValues] = React.useState(trendDropdownOptions)\r\n  const [RFWGValues, setRFWGValues] = React.useState([])\r\n\r\n  const [desktop] = useState(767)\r\n  const [mobile] = useState(500)\r\n\r\n  const [hoverColor] = useState(\"#D2F1F6\")\r\n\r\n  const [dimensions, setDimensions] = React.useState({\r\n    height: window.innerHeight,\r\n    width: window.innerWidth\r\n  })\r\n\r\n  // Helper function for getting height and width of window\r\n  function debounce(fn, ms) {\r\n    let timer\r\n    return _ => {\r\n      clearTimeout(timer)\r\n      timer = setTimeout(_ => {\r\n        timer = null\r\n        fn.apply(this, arguments)\r\n      }, ms)\r\n    };\r\n  }\r\n\r\n  // Format selected date\r\n  function formatDate(date) {\r\n    return moment(date).format(\"ddd MMM DD YYYY HH:mm:ss\")\r\n  }\r\n\r\n  // Watcher for window resize\r\n  useEffect(() => {\r\n    const debouncedHandleResize = debounce(function handleResize() {\r\n      setDimensions({\r\n        height: window.innerHeight,\r\n        width: window.innerWidth\r\n      })\r\n    }, 1000)\r\n\r\n    window.addEventListener('resize', debouncedHandleResize)\r\n\r\n    return _ => {\r\n      window.removeEventListener('resize', debouncedHandleResize)\r\n    }\r\n  })\r\n\r\n  const [genotypes] = useState([\r\n    '0', '0.0.1', '0.0.2', '0.0.3', '0.1',\r\n    '0.1.1', '0.1.2', '0.1.3', '1.1', '1.1.1',\r\n    '1.1.2', '1.1.3', '1.1.4', '1.2', '1.2.1',\r\n    '2', '2.0.1', '2.0.2', '2.1',\r\n    '2.1.1', '2.1.2', '2.1.3', '2.1.4', '2.1.5', '2.1.6',\r\n    '2.1.7', '2.1.8', '2.1.9', '2.1.7.1', '2.1.7.2', '2.2',\r\n    '2.2.1', '2.2.2', '2.2.3', '2.2.4',\r\n    '2.3', '2.3.1', '2.3.2', '2.3.3', '2.3.4',\r\n    '2.3.5', '2.4', '2.4.1', '2.5',\r\n    '2.5.1', '2.5.2', '3', '3.0.1', '3.0.2',\r\n    '3.1', '3.1.1', '3.1.2', '3.2',\r\n    '3.2.1', '3.2.2', '3.3', '3.3.1',\r\n    '3.3.2', '3.3.2.Bd1', '3.3.2.Bd2', '3.4',\r\n    '3.5', '3.5.1', '3.5.2', '3.5.3',\r\n    '3.5.4', '4', '4.1', '4.1.1', '4.2', '4.2.1',\r\n    '4.2.2', '4.2.3', /*'4.3', '4.3.0', */'4.3.1', '4.3.1.1',\r\n    '4.3.1.1.P1', '4.3.1.1.EA1', '4.3.1.2', '4.3.1.2.EA2',\r\n    '4.3.1.2.EA3', '4.3.1.3', '4.3.1.3.Bdq'].sort((a, b) => a.localeCompare(b)));\r\n\r\n  // Get date from the las update on the table from admin page\r\n  useEffect(() => {\r\n    axios.get(`${API_ENDPOINT}mongo/lastUpdated`)\r\n      .then((res) => {\r\n        setLastUpdated(new Date(res.data))\r\n      })\r\n  }, [])\r\n\r\n  // Colors for the No. Samples label\r\n  const mapSamplesColorScale = (domain) => {\r\n    if (domain >= 1 && domain <= 9) {\r\n      return '#4575b4'\r\n    } else if (domain >= 10 && domain <= 19) {\r\n      return '#91bfdb'\r\n    } else if (domain >= 20 && domain <= 99) {\r\n      return '#addd8e'\r\n    } else if (domain >= 100 && domain <= 299) {\r\n      return '#fee090'\r\n    } else if (domain >= 300) {\r\n      return '#fc8d59'\r\n    }\r\n  }\r\n\r\n  const mapRedColorScale = (percentage) => {\r\n    const p = parseInt(percentage)\r\n    if (p >= 51) {\r\n      return '#A20F17'\r\n    } else if (p >= 11) {\r\n      return '#DD2C24'\r\n    } else if (p >= 3) {\r\n      return '#FA694A'\r\n    } else {\r\n      return '#FAAD8F'\r\n    }\r\n  }\r\n\r\n  // Tooltip for all graphs but the Resistance determinants within genotypes\r\n  const tooltip = React.useCallback((positionY, width1, width2, sort, wrapperS, stroke, chart = -1) => {\r\n    return (\r\n      <Tooltip\r\n        position={{ y: dimensions.width < mobile ? positionY[0] : dimensions.width < desktop ? positionY[1] : positionY[2], x: dimensions.width < mobile ? -10 : 0 }}\r\n        wrapperStyle={wrapperS}\r\n        cursor={{ fill: hoverColor }}\r\n        content={({ active, payload, label }) => {\r\n          if (payload !== null) {\r\n            if (payload[0]?.payload.name === \"\") {\r\n              return null;\r\n            }\r\n\r\n            if (sort) {\r\n              payload.sort((a, b) => b.value - a.value)\r\n              payload = payload.reverse()\r\n            }\r\n            if (active) {\r\n              return (\r\n                <div className=\"my-tooltip\">\r\n                  <div className=\"my-tooltip-title\">\r\n                    <span className=\"my-tooltip-title-label\">{label}</span>\r\n                    {chart === 0 && (<span className=\"my-tooltip-title-total\">{\"N = \" + (payload[0].payload.totalS)}</span>)}\r\n                    {chart === 4 && (<span className=\"my-tooltip-title-total\">{\"N = \" + (payload[0].payload.quantities.totalS)}</span>)}\r\n                    {chart === 1 && (<span className=\"my-tooltip-title-total\">{\"N = \" + payload[0].payload.total}</span>)}\r\n                    {chart === 2 && (<span className=\"my-tooltip-title-total\">{\"N = \" + payload[0].payload.total}</span>)}\r\n                    {chart === 3 && (<span className=\"my-tooltip-title-total\">{\"N = \" + payload[0].payload.total}</span>)}\r\n                  </div>\r\n                  <div className=\"my-tooltip-content\" style={{ width: width1 }}>\r\n                    {payload.reverse().map((item, index) => {\r\n                      let percentage = ((item.value / item.payload.total) * 100)\r\n                      if (chart === 1) {\r\n                        percentage = ((item.payload.drugsPercentage[item.dataKey] / item.payload.total) * 100)\r\n                      }\r\n                      if (chart === 0) {\r\n                        percentage = ((item.value / item.payload.totalS) * 100)\r\n                      }\r\n                      percentage = Math.round(percentage * 100) / 100\r\n                      if ((populationStructureFilter === 2 && chart === 3) || (RFWGFilter === 2 && chart === 4)) {\r\n                        percentage = Math.round(item.value * 100) / 100\r\n                      }\r\n                      if (chart === 1 && item.payload.drugsPercentage[item.dataKey] === 0) {\r\n                        return null\r\n                      }\r\n                      return (\r\n                        <div key={index + item} className=\"my-tooltip-content-individual\" style={{ width: width2 }}>\r\n                          <div className=\"my-tooltip-content-square\" style={{ backgroundColor: stroke ? item.stroke : item.fill }} />\r\n                          <div className=\"my-tooltip-content-info\">\r\n                            <span className=\"my-tooltip-content-name\" style={{ width: dimensions.width < mobile ? '80%' : '100%' }}>{item.name}</span>\r\n                            <span className=\"my-tooltip-content-count\">N = {(populationStructureFilter === 2 && chart === 3) || (RFWGFilter === 2 && chart === 4) ? item.payload.quantities[item.name] : chart === 1 ? item.payload.drugsPercentage[item.dataKey] : item.value}</span>\r\n                            <span className=\"my-tooltip-content-percent\">{percentage}%</span>\r\n                          </div>\r\n                        </div>\r\n                      )\r\n                    })}\r\n                  </div>\r\n                </div>\r\n              );\r\n            }\r\n          }\r\n          return null;\r\n        }}\r\n      />\r\n    )\r\n  }, [desktop, dimensions, mobile, populationStructureFilter, RFWGFilter, hoverColor])\r\n\r\n  // Genotype Distribution graph\r\n  useEffect(() => {\r\n    const plotPopulationStructureChart = () => {\r\n\r\n      if (populationStructureFilter === 1) { /* QUANTITY */\r\n        let maxH = 0\r\n        for (let index = 0; index < populationStructureChartData.length; index++) {\r\n          if (populationStructureChartData[index].total > maxH) {\r\n            maxH = populationStructureChartData[index].total\r\n          }\r\n        }\r\n        maxH = Math.ceil(maxH / 50) * 50\r\n        return (\r\n          <ResponsiveContainer width=\"90%\">\r\n            <BarChart\r\n              height={350}\r\n              data={populationStructureChartData}\r\n              margin={{\r\n                top: 20, bottom: 5, right: 0\r\n              }}\r\n              maxBarSize={62}\r\n            >\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis padding={{ left: 5, right: 5 }} dataKey=\"name\" interval=\"preserveStartEnd\" tick={{ fontSize: 14 }} />\r\n              <YAxis domain={[0, maxH]} allowDataOverflow={true} allowDecimals={false} width={70}>\r\n                <Label angle={-90} position='insideLeft' className=\"PSC-label\" offset={6}>\r\n                  Number of genomes\r\n                </Label>\r\n              </YAxis>\r\n              {populationStructureChartData.length > 0 && (<Brush dataKey=\"name\" height={20} stroke={\"rgb(31, 187, 211)\"} />)}\r\n\r\n              <Legend\r\n                content={(props) => {\r\n                  const { payload } = props;\r\n                  return (\r\n                    <div className=\"PSC-legend\">\r\n                      <div className=\"PSC-legend-div\">\r\n                        {payload.map((entry, index) => {\r\n                          const { dataKey, color } = entry\r\n                          return (\r\n                            <div key={index + \"PSC_2\"} className=\"PSC-legend-info\">\r\n                              <div className=\"PSC-legend-info-circle\" style={{ backgroundColor: color }} />\r\n                              <span className=\"PSC-legend-info-name\">{dataKey}</span>\r\n                            </div>\r\n                          )\r\n                        })}\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                }}\r\n              />\r\n\r\n              {tooltip([290, 290, 260], dimensions.width < 620 ? 250 : 530, dimensions.width > 620 ? \"20%\" : \"50%\", false, { zIndex: 100, top: 20, right: -20 }, false, 2)}\r\n              {genotypes.map((item, i) => <Bar key={i + \"PSC_Q\"} dataKey={item} stackId={0} fill={getColorForGenotype(item)} />)}\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        )\r\n      } else { /* PERCENTAGE */\r\n        let maxH = 100\r\n\r\n        let teste = JSON.parse(JSON.stringify(populationStructureChartData))\r\n        teste.forEach(element => {\r\n          element[\"quantities\"] = {}\r\n          const keys = Object.keys(element);\r\n          for (const key in keys) {\r\n            if (keys[key] !== 'name' && keys[key] !== 'total' && keys[key] !== 'quantities') {\r\n              let aux = keys[key]\r\n              element.quantities[aux] = element[aux]\r\n              element[aux] = (element[aux] * 100) / element.total\r\n            }\r\n          }\r\n        });\r\n\r\n        return (\r\n          <ResponsiveContainer width=\"90%\">\r\n            <BarChart\r\n              height={350}\r\n              data={teste}\r\n              margin={{\r\n                top: 20, bottom: 5, right: 0\r\n              }}\r\n              maxBarSize={62}\r\n              barCategoryGap={'10%'}\r\n            >\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis padding={{ left: 5, right: 5 }} dataKey=\"name\" interval=\"preserveStartEnd\" tick={{ fontSize: 14 }} />\r\n              <YAxis domain={[0, maxH]} allowDataOverflow={true} allowDecimals={false} width={70}>\r\n                <Label angle={-90} position='insideLeft' className=\"PSC-label\" offset={6}>\r\n                  % Genomes per year\r\n                </Label>\r\n              </YAxis>\r\n              {teste.length > 0 && (<Brush dataKey=\"name\" height={20} stroke={\"rgb(31, 187, 211)\"} />)}\r\n\r\n              <Legend\r\n                content={(props) => {\r\n                  const { payload } = props;\r\n                  return (\r\n                    <div className=\"PSC-legend\">\r\n                      <div className=\"PSC-legend-div\">\r\n                        {payload.map((entry, index) => {\r\n                          const { dataKey, color } = entry\r\n                          return (\r\n                            <div key={index + \"PSC\"} className=\"PSC-legend-info\">\r\n                              <div className=\"PSC-legend-info-circle\" style={{ backgroundColor: color }} />\r\n                              <span className=\"PSC-legend-info-name\" >{dataKey}</span>\r\n                            </div>\r\n                          )\r\n                        })}\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                }}\r\n              />\r\n\r\n              {tooltip([290, 290, 260], dimensions.width < 620 ? 250 : 530, dimensions.width > 620 ? \"20%\" : \"50%\", false, { zIndex: 100, top: 20, right: -20 }, false, 3)}\r\n              {genotypes.map((item, i) => <Bar key={i + \"PSC_P\"} dataKey={item} stackId=\"a\" fill={getColorForGenotype(item)} />)}\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        )\r\n      }\r\n    }\r\n    setPlotPopulationStructureChart(plotPopulationStructureChart)\r\n  }, [dimensions.width, genotypes, populationStructureChartData, populationStructureFilter, tooltip])\r\n\r\n  // Resistance determinants within genotypes graph and tooltip\r\n  useEffect(() => {\r\n    const amrClassChartTooltip = () => {\r\n      return (\r\n        <Tooltip\r\n          position={{ x: 0, y: 230 }}\r\n          wrapperStyle={{ zIndex: 100, top: 50 }}\r\n          allowEscapeViewBox={{ x: true, y: true }}\r\n          cursor={{ fill: hoverColor }}\r\n          content={({ active, payload, label }) => {\r\n            if (payload !== null) {\r\n              if (active) {\r\n                return (\r\n                  <div className=\"my-tooltip\">\r\n                    <div className=\"my-tooltip-title\">\r\n                      <span className=\"my-tooltip-title-label\">{label}</span>\r\n                      <span className=\"my-tooltip-title-total\">{\"N = \" + payload[0].payload.total2}</span>\r\n                    </div>\r\n                    <div className=\"my-tooltip-content amr-tooltip-content\">\r\n                      {payload.reverse().map((item, index) => {\r\n                        let percentage\r\n                        if (RDWAGDataviewFilter === 1) {\r\n                          percentage = ((item.value / item.payload.total2) * 100)\r\n                        } else {\r\n                          percentage = item.value\r\n                        }\r\n                        percentage = Math.round(percentage * 100) / 100\r\n                        return (\r\n                          <div key={index + \"tooltip\"} className=\"amr-tooltip-content-individual\">\r\n                            <div className=\"my-tooltip-content-square\" style={{ backgroundColor: item.fill }} />\r\n                            <div className=\"amr-tooltip-content-info\">\r\n                              <span className=\"amr-tooltip-content-name\">{item.name}</span>\r\n                              <span className=\"my-tooltip-content-count\">N = {RDWAGDataviewFilter === 2 ? item.payload.percentage[item.name] : item.value}</span>\r\n                              <span className=\"my-tooltip-content-percent\">{percentage}%</span>\r\n                            </div>\r\n                          </div>\r\n                        )\r\n                      })}\r\n                    </div>\r\n                  </div>\r\n                );\r\n              }\r\n            }\r\n\r\n            return null;\r\n          }}\r\n        />\r\n      )\r\n    }\r\n\r\n    const armClassFilterComponent = (info) => {\r\n      let maxSum = 0\r\n      const amr = amrClassChartData[amrClassFilter]\r\n      if (amr && amr[amr.length - 1] !== undefined) {\r\n        maxSum = amr[amr.length - 1].maxSum\r\n      }\r\n\r\n      let dataAMR = amr?.slice(0, amr.length - 1)\r\n      if (dataAMR === undefined) dataAMR = []\r\n\r\n      if (RDWAGDataviewFilter === 1) {\r\n        return (\r\n          <ResponsiveContainer width=\"90%\">\r\n            <BarChart\r\n              height={300}\r\n              data={dataAMR}\r\n              margin={{\r\n                top: 20, left: 0, bottom: 5, right: 0\r\n              }}\r\n              layout=\"horizontal\"\r\n            >\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis padding={{ left: 5, right: 5 }} dataKey=\"genotype\" type={\"category\"} interval={dimensions.width < 1700 ? 1 : 0} tick={{ fontSize: 14 }} />\r\n              <YAxis domain={[0, maxSum]} type={\"number\"} allowDecimals={false} width={70}>\r\n                <Label angle={-90} position='insideLeft' className=\"RDWAG-label\" offset={6}>\r\n                  Number of occurrences\r\n                </Label>\r\n              </YAxis>\r\n              {dataAMR.length > 0 && (<Brush dataKey=\"genotype\" height={20} stroke={\"rgb(31, 187, 211)\"} />)}\r\n\r\n              <Legend\r\n                content={(props) => {\r\n                  const { payload } = props;\r\n                  return (\r\n                    <div className=\"RDWAG-legend\">\r\n                      <div className=\"RDWAG-legend-div\" style={{ justifyContent: amrClassFilter === \"Ampicillin\" || amrClassFilter === \"Fluoroquinolones (CipI/R)\" ? \"\" : \"space-between\" }}>\r\n                        {payload.map((entry, index) => {\r\n                          const { dataKey, color } = entry\r\n                          return (\r\n                            <div key={index + \"RDWAG-legend\"} className=\"RDWAG-legend-info\">\r\n                              <div className=\"RDWAG-legend-info-circle\" style={{ backgroundColor: color }} />\r\n                              <span className=\"RDWAG-legend-info-name\">{dataKey}</span>\r\n                            </div>\r\n                          )\r\n                        })}\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                }}\r\n              />\r\n\r\n              {amrClassChartTooltip()}\r\n              {info.bars.map((item, i) => {\r\n                return (\r\n                  <Bar key={i + \"RDWAG_Q\"} dataKey={item[0]} fill={item[1]} stackId=\"a\" barSize={30} />\r\n                )\r\n              })}\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        )\r\n      } else if (RDWAGDataviewFilter === 2) {\r\n        let temp = JSON.parse(JSON.stringify(dataAMR))\r\n\r\n        temp.forEach(element => {\r\n          element.percentage = {}\r\n          for (const key in element) {\r\n            if (![\"genotype\", \"total\", \"total2\", \"percentage\"].includes(key) && !key.includes(\"error\")) {\r\n              const aux = (element[key] * 100) / element.total2\r\n              element.percentage[key] = element[key]\r\n              element[key] = aux\r\n            }\r\n          }\r\n        })\r\n\r\n        return (\r\n          <ResponsiveContainer width=\"90%\">\r\n            <BarChart\r\n              height={300}\r\n              data={temp}\r\n              margin={{\r\n                top: 20, left: 0, bottom: 5, right: 0\r\n              }}\r\n              layout=\"horizontal\"\r\n            >\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis padding={{ left: 5, right: 5 }} dataKey=\"genotype\" type={\"category\"} interval={dimensions.width < 1700 ? 1 : 0} tick={{ fontSize: 14 }} />\r\n              <YAxis domain={[0, 100]} type={\"number\"} allowDecimals={false} width={70} allowDataOverflow={true}>\r\n                <Label angle={-90} position='insideLeft' className=\"RDWAG-label\" offset={6}>\r\n                  % Genomes\r\n                </Label>\r\n              </YAxis>\r\n              {temp.length > 0 && (<Brush dataKey=\"genotype\" height={20} stroke={\"rgb(31, 187, 211)\"} />)}\r\n\r\n              <Legend\r\n                content={(props) => {\r\n                  const { payload } = props;\r\n                  return (\r\n                    <div className=\"RDWAG-legend\">\r\n                      <div className=\"RDWAG-legend-div\" style={{ justifyContent: amrClassFilter === \"Ampicillin\" || amrClassFilter === \"Fluoroquinolones (CipI/R)\" ? \"\" : \"space-between\" }}>\r\n                        {payload.map((entry, index) => {\r\n                          const { dataKey, color } = entry\r\n                          return (\r\n                            <div key={index + \"RDWAG-legend-2\"} className=\"RDWAG-legend-info\">\r\n                              <div className=\"RDWAG-legend-info-circle\" style={{ backgroundColor: color }} />\r\n                              <span className=\"RDWAG-legend-info-name\">{dataKey}</span>\r\n                            </div>\r\n                          )\r\n                        })}\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                }}\r\n              />\r\n\r\n              {amrClassChartTooltip()}\r\n              {info.bars.map((item, i) => {\r\n                return (\r\n                  <Bar key={i + \"RDWAG_P\"} dataKey={item[0]} fill={item[1]} stackId=\"a\" barSize={30} />\r\n                )\r\n              })}\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        )\r\n      }\r\n    }\r\n\r\n    const plotAmrClassChart = () => {\r\n      switch (amrClassFilter) {\r\n        case 'Azithromycin':\r\n          return (armClassFilterComponent({\r\n            left: -5, fontsize: 14, strokeWidth: 1, width: null, bars: [\r\n              ['ereA', \"#9e9ac8\"],\r\n              ['acrB_R717Q', \"#addd8e\"],\r\n              ['acrB_R717L', \"#FBCFE5\"],\r\n              ['ereA + acrB_R717Q', \"#FFEC78\"],\r\n              ['ereA + acrB_R717L', \"#66c2a4\"],\r\n              ['acrB_R717Q + acrB_R717L', \"#fd8d3c\"],\r\n              ['ereA + acrB_R717Q + acrB_R717L', \"#6baed6\"],\r\n              ['None', \"#B9B9B9\"]\r\n            ]\r\n          }))\r\n        case 'Fluoroquinolones (CipI/R)':\r\n          return (armClassFilterComponent({\r\n            left: 10, fontsize: 14, strokeWidth: 0.5, width: 3, bars: [\r\n              ['3_QRDR + qnrS (CipR)', \"black\"],\r\n              ['3_QRDR + qnrB (CipR)', \"#660000\"],\r\n              ['3_QRDR (CipR)', \"#cc0000\"],\r\n              ['2_QRDR + qnrS (CipR)', \"#ff6666\"],\r\n              ['2_QRDR + qnrB (CipR)', \"#ffcccc\"],\r\n              ['2_QRDR (CipI)', \"#ff6600\"],\r\n              ['1_QRDR + qnrS (CipR)', \"#660066\"],\r\n              ['1_QRDR + qnrB (CipR)', \"#993399\"],\r\n              ['1_QRDR (CipI)', \"#ffcc00\"],\r\n              ['0_QRDR + qnrS (CipI)', \"#009999\"],\r\n              ['0_QRDR + qnrB (CipI)', \"#0066cc\"],\r\n              ['None (CipS)', \"#B9B9B9\"]]\r\n          }))\r\n        case 'Chloramphenicol':\r\n          return (armClassFilterComponent({\r\n            left: 3, fontsize: 14, strokeWidth: 1, width: null, bars: [\r\n              ['cmlA', \"#addd8e\"],\r\n              ['catA1', \"#9e9ac8\"],\r\n              [\"catA1 + cmlA\", \"#FFEC78\"],\r\n              ['None', \"#B9B9B9\"]\r\n            ]\r\n          }))\r\n        case 'Ampicillin':\r\n          return (armClassFilterComponent({\r\n            left: 3, fontsize: 14, strokeWidth: 1, width: null, bars: [\r\n              ['blaTEM-1D', \"#addd8e\"],\r\n              ['None', \"#B9B9B9\"]]\r\n          }))\r\n        case 'Sulphonamides':\r\n          return (armClassFilterComponent({\r\n            left: 3, fontsize: 14, strokeWidth: 1, width: null, bars: [\r\n              ['sul2', \"#ffeda0\"],\r\n              ['sul1', \"#fd8d3c\"],\r\n              ['sul1 + sul2', \"#B4DD70\"],\r\n              ['None', \"#B9B9B9\"]]\r\n          }))\r\n        case 'Trimethoprim':\r\n          return (armClassFilterComponent({\r\n            left: 3, fontsize: 14, strokeWidth: 0.5, width: 3, bars: [\r\n              ['dfrA1', \"#B4DD70\"],\r\n              ['dfrA5', \"#D7AEF7\"],\r\n              ['dfrA7', \"#FFEC78\"],\r\n              ['dfrA14', \"#6baed6\"],\r\n              ['dfrA7 + dfrA14', \"#fd8d3c\"],\r\n              ['dfrA15', \"#FBCFE5\"],\r\n              ['dfrA17', \"#FCB469\"],\r\n              ['dfrA18', \"#66c2a4\"],\r\n              ['None', \"#B9B9B9\"]]\r\n          }))\r\n        case 'Co-trimoxazole':\r\n          let cotrim = [\"dfrA1\", \"dfrA5\", \"dfrA7\", \"dfrA14\", \"dfrA15\", \"dfrA17\", \"dfrA18\"];\r\n          let colors1 = [\"#ffeda0\", \"#fd8d3c\", \"#addd8e\", \"#9e9ac8\", \"#6baed6\", \"#7a0177\", \"#54278f\"]\r\n          let colors2 = [\"#a50f15\", \"#6a5acd\", \"#f1b6da\", \"#fb8072\", \"#4682b4\", \"#2e8b57\", \"#98fb98\"]\r\n          let colors3 = [\"#fcc5c0\", \"#bcbddc\", \"#fdd0a2\", \"#c994c7\", \"#9ecae1\", \"#a8ddb5\", \"#fc9272\"]\r\n          let bars = [['None', \"#B9B9B9\"]]\r\n\r\n          for (const index in cotrim) {\r\n            bars.push([cotrim[index] + \" + sul1\", colors1[index]])\r\n            bars.push([cotrim[index] + \" + sul2\", colors2[index]])\r\n            bars.push([cotrim[index] + \" + sul1 + sul2\", colors3[index]])\r\n          }\r\n          bars.push([\"dfrA7 + dfrA14 + sul1 + sul2\", \"#F54CEB\"])\r\n\r\n          return (armClassFilterComponent({\r\n            left: 3, fontsize: 14, strokeWidth: 0.5, width: 3, bars: bars\r\n          }))\r\n        case 'Tetracyclines':\r\n          return (armClassFilterComponent({\r\n            left: 3, fontsize: 14, strokeWidth: 1, width: null, bars: [\r\n              ['tetA(D)', getColorForTetracyclines('tetA(D)')],\r\n              ['tetA(C)', getColorForTetracyclines('tetA(C)')],\r\n              ['tetA(B)', getColorForTetracyclines('tetA(B)')],\r\n              ['tetA(A)', getColorForTetracyclines('tetA(A)')],\r\n              ['None', \"#B9B9B9\"]\r\n            ]\r\n          }))\r\n        case 'ESBL':\r\n          return (armClassFilterComponent({\r\n            left: 3, fontsize: 14, strokeWidth: 1, width: null, bars: [\r\n              ['blaSHV-12', \"#addd8e\"],\r\n              ['blaOXA-7', \"#9e9ac8\"],\r\n              ['blaCTX-M-15', \"#6baed6\"],\r\n              ['blaCTX-M-55', \"#FBCFE5\"],\r\n              ['None', \"#B9B9B9\"]]\r\n          }))\r\n        default:\r\n          return null;\r\n      }\r\n    }\r\n    setPlotAmrClassChart(plotAmrClassChart)\r\n  }, [RDWAGDataviewFilter, amrClassChartData, amrClassFilter, dimensions.width, hoverColor])\r\n\r\n  // Drug Resistance Trends graph\r\n  useEffect(() => {\r\n    const plotDrugTrendsChart = () => {\r\n      let dataDRT = drugTrendsChartData\r\n      for (const index in dataDRT) {\r\n        for (const i in trendClassesForFilter) {\r\n          const TCFF = trendClassesForFilter[i]\r\n          if (!((TCFF.toString()) in dataDRT[index])) {\r\n            dataDRT[index][TCFF] = 0\r\n            dataDRT[index].drugsPercentage[TCFF] = 0\r\n          }\r\n        }\r\n      }\r\n\r\n      return (\r\n        <ResponsiveContainer width=\"90%\">\r\n          <LineChart\r\n            data={dataDRT}\r\n            margin={{\r\n              top: 20, bottom: 5, right: 0, left: -5\r\n            }}\r\n            height={582}\r\n          >\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis tickCount={20} allowDecimals={false} type=\"number\" padding={{ left: 20, right: 20 }} dataKey=\"name\" domain={['dataMin', 'dataMax']} interval={\"preserveStartEnd\"} tick={{ fontSize: 14 }} />\r\n            <YAxis tickCount={6} padding={{ top: 20, bottom: 20 }} allowDecimals={false} width={70}>\r\n              <Label angle={-90} position='insideLeft' className=\"DRT-label\" offset={12}>\r\n                Resistant (%)\r\n              </Label>\r\n            </YAxis>\r\n            {drugTrendsChartData.length > 0 && (\r\n              <Brush dataKey=\"name\" height={20} stroke={\"rgb(31, 187, 211)\"} />\r\n            )}\r\n\r\n            <Legend\r\n              content={(props) => {\r\n                const { payload } = props;\r\n                return (\r\n                  <div className=\"DRT-legend\">\r\n                    <div className=\"DRT-legend-div\" style={{ justifyContent: dimensions.width < 1585 ? \"space-between\" : \"\" }}>\r\n                      {payload.map((entry, index) => {\r\n                        const { dataKey, color } = entry\r\n                        return (\r\n                          <div key={index + \"DRT-legend\"} className=\"DRT-legend-info\">\r\n                            <div className=\"DRT-legend-info-circle\" style={{ backgroundColor: color }} />\r\n                            <span className=\"DRT-legend-info-name\">{dataKey}</span>\r\n                          </div>\r\n                        )\r\n                      })}\r\n                    </div>\r\n                  </div>\r\n                );\r\n              }}\r\n            />\r\n            {tooltip([160, 275, 255], dimensions.width < mobile ? 250 : 325, \"50%\", true, { zIndex: 100, top: 175, right: 0 }, true, 1)}\r\n            {trendClassesForFilter.map((item, i) => (<Line key={i + \"DRTLine\"} dataKey={item} strokeWidth={2} stroke={getColorForDrug(item)} connectNulls type=\"monotone\" activeDot={timeInitial === timeFinal ? true : false} />))}\r\n          </LineChart>\r\n        </ResponsiveContainer>\r\n      )\r\n    }\r\n\r\n    setPlotDrugTrendsChart(plotDrugTrendsChart)\r\n  }, [dimensions.width, drugTrendsChartData, mobile, timeFinal, timeInitial, tooltip, trendClassesForFilter])\r\n\r\n  // Resistance frequencies within genotypes graph\r\n  useEffect(() => {\r\n    const plotDrugsAndGenotypesChart = () => {\r\n      let aux = JSON.parse(JSON.stringify(drugsAndGenotypesChartData))\r\n\r\n      const aux2 = []\r\n      for (let index = 0; index < aux.length; index++) {\r\n        const percentage = (aux[index].total / aux[index].totalS) * 100\r\n        aux2.push({ value: aux[index].name, label: aux[index].name + ` (total N=${aux[index].totalS}, ${Math.round(percentage * 100) / 100}% resistant)`, id: index })\r\n      }\r\n      setRFWGDropdownOptions(aux2)\r\n\r\n      const values = RFWGValues.map(x => x.value)\r\n      aux = aux.filter(x => values.includes(x.name))\r\n\r\n      if (RFWGFilter === 1) {\r\n        return (\r\n          <ResponsiveContainer width=\"90%\">\r\n            <BarChart\r\n              data={aux}\r\n              margin={{\r\n                top: 20, left: -5, bottom: 5, right: 0\r\n              }}\r\n              height={582}\r\n            >\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis padding={{ left: 5, right: 5 }} dataKey=\"name\" interval={dimensions.width < mobile ? 1 : 0} tick={{ fontSize: 14 }} />\r\n              <YAxis allowDecimals={false} width={71}>\r\n                <Label angle={-90} position='insideLeft' className=\"RFWG-label\" offset={12}>\r\n                  Number of genomes\r\n                </Label>\r\n              </YAxis>\r\n              {drugsAndGenotypesChartData.length > 0 && (\r\n                <Brush dataKey=\"name\" height={20} stroke={\"rgb(31, 187, 211)\"} />\r\n              )}\r\n\r\n              <Legend\r\n                content={(props) => {\r\n                  const { payload } = props;\r\n                  return (\r\n                    <div className=\"RFWG-legend\">\r\n                      <div className=\"RFWG-legend-div\" style={{ justifyContent: dimensions.width < 1585 ? \"space-between\" : \"\" }}>\r\n                        {payload.map((entry, index) => {\r\n                          const { dataKey, color } = entry\r\n                          return (\r\n                            <div key={index + \"RFWG-legend\"} className=\"RFWG-legend-info\">\r\n                              <div className=\"RFWG-legend-info-circle\" style={{ backgroundColor: color }} />\r\n                              <span className=\"RFWG-legend-info-name\">{dataKey}</span>\r\n                            </div>\r\n                          )\r\n                        })}\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                }}\r\n              />\r\n              {tooltip([155, 270, 270], dimensions.width < mobile ? 250 : 325, \"50%\", false, { zIndex: 100, top: 160 }, false, 0)}\r\n              {drtClassesForFilter.map((item, i) => (<Bar key={i + \"DRT_Q\"} dataKey={item} fill={getColorForDrug(item)} />))}\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        )\r\n      } else {\r\n        const teste = JSON.parse(JSON.stringify(aux))\r\n        teste.forEach(element => {\r\n          element[\"quantities\"] = {}\r\n          const keys = Object.keys(element);\r\n          for (const key in keys) {\r\n            if (!['name', 'total', 'quantities', 'totalS'].includes(keys[key])) {\r\n              let aux3 = keys[key]\r\n              element.quantities[aux3] = element[aux3]\r\n              element[aux3] = (element[aux3] * 100) / element.totalS\r\n            }\r\n            element.quantities['totalS'] = element.totalS\r\n          }\r\n        });\r\n\r\n        return (\r\n          <ResponsiveContainer width=\"90%\" height=\"100%\">\r\n            <BarChart\r\n              data={teste}\r\n              margin={{\r\n                top: 20, left: -5, bottom: 5, right: 0\r\n              }}\r\n            >\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis padding={{ left: 5, right: 5 }} dataKey=\"name\" interval={dimensions.width < mobile ? 1 : 0} tick={{ fontSize: 14 }} />\r\n              <YAxis domain={[0, 100]} allowDecimals={false} width={70}>\r\n                <Label angle={-90} position='insideLeft' className=\"RFWG-label\" offset={12}>\r\n                  Percentage within genotype (%)\r\n                </Label>\r\n              </YAxis>\r\n              {teste.length > 0 && (<Brush dataKey=\"name\" height={20} stroke={\"rgb(31, 187, 211)\"} />)}\r\n\r\n              <Legend\r\n                content={(props) => {\r\n                  const { payload } = props;\r\n                  return (\r\n                    <div className=\"RFWG-legend\">\r\n                      <div className=\"RFWG-legend-div\" style={{ justifyContent: dimensions.width < 1585 ? \"space-between\" : \"\" }}>\r\n                        {payload.map((entry, index) => {\r\n                          const { dataKey, color } = entry\r\n                          return (\r\n                            <div key={index + \"RFWG-legend-2\"} className=\"RFWG-legend-info\">\r\n                              <div className=\"RFWG-legend-info-circle\" style={{ backgroundColor: color }} />\r\n                              <span className=\"RFWG-legend-info-name\">{dataKey}</span>\r\n                            </div>\r\n                          )\r\n                        })}\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                }}\r\n              />\r\n              {tooltip([155, 270, 270], dimensions.width < mobile ? 250 : 325, \"50%\", false, { zIndex: 100, top: 160 }, false, 4)}\r\n              {drtClassesForFilter.map((item, i) => (<Bar key={i + \"DRT_P\"} dataKey={item} fill={getColorForDrug(item)} />))}\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        )\r\n      }\r\n    }\r\n    setPlotDrugsAndGenotypesChart(plotDrugsAndGenotypesChart)\r\n  }, [RFWGFilter, RFWGValues, dimensions.width, drtClassesForFilter, drugsAndGenotypesChartData, mobile, tooltip])\r\n\r\n  // Helper for loading images to the report\r\n  function imgOnLoadPromise(obj) {\r\n    return new Promise((resolve, reject) => {\r\n      obj.onload = () => resolve(obj);\r\n      obj.onerror = reject;\r\n    });\r\n  }\r\n\r\n  // Stop loadings\r\n  const [stopLoading] = useState(() => (index) => {\r\n    switch (index) {\r\n      case 0: setCaptureControlMapInProgress(false)\r\n        break;\r\n      case 1: setCaptureControlChartRFWGInProgress(false)\r\n        break;\r\n      case 2: setCaptureControlChartDRTInProgress(false)\r\n        break;\r\n      case 3: setCaptureControlChartGDInProgress(false)\r\n        break;\r\n      case 4: setCaptureControlChartRFWAGInProgress(false)\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  })\r\n\r\n  // Start loadings\r\n  const [capturePicture] = useState(() => async (id, index, info = {}) => {\r\n    switch (index) {\r\n      case 0:\r\n        setCaptureControlMapInProgress(true)\r\n        setControlMapPosition({ coordinates: [0, 0], zoom: 1 })\r\n        break;\r\n      case 1: setCaptureControlChartRFWGInProgress(true)\r\n        break;\r\n      case 2: setCaptureControlChartDRTInProgress(true)\r\n        break;\r\n      case 3: setCaptureControlChartGDInProgress(true)\r\n        break;\r\n      case 4: setCaptureControlChartRFWAGInProgress(true)\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    const names = [\"Resistance frequencies within genotypes\", \"Drug resistance trends\", \"Genotype distribution\", \"Resistance determinants within genotypes\"]\r\n    const brokenNames = [[\"Resistance frequencies\", \"within genotypes\"], [\"Resistance determinants\", \"within all genotypes\"]]\r\n\r\n    if (index === 5) {\r\n      let ids = [\"RFWG\", \"RFWAG\", \"DRT\", \"GD\"]\r\n\r\n      var doc = new jsPDF({ unit: 'mm', format: 'a4', orientation: 'l' });\r\n\r\n      const IPW = doc.internal.pageSize.getWidth() / 2;\r\n\r\n      let typhinetLogo = new Image();\r\n      typhinetLogo.src = typhinetLogoImg;\r\n      doc.addImage(typhinetLogo, 'PNG', 110, 8, 80, 26)\r\n\r\n      let euFlag = new Image();\r\n      euFlag.src = euFlagImg;\r\n      doc.addImage(euFlag, 'JPG', 237, 148.2, 6, 4)\r\n\r\n      let date = new Date()\r\n      date = moment(date).format(\"ddd MMM DD YYYY HH:mm:ss\")\r\n\r\n      doc.setFontSize(12);\r\n      doc.setTextColor(0, 0, 0);\r\n\r\n      const paragraph1 = `This report was generated at [${formatDate(new Date())}] using TyphiNET (http://typhi.net), a data data visualisation platform that draws genome-derived data on antimicrobial resistance and genotypes from Typhi Pathogenwatch (http://pathogen.watch).`\r\n      const paragraph2 = `TyphiNET data were last updated on Mar 21 2022. For code and further details please see: https://github.com/zadyson/TyphiNET.`\r\n      const paragraph3 = `The genotypes reported here are defined in Dyson & Holt (2021), J. Infect. Dis.`\r\n      const paragraph4 = `Antimicrobial resistance determinants are described in the Typhi Pathogenwatch paper, Argimón et al. 2021, Nat. Commun.`\r\n      const paragraph5 = `Travel-associated cases are attributed to the country of travel, not the country of isolation (see Ingle et al. 2019, PLoS NTDs).`\r\n      const paragraph6 = `TyphiNET presents data aggregated from >100 studies. Individual genome information, including derived genotype and AMR calls, sequence data accession numbers, and source information (PubMedID for citation) can be downloaded as a spreadsheet from the TyphiNET website (http://typhi.net).`\r\n      const paragraph7 = `Studies contributing genomes representing infections originating from ${info.country} have the following PubMed IDs (PMIDs): ${info.PMID.join(', ')}.`\r\n      const paragraph8 = `This project has received funding from the the Wellcome Trust (Open Research Fund, 219692/Z/19/Z) and the  European Union's Horizon 2020 research and innovation programme under the Marie Sklodowska-Curie grant agreement No 845681.`\r\n      doc.setFont(undefined, 'bold')\r\n      doc.text(`TyphiNET report [${formatDate(new Date())}]`, 20, 50, { align: 'justify', maxWidth: 255 })\r\n      doc.setFont(undefined, 'normal')\r\n      doc.text(paragraph1, 20, 65, { align: 'justify', maxWidth: 255 })\r\n      doc.text(paragraph2, 20, 82, { align: 'justify', maxWidth: 255 })\r\n      doc.text(paragraph3, 20, 99, { align: 'justify', maxWidth: 255 })\r\n      doc.text(paragraph4, 20, 106, { align: 'justify', maxWidth: 255 })\r\n      doc.text(paragraph5, 20, 113, { align: 'justify', maxWidth: 255 })\r\n      doc.text(paragraph6, 20, 125, { align: 'justify', maxWidth: 255 })\r\n      doc.text(paragraph8, 20, 147, { align: 'justify', maxWidth: 255 })\r\n      if (info.country !== \"All\") {\r\n        doc.text(paragraph7, 20, 164, { align: 'justify', maxWidth: 255 })\r\n      }\r\n\r\n      doc.line(0, 200, 300, 200)\r\n      doc.setFontSize(10);\r\n      doc.text(`Source: typhi.net [${date}]`, IPW, 206, { align: \"center\" })\r\n\r\n      doc.addPage('a4', 'l')\r\n      doc.setFontSize(25);\r\n      doc.text(\"Global Overview of\", 77, 12);\r\n      doc.setFont(undefined, 'italic')\r\n      doc.text(\"Salmonella\", 154, 12);\r\n      doc.setFont(undefined, 'normal')\r\n      doc.text(\"Typhi\", 200, 12);\r\n\r\n      await svgAsPngUri(document.getElementById('control-map'), { scale: 4, backgroundColor: \"white\", width: 1200, left: -200 })\r\n        .then(async (uri) => {\r\n          let canvas = document.createElement(\"canvas\")\r\n          let ctx = canvas.getContext('2d');\r\n\r\n          let mapImg = document.createElement(\"img\");\r\n          let mapImgPromise = imgOnLoadPromise(mapImg);\r\n          mapImg.src = uri;\r\n          await mapImgPromise;\r\n\r\n          canvas.width = 1400;\r\n          canvas.height = 700;\r\n          ctx.drawImage(mapImg, 0, 0, canvas.width, canvas.height);\r\n          var img = canvas.toDataURL(\"image/png\")\r\n          doc.addImage(img, \"PNG\", 0, 45, 298, 155);\r\n        })\r\n\r\n      let actualMapView = info.mapView\r\n      switch (actualMapView) {\r\n        case \"MDR\":\r\n          actualMapView = \"Multidrug resistant (MDR)\"\r\n          break;\r\n        case \"XDR\":\r\n          actualMapView = \"Extensively drug resistant (XDR)\"\r\n          break;\r\n        case \"Azith\":\r\n          actualMapView = \"Azithromycin resistant\"\r\n          break;\r\n        case \"CipI\":\r\n          actualMapView = \"Ciprofloxacin nonsusceptible (CipI/R)\"\r\n          break;\r\n        case \"CipR\":\r\n          actualMapView = \"Ciprofloxacin resistant (CipR)\"\r\n          break;\r\n        case \"H58 / Non-H58\":\r\n          actualMapView = \"H58 genotype\"\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n\r\n      doc.setFontSize(12);\r\n      const dataset = info.dataset === \"All\" ? 'All (local + travel)' : info.dataset === \"Local\" ? 'Locally isolated' : 'Travel isolates'\r\n\r\n      doc.setFont(undefined, 'bold')\r\n      doc.text(info.mapView, 8, 20);\r\n      doc.setFont(undefined, 'normal')\r\n      doc.text(`Total ${info.actualGenomes} genomes`, 8, 25);\r\n      doc.text(\"Dataset: \" + dataset, 8, 30);\r\n      doc.text(\"Time period: \" + info.actualTimePeriodRange[0] + \" to \" + info.actualTimePeriodRange[1], 8, 35);\r\n      doc.text(\"Country: \" + info.country, 8, 40);\r\n      doc.text(\"Region: \" + info.region, 8, 45);\r\n\r\n      if (info.mapView === 'Dominant Genotype') {\r\n        var img = new Image()\r\n        img.src = \"legends/MapView_DominantGenotype.png\"\r\n        doc.addImage(img, 'PNG', 68, 19, 219, 27)\r\n      } else if (info.mapView === 'No. Samples') {\r\n        var img2 = new Image()\r\n        img2.src = \"legends/MapView_NoSamples.png\"\r\n        doc.addImage(img2, 'PNG', 250, 15, 35, 35)\r\n      } else {\r\n        var img3 = new Image()\r\n        img3.src = \"legends/MapView_Others.png\"\r\n        doc.addImage(img3, 'PNG', 250, 15, 35, 35)\r\n      }\r\n\r\n      doc.line(0, 200, 300, 200)\r\n      doc.setFontSize(10);\r\n      doc.text(`Source: typhi.net [${date}]`, IPW, 206, { align: \"center\" })\r\n\r\n      doc.addPage('a4', 'l')\r\n      const names2 = [\"Resistance frequencies within genotypes\", \"Resistance determinants within genotypes\", \"Drug resistance trends\", \"Genotype distribution\"]\r\n      for (let index = 0; index < ids.length; index++) {\r\n\r\n        let url\r\n        await domtoimage.toJpeg(document.getElementById(ids[index]), { quality: 1, bgcolor: \"white\" })\r\n          .then(function (dataUrl) {\r\n            url = dataUrl\r\n          });\r\n\r\n        let subtitleH = 0\r\n        if (index === 0 || index === 1 || index === 2) {\r\n          subtitleH = 3\r\n        }\r\n        subtitleH += 3\r\n\r\n        doc.addImage(url, \"PNG\", 5, 15 + subtitleH);\r\n\r\n        let imgWidth = jsPDF.API.getImageProperties(url).width\r\n        imgWidth = Math.floor(imgWidth * 0.264583)\r\n        doc.setFontSize(11)\r\n        const texts = [\r\n          \" \",\r\n          \" \",\r\n          \" \",\r\n          \" \"\r\n        ]\r\n        let spaceBetween = -4\r\n        if (dimensions.width < 1750) {\r\n          spaceBetween = 13\r\n        }\r\n\r\n        let drugs = []\r\n        for (let i = 0; i < info.drugs.length; i++) {\r\n          drugs.push(info.drugs[i].value)\r\n        }\r\n        if (drugs.length === 0) {\r\n          drugs.push('None')\r\n        }\r\n\r\n        doc.text(texts[index], imgWidth + spaceBetween, 23 + subtitleH, { align: 'justify', maxWidth: 50 })\r\n\r\n        doc.setFontSize(14)\r\n        if (index === 1) {\r\n          doc.text(names2[index] + ' : ' + info.amrClassFilter, 23, 10)\r\n        } else {\r\n          doc.text(names2[index], 23, 10)\r\n        }\r\n        doc.setFontSize(9)\r\n\r\n        if (index === 0) {\r\n          doc.text(`Top Genotypes (up to ${info.RFWGCount})`, 23, 15)\r\n        }\r\n        if (index === 1) {\r\n          doc.text(\"Top Genotypes (up to 10)\", 23, 15)\r\n        }\r\n        if (index === 2) {\r\n          doc.text(\"Data are plotted for years with N >= 10 genomes\", 23, 15)\r\n        }\r\n\r\n        doc.setFontSize(12)\r\n        doc.text(`Total ${info.actualGenomes} genomes`, 230, 30);\r\n        doc.text(\"Dataset: \" + dataset, 230, 35);\r\n        doc.text(\"Time period: \" + info.actualTimePeriodRange[0] + \" to \" + info.actualTimePeriodRange[1], 230, 40);\r\n        doc.text(\"Country: \" + info.country, 230, 45);\r\n        doc.text(\"Region: \" + info.region, 230, 50);\r\n\r\n        if (index === 3) {\r\n          doc.setFillColor(255, 255, 255);\r\n          doc.rect(22, info.dimensions.width < info.desktop ? 120 : 110, 300, 100, 'F');\r\n        } else if (index === 1) {\r\n          doc.setFillColor(255, 255, 255);\r\n          doc.rect(22, 113, 300, 100, 'F');\r\n        }\r\n\r\n        if (index === 1) {\r\n          var img4 = new Image()\r\n          if (info.amrClassFilter === \"Fluoroquinolones (CipI/R)\") {\r\n            img4.src = \"legends/Fluoroquinolones (CipI-R).png\"\r\n          } else {\r\n            img4.src = \"legends/\" + info.amrClassFilter + \".png\"\r\n          }\r\n          doc.addImage(img4, 'PNG', 22, 107 + subtitleH)\r\n        } else if (index === 3) {\r\n          var img5 = new Image()\r\n          img5.src = \"legends/Genotype_Distribution.png\"\r\n          doc.addImage(img5, 'PNG', 22, (info.dimensions.width < info.desktop ? 115 : 108) + subtitleH)\r\n        }\r\n        doc.line(0, 200, 300, 200)\r\n        doc.setFontSize(10);\r\n        doc.text(`Source: typhi.net [${date}]`, IPW, 206, { align: \"center\" })\r\n        if (index < ids.length - 1) {\r\n          doc.addPage('a4', 'l')\r\n        }\r\n      }\r\n\r\n      doc.save(\"TyphiNET - Report.pdf\");\r\n      setCaptureReportInProgress(false);\r\n\r\n    } else if (index !== 0) {\r\n\r\n      let graph = document.getElementById(id)\r\n      let canvas = document.createElement(\"canvas\")\r\n      let ctx = canvas.getContext('2d');\r\n      let graphImg = document.createElement(\"img\");\r\n      let graphImgPromise = imgOnLoadPromise(graphImg);\r\n\r\n      await domtoimage.toPng(graph, { quality: 0.1, bgcolor: \"white\" })\r\n        .then(function (dataUrl) {\r\n          graphImg.src = dataUrl;\r\n        });\r\n\r\n      let cHeight = 20\r\n      let logoHeight = 100\r\n      let legendHeight = 0\r\n      let filterHeight = 80\r\n      let subtitleHeight = 0\r\n      if (id === \"RFWG\" || id === \"RFWAG\" || id === \"DRT\") {\r\n        cHeight += 20\r\n        subtitleHeight = 20\r\n      }\r\n      let imgHeight = graphImg.height\r\n      if (id === \"RFWAG\" || id === \"GD\") {\r\n        imgHeight -= 200\r\n      }\r\n\r\n      if (id === \"GD\" || id === \"RFWAG\") legendHeight = 40\r\n\r\n      let imgWidth = graphImg.width\r\n      if (id === \"RFWAG\") {\r\n        imgWidth += 130\r\n        if (info.amrClassFilter === \"Azithromycin\") {\r\n          imgWidth += 100\r\n        }\r\n        else if (info.amrClassFilter === \"Co-trimoxazole\") {\r\n          imgWidth += 195\r\n        }\r\n        else if (info.amrClassFilter === \"Fluoroquinolones (CipI/R)\") {\r\n          imgWidth += 250\r\n        }\r\n      } else if (id === \"GD\") {\r\n        imgWidth += 370\r\n      }\r\n\r\n      await graphImgPromise;\r\n      canvas.width = imgWidth;\r\n\r\n      canvas.height = imgHeight + cHeight + logoHeight + legendHeight + filterHeight + subtitleHeight + 60;\r\n      ctx.fillStyle = \"white\";\r\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n      ctx.font = \"18px Montserrat\"\r\n      ctx.fillStyle = \"black\";\r\n      ctx.textAlign = \"center\";\r\n\r\n      ctx.drawImage(graphImg, 10, cHeight + logoHeight + subtitleHeight);\r\n      ctx.fillStyle = \"white\";\r\n      ctx.fillRect(60, canvas.height - 130, 800, 300);\r\n      ctx.fillStyle = \"black\";\r\n\r\n      if (id === \"RFWG\") {\r\n        ctx.fillText(brokenNames[0][0], canvas.width / 2, 10 + logoHeight)\r\n        ctx.fillText(brokenNames[0][1], canvas.width / 2, 30 + logoHeight)\r\n        ctx.font = \"12px Montserrat\"\r\n        ctx.fillText(`Top Genotypes (up to ${info.RFWGCount})`, canvas.width / 2, 32 + logoHeight + subtitleHeight)\r\n      } else if (id === \"RFWAG\") {\r\n        ctx.fillText(brokenNames[1][0], canvas.width / 2, 10 + logoHeight)\r\n        ctx.fillText(brokenNames[1][1], canvas.width / 2, 30 + logoHeight)\r\n        ctx.font = \"12px Montserrat\"\r\n        ctx.fillText(\"Top Genotypes (up to 10)\", canvas.width / 2, 32 + logoHeight + subtitleHeight)\r\n      } else if (id === \"DRT\") {\r\n        ctx.fillText(names[index - 1], canvas.width / 2, 10 + logoHeight)\r\n        ctx.font = \"12px Montserrat\"\r\n        ctx.fillText(\"Data are plotted for years with N ≥ 10 genomes\", canvas.width / 2, 32 + logoHeight + subtitleHeight)\r\n      } else {\r\n        ctx.fillText(names[index - 1], canvas.width / 2, 10 + logoHeight)\r\n      }\r\n\r\n      if (id === \"RFWAG\" || id === \"GD\") {\r\n        let legendImg = document.createElement(\"img\")\r\n        let legendImgPromise = imgOnLoadPromise(legendImg)\r\n        if (id === \"RFWAG\") {\r\n          if (info.amrClassFilter === \"Fluoroquinolones (CipI/R)\") {\r\n            legendImg.src = \"legends/Fluoroquinolones (CipI-R).png\";\r\n          } else {\r\n            if (info.amrClassFilter === \"Trimethoprim\" || info.amrClassFilter === \"Co-trimoxazole\") {\r\n              info.amrClassFilter += \"2\"\r\n            }\r\n            legendImg.src = \"legends/\" + info.amrClassFilter + \".png\";\r\n          }\r\n\r\n        } else {\r\n          legendImg.src = \"legends/Genotype_Distribution_2.png\";\r\n        }\r\n        await legendImgPromise;\r\n\r\n        ctx.drawImage(legendImg, graphImg.width, logoHeight + subtitleHeight + 12 + cHeight);\r\n      }\r\n\r\n      let typhinetLogo = document.createElement(\"img\");\r\n      let typhinetLogoPromise = imgOnLoadPromise(typhinetLogo);\r\n      typhinetLogo.src = typhinetLogoImg;\r\n      await typhinetLogoPromise;\r\n      ctx.drawImage(typhinetLogo, 10, 10, 170, 55);\r\n\r\n      ctx.fillStyle = \"black\"\r\n      ctx.font = \"14px Montserrat\"\r\n      ctx.textAlign = \"start\"\r\n      ctx.fillText(\"Dataset: \" + info.dataset, 10, canvas.height - 92)\r\n      ctx.fillText(\"Time period: \" + info.actualTimePeriodRange[0] + \" to \" + info.actualTimePeriodRange[1], 10, canvas.height - 70)\r\n      ctx.fillText(\"Country: \" + info.country, 10, canvas.height - 48)\r\n      ctx.fillText(\"Region: \" + info.region, 10, canvas.height - 26)\r\n\r\n      const base64 = canvas.toDataURL();\r\n      stopLoading(index)\r\n      download(base64, \"TyphiNET - \" + names[index - 1] + \".png\");\r\n    } else {\r\n      svgAsPngUri(document.getElementById(id), { scale: 4, backgroundColor: \"white\", width: 1200, left: -200 })\r\n        .then(async (uri) => {\r\n\r\n          let canvas = document.createElement(\"canvas\")\r\n          let ctx = canvas.getContext('2d');\r\n\r\n          let mapImg = document.createElement(\"img\");\r\n          let mapImgPromise = imgOnLoadPromise(mapImg);\r\n          mapImg.src = uri;\r\n          await mapImgPromise;\r\n\r\n          let cWidth = 3600\r\n          let cHeight = 1800\r\n          let textHeight = 240\r\n          let legendHeight = 0\r\n          if (info.mapView === 'Dominant Genotype') {\r\n            legendHeight = 440\r\n          }\r\n\r\n          canvas.width = cWidth;\r\n          canvas.height = cHeight + textHeight + legendHeight;\r\n\r\n          ctx.fillStyle = \"white\";\r\n          ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n\r\n          ctx.font = \"bolder 50px Montserrat\"\r\n          ctx.fillStyle = \"black\";\r\n          ctx.textAlign = \"center\";\r\n          ctx.fillText(\"Global Overview of Salmonella Typhi\", canvas.width / 2, 80)\r\n          ctx.font = \"35px Montserrat\"\r\n          ctx.textAlign = \"center\";\r\n\r\n          let actualMapView = info.mapView\r\n          switch (actualMapView) {\r\n            case \"MDR\":\r\n              actualMapView = \"Multidrug resistant (MDR)\"\r\n              break;\r\n            case \"XDR\":\r\n              actualMapView = \"Extensively drug resistant (XDR)\"\r\n              break;\r\n            case \"Azith\":\r\n              actualMapView = \"Azithromycin resistant\"\r\n              break;\r\n            case \"CipI\":\r\n              actualMapView = \"Ciprofloxacin nonsusceptible (CipI/R)\"\r\n              break;\r\n            case \"CipR\":\r\n              actualMapView = \"Ciprofloxacin resistant (CipR)\"\r\n              break;\r\n            case \"H58 / Non-H58\":\r\n              actualMapView = \"H58 genotype\"\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n\r\n          ctx.fillText(\"Map view: \" + actualMapView, canvas.width / 2, 140)\r\n          ctx.fillText(\"Dataset: \" + info.dataset, canvas.width / 2, 190)\r\n          ctx.fillText(\"Time period: \" + info.actualTimePeriodRange[0] + \" to \" + info.actualTimePeriodRange[1], canvas.width / 2, 240)\r\n\r\n          ctx.drawImage(mapImg, 0, textHeight, canvas.width, cHeight);\r\n\r\n          let legendImg = document.createElement(\"img\");\r\n          let legendImgoPromise = imgOnLoadPromise(legendImg);\r\n          let h\r\n          let w\r\n          if (info.mapView === 'Dominant Genotype') {\r\n            legendImg.src = \"legends/MapView_DominantGenotype.png\";\r\n            await legendImgoPromise;\r\n            let centerWidth = (canvas.width - 1731) / 2\r\n            ctx.drawImage(legendImg, centerWidth, canvas.height - legendHeight - 20, 1731, 420);\r\n          } else if (info.mapView === 'No. Samples') {\r\n            legendImg.src = \"legends/MapView_NoSamples.png\";\r\n            await legendImgoPromise;\r\n            h = 350\r\n            w = 310\r\n            ctx.drawImage(legendImg, canvas.width - w - 15, canvas.height - h - 10, w, h);\r\n          } else {\r\n            legendImg.src = \"legends/MapView_Others.png\";\r\n            await legendImgoPromise;\r\n            h = 350\r\n            w = 280\r\n            ctx.drawImage(legendImg, canvas.width - w - 25, canvas.height - h - 20, w, h);\r\n          }\r\n\r\n          let typhinetLogo = document.createElement(\"img\");\r\n          let typhinetLogoPromise = imgOnLoadPromise(typhinetLogo);\r\n          typhinetLogo.src = typhinetLogoImg;\r\n          await typhinetLogoPromise;\r\n          ctx.drawImage(typhinetLogo, 25, 25, 500, 200);\r\n\r\n          const base64 = canvas.toDataURL();\r\n          stopLoading(index)\r\n          download(base64, 'TyphiNET - Global Overview Salmonella Typhi.png');\r\n        });\r\n    }\r\n\r\n  })\r\n\r\n  // Download spreadsheet\r\n  const [dowloadBaseSpreadsheet] = useState(() => () => {\r\n    axios.get(`${API_ENDPOINT}file/download`)\r\n      .then((res) => {\r\n        let cols_to_remove = ['azith_pred_pheno', 'cip_pred_pheno', 'dcs_category', 'amr_category', 'num_qrdr', 'num_acrb', 'ESBL_category', 'chloramphenicol_category', 'tetracycline_category', 'cip_pheno_qrdr_gene', 'dcs_mechanisms', 'num_amr_genes', 'dfra_any', 'sul_any', 'co_trim', 'GENOTYPE_SIMPLE', 'h58_genotypes']\r\n        let indexes = []\r\n        let csv = res.data.split('\\n')\r\n        let lines = []\r\n\r\n        for (let index = 0; index < csv.length; index++) {\r\n          let line = csv[index].split(',')\r\n          if (line[1] !== '-' && line[2] !== '-') {\r\n            lines.push(line)\r\n          }\r\n        }\r\n\r\n        for (let index = 0; index < cols_to_remove.length; index++) {\r\n          let currentIndex = lines[0].indexOf(cols_to_remove[index])\r\n          indexes.push(currentIndex)\r\n        }\r\n        indexes.sort()\r\n        indexes.reverse()\r\n\r\n        let newLines = []\r\n        for (let j = 0; j < lines.length; j++) {\r\n          let aux = []\r\n          for (let i = 0; i < lines[j].length; i++) {\r\n            if (!indexes.includes(i)) {\r\n              aux.push(lines[j][i])\r\n            }\r\n          }\r\n          newLines.push(aux)\r\n        }\r\n\r\n        let newCSV = \"\"\r\n        for (let i = 0; i < newLines.length; i++) {\r\n          let aux = \"\"\r\n          for (let index = 0; index < newLines[i].length; index++) {\r\n            aux += newLines[i][index]\r\n            if (index !== newLines[i].length - 1) {\r\n              aux += \",\"\r\n            }\r\n          }\r\n          if (i !== newLines.length - 1) {\r\n            aux += \"\\n\"\r\n          }\r\n          newCSV += aux\r\n        }\r\n\r\n        download(newCSV, 'TyphiNET_Database.csv');\r\n      })\r\n  })\r\n\r\n  const [dowloadCurrentDataSpreadsheet] = useState(() => () => {\r\n\r\n  })\r\n\r\n  // Component for map view's options\r\n  const generateMapLegendOptions = () => {\r\n    // let percentageSteps2 = ['1', '2', '10', '50']\r\n    let percentageSteps = ['1', '3', '11', '51']\r\n    const otherViews = ['CipI', 'CipR', 'Azith', 'Sensitive to all drugs', 'MDR', 'XDR']\r\n\r\n    if (otherViews.includes(mapView)) {\r\n      return (\r\n        <>\r\n          <div className=\"samples-info\">\r\n            <div className=\"color samples-info-insufficient-data\" />\r\n            <span>Insufficient data</span>\r\n          </div>\r\n          <div className=\"samples-info\">\r\n            <div className=\"color samples-info-zero-percent\" />\r\n            <span>0%</span>\r\n          </div>\r\n          {percentageSteps.map((n) => {\r\n            return (\r\n              <div key={n} className=\"samples-info\">\r\n                <div className=\"color\" style={{ backgroundColor: mapRedColorScale(n) }} />\r\n                {n === \"1\" && (<span>{'1 - 2'}%</span>)}\r\n                {n === \"3\" && (<span>{'3 - 10'}%</span>)}\r\n                {n === \"11\" && (<span>{'11 - 50'}%</span>)}\r\n                {n === \"51\" && (<span>{'51 - 100'}%</span>)}\r\n              </div>\r\n            )\r\n          })}\r\n        </>\r\n      )\r\n    }\r\n\r\n    switch (mapView) {\r\n      case 'No. Samples':\r\n        let legends = ['1 - 9', '10 - 19', '20 - 99', '100 - 299', '>= 300']\r\n        let aux = [1, 10, 20, 100, 300]\r\n        return (\r\n          <>\r\n            <div className=\"samples-info\">\r\n              <div className=\"color samples-info-insufficient-data\" />\r\n              <span>Insufficient data</span>\r\n            </div>\r\n            {[...Array(5).keys()].map((n, i) => {\r\n              return (\r\n                <div key={n + i} className=\"samples-info\">\r\n                  <div className=\"color\" style={{ backgroundColor: mapSamplesColorScale(aux[n]) }} />\r\n                  <span>{legends[n]}</span>\r\n                </div>\r\n              )\r\n            })}\r\n          </>\r\n        )\r\n      case 'Dominant Genotype':\r\n        return (\r\n          <div className=\"map-legend-DG\">\r\n            <div className=\"samples-info\">\r\n              <div className=\"color samples-info-insufficient-data\" />\r\n              <span>Insufficient data</span>\r\n            </div>\r\n            {genotypes.map((g, n) => {\r\n              return (\r\n                <div key={n + \"DG\"} className=\"samples-info\">\r\n                  <div className=\"color\" style={{ backgroundColor: getColorForGenotype(g) }} />\r\n                  <span>{g}</span>\r\n                </div>\r\n              )\r\n            })}\r\n          </div>\r\n        )\r\n      case 'H58 / Non-H58':\r\n        return (\r\n          <>\r\n            <div className=\"samples-info\">\r\n              <div className=\"color samples-info-insufficient-data\" />\r\n              <span>Insufficient data</span>\r\n            </div>\r\n            <div className=\"samples-info\">\r\n              <div className=\"color samples-info-zero-percent\" />\r\n              <span>0%</span>\r\n            </div>\r\n            {percentageSteps.map((g, n) => {\r\n              return (\r\n                <div key={n + \"H58\"} className=\"samples-info\">\r\n                  <div className=\"color\" style={{ backgroundColor: mapRedColorScale(g) }} />\r\n                  {g === \"1\" && (<span>{'1 - 2'}%</span>)}\r\n                  {g === \"3\" && (<span>{'3 - 10'}%</span>)}\r\n                  {g === \"11\" && (<span>{'11 - 50'}%</span>)}\r\n                  {g === \"51\" && (<span>{'51 - 100'}%</span>)}\r\n                </div>\r\n              )\r\n            })}\r\n          </>\r\n        )\r\n      default:\r\n        return null\r\n    }\r\n  }\r\n\r\n  // Map upper right buttons component\r\n  const renderMapLegend = () => {\r\n    const mapLegends = [\r\n      ['MDR', 'Multidrug resistant (MDR)'], ['XDR', 'Extensively drug resistant (XDR)'], ['Azith', 'Azithromycin resistant'],\r\n      ['CipI', 'Ciprofloxacin nonsusceptible (CipI/R)'], ['CipR', 'Ciprofloxacin resistant (CipR)'], ['Sensitive to all drugs', 'Sensitive to all drugs'],\r\n      ['Dominant Genotype', 'Dominant Genotype'], ['H58 / Non-H58', 'H58 genotype'], ['No. Samples', 'No. Samples']\r\n    ]\r\n    return (\r\n      <div className=\"map-legend\">\r\n        <FormControl fullWidth className={classes.formControlSelect}>\r\n          <div className=\"map-legend-formcontrol-div map-legend-formcontrol-div-pad\">\r\n            <div className=\"map-legend-formcontrol-label\">Select map view</div>\r\n            <IconTooltip\r\n              title={<div className={classes.tooltipTitle}>Percentage frequency data is shown only for countries with N≥20 genomes</div>}\r\n              placement=\"top\"\r\n            >\r\n              <IconButton className={classes.tooltipButton}>\r\n                <FontAwesomeIcon icon={faInfoCircle} size=\"xs\" className={classes.tooltipIcon} />\r\n              </IconButton>\r\n            </IconTooltip>\r\n          </div>\r\n          <Select\r\n            value={mapView}\r\n            onChange={evt => setMapView(evt.target.value)}\r\n            fullWidth\r\n            className={classes.select}\r\n          >\r\n            {mapLegends.map((n, i) => {\r\n              return (\r\n                <MenuItem key={i + \"mapview\"} className={classes.select} value={n[0]}>\r\n                  {n[1]}\r\n                </MenuItem>\r\n              )\r\n            })}\r\n          </Select>\r\n        </FormControl>\r\n        {generateMapLegendOptions()}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  // The variables and functions between the two dotted lines below represents the new method for filtering the data on the dashboard\r\n  //-------------------------------------------------------------------------------------------------------------------\r\n  const [data, setData] = useState([])\r\n  const [currentData, setCurrentData] = useState([])\r\n  const [init, setInit] = useState(false)\r\n  const [allCountryRegions, setAllCountryRegions] = useState({})\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  // Get data from the csv file, filter it and set all initial values for the dashboard\r\n  // The CSV is only read ONCE in this function, after that the data passes only through the \"filterForComponents\" function from the filters.js file\r\n  useEffect(() => {\r\n    axios.get(`${API_ENDPOINT}filters/getDataFromCSV`)\r\n      .then((res) => {\r\n        // console.log('Getting Data');\r\n        setData(res.data)\r\n        setTotalGenomes(res.data.length)\r\n\r\n        let [auxTGenotypes, auxYears, auxCountries, auxRegions] = [[], [], [], {}]\r\n        let empty = [\"\", \"-\"]\r\n        res.data.forEach((x) => {\r\n\r\n          if (!auxTGenotypes.includes(x.GENOTYPE)) auxTGenotypes.push(x.GENOTYPE)\r\n          if (!auxYears.includes(x.DATE) && !empty.includes(x.DATE)) auxYears.push(x.DATE)\r\n          if (!auxCountries.includes(x.COUNTRY_ONLY) && !empty.includes(x.COUNTRY_ONLY)) {\r\n            auxCountries.push(x.COUNTRY_ONLY)\r\n            auxRegions[x.COUNTRY_ONLY] = []\r\n          }\r\n          if (!empty.includes(x.COUNTRY_ONLY) && !empty.includes(x.REGION_IN_COUNTRY) && !auxRegions[x.COUNTRY_ONLY].includes(x.REGION_IN_COUNTRY)) {\r\n            auxRegions[x.COUNTRY_ONLY].push(x.REGION_IN_COUNTRY)\r\n          }\r\n\r\n        })\r\n        auxYears.sort()\r\n        auxCountries.sort()\r\n        auxCountries.unshift(\"All\");\r\n\r\n        setTotalGenotypes(auxTGenotypes.length)\r\n        setTimeInitial(auxYears[0])\r\n        setActualTimeInitial(auxYears[0])\r\n        setTimeFinal(auxYears[auxYears.length - 1])\r\n        setActualTimeFinal(auxYears[auxYears.length - 1])\r\n        setYears(auxYears)\r\n        setCountriesForFilter(auxCountries)\r\n        setAllCountryRegions(auxRegions)\r\n\r\n        // console.log('FINISH');\r\n        setInit(true)\r\n      })\r\n  }, [])\r\n\r\n  // Update regions after country changes.\r\n  // This was made apart from the normal filters because we already have all regions from all countries and it is not necessary\r\n  // to loop through all the data again.\r\n  useEffect(() => {\r\n    if (init) {\r\n      setActualRegion(\"All\")\r\n      if (actualCountry !== \"All\") {\r\n        const auxRegions = allCountryRegions[actualCountry]\r\n        auxRegions.sort()\r\n        auxRegions.unshift(\"All\");\r\n        setRegionsForFilter(auxRegions)\r\n      }\r\n    }\r\n  }, [init, actualCountry, allCountryRegions])\r\n\r\n  // This function checks for changes on any of the filters and changes the loading status of the apge to TRUE.\r\n  // This triggers the function below this one (filterForComponents) and updates the data shown on the page\r\n  useEffect(() => {\r\n    if (init) {\r\n      // console.log('Something changed');\r\n      setLoading(true)\r\n    }\r\n  }, [init, dataset, actualTimeInitial, actualTimeFinal, actualCountry, actualRegion])\r\n\r\n  // Watcher from changes from filter on the dashboard, this way data is passed through the filters.js file and returns\r\n  useEffect(() => {\r\n    function update() {\r\n      if (init && loading) {\r\n        // console.log('Updating...');\r\n        const aux = filterForComponents(\r\n          {\r\n            data: data,\r\n            dataset: dataset,\r\n            country: actualCountry,\r\n            minYear: actualTimeInitial,\r\n            maxYear: actualTimeFinal,\r\n            region: actualRegion\r\n          }\r\n        )\r\n        setCurrentData(aux[0]);\r\n        setActualGenomes(aux[0].length)\r\n        setActualGenotypes(aux[1])\r\n        setWorldMapSamplesData(aux[2])\r\n        setWorldMapComplementaryData(aux[3])\r\n        setWorldMapGenotypesData(aux[4])\r\n        setWorldMapH58Data(aux[5])\r\n        setWorldMapSTADData(aux[6])\r\n        setWorldMapMDRData(aux[7])\r\n        setWorldMapXDRData(aux[8])\r\n        setWorldMapAZITHData(aux[9])\r\n        setWorldMapCIPRData(aux[10])\r\n        setWorldMapCIPIData(aux[11])\r\n        setCountryPMID(aux[12])\r\n        setDrugsAndGenotypesChartData(aux[13])\r\n        setDrugTrendsChartData(aux[14])\r\n        setAmrClassChartData(aux[15])\r\n        setPopulationStructureChartData(aux[16])\r\n        setAppLoading(false)\r\n        setLoading(false)\r\n      }\r\n    }\r\n    update()\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [loading])\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------\r\n\r\n  return (\r\n    <div className=\"dashboard\" style={{ height: '100vh' }}>\r\n      {/* Mobile toolbar */}\r\n      <div className=\"menu-bar-mobile\">\r\n        <img className=\"logoImageMenu-mobile\" src={typhinetLogoImg} alt=\"TyphiNET\" />\r\n      </div>\r\n      <div style={{ padding: dimensions.width > 770 ? '16px 16px 0px 16px' : '16x 0px 0px 0px', display: appLoading ? 'none' : '', backgroundColor: '#E5E5E5' }}>\r\n        {/* Logo and information on genotypes and genomes */}\r\n        <div className=\"info-wrapper\">\r\n          {dimensions.width > desktop && (\r\n            <>\r\n              <div className=\"typhinet-logo\">\r\n                <img className=\"typhinet-logo-image\" src={typhinetLogoImg} alt=\"TyphiNET\" />\r\n              </div>\r\n            </>\r\n          )}\r\n          <div className=\"card card-padding\">\r\n            <span>\r\n              Total Genomes\r\n            </span>\r\n            {totalGenomes === actualGenomes ? (\r\n              <span className=\"value\">{totalGenomes}</span>\r\n            ) : (\r\n              <span className=\"value\">\r\n                {actualGenomes}\r\n                <span className=\"value-total\">/{totalGenomes}</span>\r\n              </span>\r\n            )}\r\n          </div>\r\n          <div className=\"card\">\r\n            <span>\r\n              Total Genotypes\r\n            </span>\r\n            {totalGenotypes === actualGenotypes ? (\r\n              <span className=\"value\">{totalGenotypes}</span>\r\n            ) : (\r\n              <span className=\"value\">\r\n                {actualGenotypes}\r\n                <span className=\"value-total\">/{totalGenotypes}</span>\r\n              </span>\r\n            )}\r\n          </div>\r\n        </div>\r\n        {/* Map Wrapper*/}\r\n        <div className=\"map-filters-wrapper\">\r\n          <h2>Global Overview of <i>Salmonella</i> Typhi</h2>\r\n          <div className=\"map-filters-wrapper-inside\" style={{ flexDirection: dimensions.width > desktop ? 'row' : 'column' }}>\r\n            {/* Map -> all map views and information */}\r\n            <div className=\"map-wrapper\">\r\n              <ComposableMap\r\n                id=\"control-map\"\r\n                data-tip=\"\"\r\n                projectionConfig={{\r\n                  rotate: [-10, 0, 0],\r\n                  scale: 210,\r\n                }}\r\n                className=\"composable-map\"\r\n              >\r\n                <ZoomableGroup\r\n                  zoom={controlMapPosition.zoom}\r\n                  center={controlMapPosition.coordinates}\r\n                  onMoveEnd={(position) => {\r\n                    setControlMapPosition(position);\r\n                  }}\r\n                >\r\n                  <Sphere stroke=\"#E4E5E6\" strokeWidth={0.5} />\r\n                  <Graticule stroke=\"#E4E5E6\" strokeWidth={0.5} />\r\n                  <Geographies\r\n                    geography={geography}>\r\n                    {({ geographies }) =>\r\n                      geographies.map((geo) => {\r\n                        const sample = worldMapSamplesData.find(s => s.displayName === geo.properties.NAME && (actualContinent === \"All\" || geo.properties.CONTINENT === actualContinent))\r\n\r\n                        const d = worldMapComplementaryData[geo.properties.NAME];\r\n                        let country\r\n\r\n                        let fill = \"lightgrey\"\r\n                        let darkGray = \"#727272\"\r\n\r\n                        switch (mapView) {\r\n                          case 'No. Samples':\r\n                            if (sample && sample.count !== 0) {\r\n                              fill = mapSamplesColorScale(sample.count);\r\n                            } else if (sample && sample.count === 0) {\r\n                              fill = '#F5F4F6'\r\n                            }\r\n                            break;\r\n                          case 'Dominant Genotype':\r\n                            country = worldMapGenotypesData.find(s => s.displayName === geo.properties.NAME && (actualContinent === \"All\" || geo.properties.CONTINENT === actualContinent))\r\n                            if (country !== undefined) {\r\n                              const temp = country.genotypes\r\n                              temp.sort((a, b) => a.count <= b.count ? 1 : -1)\r\n                              if (sample) {\r\n                                fill = getColorForGenotype(temp[0].lineage)\r\n                              }\r\n                            }\r\n                            break;\r\n                          case 'H58 / Non-H58':\r\n                            country = worldMapH58Data.find(s => s.displayName === geo.properties.NAME && (actualContinent === \"All\" || geo.properties.CONTINENT === actualContinent))\r\n                            if (country !== undefined) {\r\n                              let countH58 = 0\r\n                              const isH58 = country.genotypes.find(g => g.type === 'H58')\r\n                              if (isH58 !== undefined) { countH58 = isH58.count }\r\n\r\n                              if (country.total >= 20 && countH58 > 0) {\r\n                                fill = mapRedColorScale(isH58.percentage);\r\n                              } else if (country.total >= 20) {\r\n                                fill = darkGray\r\n                              }\r\n                            }\r\n                            break;\r\n                          case 'MDR':\r\n                            country = worldMapMDRData.find(s => s.displayName === geo.properties.NAME && (actualContinent === \"All\" || geo.properties.CONTINENT === actualContinent))\r\n                            if (country !== undefined) {\r\n                              if (country.total >= 20 && country.count > 0) {\r\n                                fill = mapRedColorScale(country.percentage);\r\n                              } else if (country.total >= 20) {\r\n                                fill = darkGray\r\n                              }\r\n                            }\r\n                            break;\r\n                          case 'Sensitive to all drugs':\r\n                            country = worldMapSTADData.find(s => s.displayName === geo.properties.NAME && (actualContinent === \"All\" || geo.properties.CONTINENT === actualContinent))\r\n                            if (country !== undefined) {\r\n                              if (country.total >= 20 && country.count > 0) {\r\n                                fill = mapRedColorScale(country.percentage);\r\n                              } else if (country.total >= 20) {\r\n                                fill = darkGray\r\n                              }\r\n                            }\r\n                            break;\r\n                          case 'XDR':\r\n                            country = worldMapXDRData.find(s => s.displayName === geo.properties.NAME && (actualContinent === \"All\" || geo.properties.CONTINENT === actualContinent))\r\n                            if (country !== undefined) {\r\n                              if (country.total >= 20 && country.count > 0) {\r\n                                fill = mapRedColorScale(country.percentage);\r\n                              } else if (country.total >= 20) {\r\n                                fill = darkGray\r\n                              }\r\n                            }\r\n                            break;\r\n                          case 'Azith':\r\n                            country = worldMapAZITHData.find(s => s.displayName === geo.properties.NAME && (actualContinent === \"All\" || geo.properties.CONTINENT === actualContinent))\r\n                            if (country !== undefined) {\r\n                              if (country.total >= 20 && country.count > 0) {\r\n                                fill = mapRedColorScale(country.percentage);\r\n                              } else if (country.total >= 20) {\r\n                                fill = darkGray\r\n                              }\r\n                            }\r\n                            break;\r\n                          case 'CipI':\r\n                            country = worldMapCIPIData.find(s => s.displayName === geo.properties.NAME && (actualContinent === \"All\" || geo.properties.CONTINENT === actualContinent))\r\n                            if (country !== undefined) {\r\n                              if (country.total >= 20 && country.count > 0) {\r\n                                fill = mapRedColorScale(country.percentage);\r\n                              } else if (country.total >= 20) {\r\n                                fill = darkGray\r\n                              }\r\n                            }\r\n                            break;\r\n                          case 'CipR':\r\n                            country = worldMapCIPRData.find(s => s.displayName === geo.properties.NAME && (actualContinent === \"All\" || geo.properties.CONTINENT === actualContinent))\r\n                            if (country !== undefined) {\r\n                              if (country.total >= 20 && country.count > 0) {\r\n                                fill = mapRedColorScale(country.percentage);\r\n                              } else if (country.total >= 20) {\r\n                                fill = darkGray\r\n                              }\r\n                            }\r\n                            break;\r\n                          default:\r\n                            break;\r\n                        }\r\n\r\n                        return (\r\n                          <Geography\r\n                            key={geo.rsmKey}\r\n                            geography={geo}\r\n                            cursor=\"pointer\"\r\n                            fill={fill}\r\n                            onClick={() => {\r\n                              if (d !== undefined && sample !== undefined) {\r\n                                setActualCountry(sample.name)\r\n                              }\r\n                            }}\r\n                            onMouseLeave={() => {\r\n                              setTooltipContent(null);\r\n                            }}\r\n                            onMouseEnter={() => {\r\n                              const { NAME } = geo.properties;\r\n                              switch (mapView) {\r\n                                case 'No. Samples':\r\n                                  if (sample !== undefined && d !== undefined) {\r\n                                    setTooltipContent({\r\n                                      name: NAME,\r\n                                      additionalInfo: {\r\n                                        samples: sample.count,\r\n                                        genotypes: d.GENOTYPES.TOTAL,\r\n                                        H58: Math.round(d.H58) !== d.H58 ? d.H58.toFixed(2) : d.H58,\r\n                                        MDR: Math.round(d.MDR) !== d.MDR ? d.MDR.toFixed(2) : d.MDR,\r\n                                        XDR: Math.round(d.XDR) !== d.XDR ? d.XDR.toFixed(2) : d.XDR,\r\n                                        DCS: Math.round(d.DCS) !== d.DCS ? d.DCS.toFixed(2) : d.DCS,\r\n                                        CipI: Math.round(d.CipI) !== d.CipI ? d.CipI.toFixed(2) : d.CipI,\r\n                                        CipR: Math.round(d.CipR) !== d.CipR ? d.CipR.toFixed(2) : d.CipR,\r\n                                        CipI_R: Math.round(d.CipI_R) !== d.CipI_R ? d.CipI_R.toFixed(2) : d.CipI_R,\r\n                                        AzithR: Math.round(d.AzithR) !== d.AzithR ? d.AzithR.toFixed(2) : d.AzithR,\r\n                                        STAD: Math.round(d.STAD) !== d.STAD ? d.STAD.toFixed(2) : d.STAD\r\n                                      }\r\n                                    });\r\n                                  } else {\r\n                                    setTooltipContent({\r\n                                      name: NAME\r\n                                    })\r\n                                  }\r\n                                  break;\r\n                                case 'Dominant Genotype':\r\n                                  if (country !== undefined) {\r\n                                    let temp = country.genotypes\r\n                                    temp.sort((a, b) => a.count <= b.count ? 1 : -1)\r\n                                    setTooltipContent({\r\n                                      name: NAME,\r\n                                      genotypeInfo: temp\r\n                                    });\r\n                                  } else {\r\n                                    setTooltipContent({\r\n                                      name: NAME\r\n                                    })\r\n                                  }\r\n                                  break;\r\n                                case 'H58 / Non-H58':\r\n                                  if (country !== undefined && country.genotypes.length > 0) {\r\n                                    let countH58 = 0\r\n                                    const isH58 = country.genotypes.find(g => g.type === 'H58')\r\n                                    if (isH58 !== undefined) { countH58 = isH58.count }\r\n\r\n                                    if (country.total >= 20 && countH58 > 0) {\r\n                                      setTooltipContent({\r\n                                        name: NAME,\r\n                                        simpleGenotypeInfo: country.genotypes\r\n                                      });\r\n                                    } else if (country.total >= 20) {\r\n                                      setTooltipContent({\r\n                                        name: NAME,\r\n                                        smallerThan20: true\r\n                                      })\r\n                                    } else {\r\n                                      setTooltipContent({\r\n                                        name: NAME\r\n                                      })\r\n                                    }\r\n                                  } else {\r\n                                    setTooltipContent({\r\n                                      name: NAME\r\n                                    })\r\n                                  }\r\n\r\n                                  break;\r\n                                case 'MDR':\r\n                                  if (country !== undefined && country.MDRs.length > 0) {\r\n                                    if (country.total >= 20 && country.count > 0) {\r\n                                      setTooltipContent({\r\n                                        name: NAME,\r\n                                        mdrInfo: {\r\n                                          count: country.count,\r\n                                          percentage: country.percentage,\r\n                                        }\r\n                                      });\r\n                                    } else if (country.total >= 20) {\r\n                                      setTooltipContent({\r\n                                        name: NAME,\r\n                                        smallerThan20: true\r\n                                      })\r\n                                    } else {\r\n                                      setTooltipContent({\r\n                                        name: NAME\r\n                                      })\r\n                                    }\r\n                                  } else {\r\n                                    setTooltipContent({\r\n                                      name: NAME\r\n                                    })\r\n                                  }\r\n                                  break;\r\n                                case 'Sensitive to all drugs':\r\n                                  if (country !== undefined && country.STADs.length > 0) {\r\n                                    if (country.total >= 20 && country.count > 0) {\r\n                                      setTooltipContent({\r\n                                        name: NAME,\r\n                                        stadInfo: {\r\n                                          count: country.count,\r\n                                          percentage: country.percentage,\r\n                                        }\r\n                                      });\r\n                                    } else if (country.total >= 20) {\r\n                                      setTooltipContent({\r\n                                        name: NAME,\r\n                                        smallerThan20: true\r\n                                      })\r\n                                    } else {\r\n                                      setTooltipContent({\r\n                                        name: NAME\r\n                                      })\r\n                                    }\r\n                                  } else {\r\n                                    setTooltipContent({\r\n                                      name: NAME\r\n                                    })\r\n                                  }\r\n                                  break;\r\n                                case 'XDR':\r\n                                  if (country !== undefined && country.XDRs.length > 0) {\r\n                                    if (country.total >= 20 && country.count > 0) {\r\n                                      setTooltipContent({\r\n                                        name: NAME,\r\n                                        xdrInfo: {\r\n                                          count: country.count,\r\n                                          percentage: country.percentage,\r\n                                        }\r\n                                      });\r\n                                    } else if (country.total >= 20) {\r\n                                      setTooltipContent({\r\n                                        name: NAME,\r\n                                        smallerThan20: true\r\n                                      })\r\n                                    } else {\r\n                                      setTooltipContent({\r\n                                        name: NAME\r\n                                      })\r\n                                    }\r\n                                  } else {\r\n                                    setTooltipContent({\r\n                                      name: NAME\r\n                                    })\r\n                                  }\r\n                                  break;\r\n                                case 'Azith':\r\n                                  if (country !== undefined && country.AZs.length > 0) {\r\n                                    if (country.total >= 20 && country.count > 0) {\r\n                                      setTooltipContent({\r\n                                        name: NAME,\r\n                                        azInfo: {\r\n                                          count: country.count,\r\n                                          percentage: country.percentage,\r\n                                        }\r\n                                      });\r\n                                    } else if (country.total >= 20) {\r\n                                      setTooltipContent({\r\n                                        name: NAME,\r\n                                        smallerThan20: true\r\n                                      })\r\n                                    } else {\r\n                                      setTooltipContent({\r\n                                        name: NAME\r\n                                      })\r\n                                    }\r\n                                  } else {\r\n                                    setTooltipContent({\r\n                                      name: NAME\r\n                                    })\r\n                                  }\r\n                                  break;\r\n                                case 'CipI':\r\n                                  if (country !== undefined && country.CipIs.length > 0) {\r\n                                    if (country.total >= 20 && country.count > 0) {\r\n                                      let cipI = country.CipIs.filter(x => x.type === 'CipI')\r\n                                      if (cipI.length) {\r\n                                        cipI = cipI[0]\r\n                                        if (Math.round(cipI.percentage) !== cipI.percentage)\r\n                                          cipI.percentage = cipI.percentage.toFixed(2)\r\n                                        cipI.percentage = parseFloat(cipI.percentage);\r\n                                      } else {\r\n                                        cipI = {\r\n                                          count: 0,\r\n                                          percentage: 0\r\n                                        }\r\n                                      }\r\n                                      let cipR = country.CipIs.filter(x => x.type === 'CipR')\r\n                                      if (cipR.length) {\r\n                                        cipR = cipR[0]\r\n                                        if (Math.round(cipR.percentage) !== cipR.percentage)\r\n                                          cipR.percentage = cipR.percentage.toFixed(2)\r\n                                        cipR.percentage = parseFloat(cipR.percentage);\r\n                                      } else {\r\n                                        cipR = {\r\n                                          count: 0,\r\n                                          percentage: 0\r\n                                        }\r\n                                      }\r\n                                      setTooltipContent({\r\n                                        name: NAME,\r\n                                        cipIInfo: {\r\n                                          count: cipI.count,\r\n                                          percentage: cipI.percentage,\r\n                                        },\r\n                                        cipRInfo2: {\r\n                                          count: cipR.count,\r\n                                          percentage: cipR.percentage,\r\n                                        },\r\n                                        cipIRInfo: {\r\n                                          count: country.count,\r\n                                          percentage: country.percentage,\r\n                                        }\r\n                                      });\r\n                                    } else if (country.total >= 20) {\r\n                                      setTooltipContent({\r\n                                        name: NAME,\r\n                                        smallerThan20: true\r\n                                      })\r\n                                    } else {\r\n                                      setTooltipContent({\r\n                                        name: NAME\r\n                                      })\r\n                                    }\r\n                                  } else {\r\n                                    setTooltipContent({\r\n                                      name: NAME\r\n                                    })\r\n                                  }\r\n                                  break;\r\n                                case 'CipR':\r\n                                  if (country !== undefined && country.CipRs.length > 0) {\r\n                                    if (country.total >= 20 && country.count > 0) {\r\n                                      setTooltipContent({\r\n                                        name: NAME,\r\n                                        cipRInfo: {\r\n                                          count: country.count,\r\n                                          percentage: country.percentage,\r\n                                        }\r\n                                      });\r\n                                    } else if (country.total >= 20) {\r\n                                      setTooltipContent({\r\n                                        name: NAME,\r\n                                        smallerThan20: true\r\n                                      })\r\n                                    } else {\r\n                                      setTooltipContent({\r\n                                        name: NAME\r\n                                      })\r\n                                    }\r\n                                  } else {\r\n                                    setTooltipContent({\r\n                                      name: NAME\r\n                                    })\r\n                                  }\r\n                                  break;\r\n                                default:\r\n                                  break;\r\n                              }\r\n                            }}\r\n                            style={{\r\n                              default: {\r\n                                outline: \"none\",\r\n                              },\r\n                              hover: {\r\n                                stroke: \"#607D8B\",\r\n                                strokeWidth: 1,\r\n                                outline: \"none\",\r\n                              },\r\n                              pressed: {\r\n                                fill: \"#FF5722\",\r\n                                stroke: \"#607D8B\",\r\n                                strokeWidth: 1,\r\n                                outline: \"none\",\r\n                              }\r\n                            }}\r\n                          />\r\n                        );\r\n                      })\r\n                    }\r\n                  </Geographies>\r\n                </ZoomableGroup>\r\n\r\n              </ComposableMap>\r\n              {/* Map legend */}\r\n              {(dimensions.width > desktop) && (\r\n                <div className=\"map-upper-right-buttons\">\r\n                  {renderMapLegend()}\r\n                </div>\r\n              )}\r\n              {(dimensions.width > desktop) && (\r\n                // Dataset Filter\r\n                <div className=\"map-upper-left-buttons \">\r\n                  <div className=\"map-filters\" style={{ width: dimensions.width > desktop ? 200 : \"-webkit-fill-available\" }}>\r\n                    <span className=\"map-filters-label\" style={{ marginBottom: dimensions.width > desktop ? 20 : 10 }}>Filters</span>\r\n                    <div style={{ marginBottom: dimensions.width > desktop ? 16 : 8 }}>\r\n                      <Typography className={classes.typography}>\r\n                        Select dataset\r\n                      </Typography>\r\n                      <ToggleButtonGroup\r\n                        value={dataset}\r\n                        exclusive\r\n                        size=\"small\"\r\n                        className={classes.tbg}\r\n                        onChange={(evt, newDataset) => {\r\n                          if (newDataset !== null)\r\n                            setDataset(newDataset)\r\n                        }}\r\n                      >\r\n                        <CustomToggleButton value=\"All\">\r\n                          All\r\n                        </CustomToggleButton>\r\n                        <CustomToggleButton value=\"Local\">\r\n                          Local\r\n                        </CustomToggleButton>\r\n                        <CustomToggleButton value=\"Travel\">\r\n                          Travel\r\n                        </CustomToggleButton>\r\n                      </ToggleButtonGroup>\r\n                    </div>\r\n                    <div className=\"margin-div\">\r\n                      {years.length > 2 && (<div className=\"my-year-range\">\r\n                        <div>\r\n                          <Typography gutterBottom className={classes.typography}>\r\n                            Start year\r\n                          </Typography>\r\n                          <Select\r\n                            value={actualTimeInitial}\r\n                            onChange={(evt, value) => setActualTimeInitial(value.props.value)}\r\n                            className={classes.selectYear}\r\n                            fullWidth\r\n                          >\r\n                            {years?.filter(x => x <= actualTimeFinal).map((n, i) => {\r\n                              return (\r\n                                <MenuItem key={i + \"timeperiod\"} className={classes.select} value={n}>\r\n                                  {n}\r\n                                </MenuItem>\r\n                              )\r\n                            })}\r\n                          </Select>\r\n                        </div>\r\n                        <div className=\"my-divider\"></div>\r\n                        <div className=\"my-year-range-row\">\r\n                          <Typography gutterBottom className={classes.typographyEndYear}>\r\n                            End year\r\n                          </Typography>\r\n                          <Select\r\n                            value={actualTimeFinal}\r\n                            onChange={(evt, value) => setActualTimeFinal(value.props.value)}\r\n                            className={classes.selectYear}\r\n                            fullWidth\r\n                          >\r\n                            {years?.filter(x => x >= actualTimeInitial).map((n, i) => {\r\n                              return (\r\n                                <MenuItem key={i + \"timeperiod2\"} className={classes.select} value={n}>\r\n                                  {n}\r\n                                </MenuItem>\r\n                              )\r\n                            })}\r\n                          </Select>\r\n                        </div>\r\n                      </div>)}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n              {/* Map controllers */}\r\n              <div className=\"map-lower-left-buttons\">\r\n                <Zoom in={controlMapPosition.zoom !== 1 || controlMapPosition.coordinates.some(c => c !== 0)}>\r\n                  <TooltipMaterialUI title={<span className=\"my-font\">Recenter Map</span>} placement=\"right\">\r\n                    <div\r\n                      className=\"button\"\r\n                      onClick={() => setControlMapPosition({ coordinates: [0, 0], zoom: 1 })}\r\n                    >\r\n                      <FontAwesomeIcon icon={faCrosshairs} />\r\n                    </div>\r\n                  </TooltipMaterialUI>\r\n                </Zoom>\r\n                <TooltipMaterialUI title={<span className=\"my-font\">Zoom In</span>} placement=\"right\">\r\n                  <div\r\n                    className=\"button\"\r\n                    onClick={() => {\r\n                      if (controlMapPosition.zoom >= 4) return;\r\n                      setControlMapPosition(pos => ({ ...pos, zoom: pos.zoom * 2 }));\r\n                    }}\r\n                  >\r\n                    <FontAwesomeIcon icon={faPlus} />\r\n                  </div>\r\n                </TooltipMaterialUI>\r\n                <TooltipMaterialUI title={<span className=\"my-font\">Zoom Out</span>} placement=\"right\">\r\n                  <div\r\n                    className=\"button\"\r\n                    onClick={() => {\r\n                      if (controlMapPosition.zoom <= 1) return;\r\n                      if (controlMapPosition.zoom / 2 === 1) {\r\n                        setControlMapPosition({ coordinates: [0, 0], zoom: 1 });\r\n                      } else {\r\n                        setControlMapPosition(pos => ({ ...pos, zoom: pos.zoom / 2 }));\r\n                      }\r\n                    }}\r\n                  >\r\n                    <FontAwesomeIcon icon={faMinus} />\r\n                  </div>\r\n                </TooltipMaterialUI>\r\n              </div>\r\n              {/* Download map button */}\r\n              <div className=\"map-lower-right-buttons\">\r\n                <TooltipMaterialUI title={<span className=\"my-font\">Download Map as PNG</span>} placement=\"left\">\r\n                  <div\r\n                    className={`button ${captureControlMapInProgress && \"disabled\"}`}\r\n                    onClick={() => {\r\n                      if (!captureControlMapInProgress)\r\n                        capturePicture('control-map', 0, { mapView: mapView, dataset: dataset, actualTimePeriodRange: [actualTimeInitial, actualTimeFinal] })\r\n                    }}\r\n                  >\r\n                    <FontAwesomeIcon icon={faCamera} />\r\n                  </div>\r\n                </TooltipMaterialUI>\r\n                {captureControlMapInProgress && (\r\n                  <CustomCircularProgress\r\n                    size={54}\r\n                    thickness={4}\r\n                    style={{ top: 5, left: -7 }} />\r\n                )}\r\n              </div>\r\n            </div>\r\n            {/* Map filters and legends for mobile */}\r\n            {!(dimensions.width > desktop) && (\r\n              <div className=\"wrapper-map-legend\">\r\n                {/* Legend */}\r\n                {renderMapLegend()}\r\n                {/* Filters */}\r\n                <div>\r\n                  <div className=\"map-filters-mobile\" style={{ width: dimensions.width > desktop ? 200 : \"-webkit-fill-available\" }}>\r\n                    <span className=\"map-filters-label\" style={{ marginBottom: dimensions.width > desktop ? 20 : 10 }}>Filters</span>\r\n                    {/* Dataset Filter */}\r\n                    <div style={{ marginBottom: dimensions.width > desktop ? 16 : 8 }}>\r\n                      <Typography className={classes.typography}>\r\n                        Select dataset\r\n                      </Typography>\r\n                      <ToggleButtonGroup\r\n                        value={dataset}\r\n                        exclusive\r\n                        size=\"small\"\r\n                        className={classes.tbg}\r\n                        onChange={(evt, newDataset) => {\r\n                          if (newDataset !== null)\r\n                            setDataset(newDataset)\r\n                        }}\r\n                      >\r\n                        <CustomToggleButton value=\"All\">\r\n                          All\r\n                        </CustomToggleButton>\r\n                        <CustomToggleButton value=\"Local\">\r\n                          Local\r\n                        </CustomToggleButton>\r\n                        <CustomToggleButton value=\"Travel\">\r\n                          Travel\r\n                        </CustomToggleButton>\r\n                      </ToggleButtonGroup>\r\n                    </div>\r\n                    {/* Year Filter */}\r\n                    <div className=\"margin-div\">\r\n                      <div className=\"my-year-range\">\r\n                        <div className=\"my-year-range-row\">\r\n                          <Typography gutterBottom className={classes.typography}>\r\n                            Start year\r\n                          </Typography>\r\n                          <Select\r\n                            value={actualTimeInitial}\r\n                            onChange={(evt, value) => setActualTimeInitial(value.props.value)}\r\n                            className={classes.select}\r\n                            fullWidth\r\n                          >\r\n                            {years.map((n, i) => {\r\n                              return (\r\n                                <MenuItem key={i + \"year\"} className={classes.select} value={n}>\r\n                                  {n}\r\n                                </MenuItem>\r\n                              )\r\n                            })}\r\n                          </Select>\r\n                        </div>\r\n                        <div className=\"my-divider\"></div>\r\n                        <div className=\"my-year-range-row\">\r\n                          <Typography gutterBottom className={classes.typographyEndYear}>\r\n                            End year\r\n                          </Typography>\r\n                          <Select\r\n                            value={actualTimeFinal}\r\n                            onChange={(evt, value) => setActualTimeFinal(value.props.value)}\r\n                            className={classes.select}\r\n                            fullWidth\r\n                          >\r\n                            {years.map((n, i) => {\r\n                              return (\r\n                                <MenuItem key={i + \"year2\"} className={classes.select} value={n}>\r\n                                  {n}\r\n                                </MenuItem>\r\n                              )\r\n                            })}\r\n                          </Select>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n            {/* Map Tooltips */}\r\n            <ReactTooltip>\r\n              {tooltipContent && (\r\n                <div className=\"tooltip-map\">\r\n                  <span className=\"country\">{tooltipContent.name}</span>\r\n                  {tooltipContent.additionalInfo && (\r\n                    <div className=\"additional-info\">\r\n                      <span>Samples: {tooltipContent.additionalInfo.samples}</span>\r\n                      <span>Genotypes: {tooltipContent.additionalInfo.genotypes}</span>\r\n                      <span>H58: {tooltipContent.additionalInfo.H58}%</span>\r\n                      <span>MDR: {tooltipContent.additionalInfo.MDR}%</span>\r\n                      <span>XDR: {tooltipContent.additionalInfo.XDR}%</span>\r\n                      <span>DCS: {tooltipContent.additionalInfo.DCS}%</span>\r\n                      <span>AzithR: {tooltipContent.additionalInfo.AzithR}%</span>\r\n                      <span>CipI: {tooltipContent.additionalInfo.CipI}%</span>\r\n                      <span>CipR: {tooltipContent.additionalInfo.CipR}%</span>\r\n                      <span>CipI/R: {tooltipContent.additionalInfo.CipI_R}%</span>\r\n                      <span>Susceptible: {tooltipContent.additionalInfo.STAD}%</span>\r\n                    </div>\r\n                  )}\r\n                  {tooltipContent.genotypeInfo && (\r\n                    <div className=\"additional-info margin-div\">\r\n                      {tooltipContent.genotypeInfo.map((genotype, index) => {\r\n                        if (index < 5) {\r\n                          return (\r\n                            <div key={index + \"genotypeInfo\"} className=\"genotype\">\r\n                              <div className=\"color\" style={{ backgroundColor: getColorForGenotype(genotype.lineage) }} />\r\n                              <span>{genotype.lineage}: {genotype.count}</span>\r\n                            </div>\r\n                          )\r\n                        } else\r\n                          return null;\r\n                      })}\r\n                    </div>\r\n                  )}\r\n                  {tooltipContent.simpleGenotypeInfo && (\r\n                    <div className=\"additional-info margin-div\">\r\n                      {tooltipContent.simpleGenotypeInfo[0].type === \"H58\" ? (\r\n                        <span>{tooltipContent.simpleGenotypeInfo[0].type}: {tooltipContent.simpleGenotypeInfo[0].count} ({tooltipContent.simpleGenotypeInfo[0].percentage}%)</span>\r\n                      ) : tooltipContent.simpleGenotypeInfo.length > 1 && tooltipContent.simpleGenotypeInfo[1].type === \"H58\" ? (\r\n                        <span>{tooltipContent.simpleGenotypeInfo[1].type}: {tooltipContent.simpleGenotypeInfo[1].count} ({tooltipContent.simpleGenotypeInfo[1].percentage}%)</span>\r\n                      ) : (\r\n                        <span>H58: 0 (0%)</span>\r\n                      )}\r\n                    </div>\r\n                  )}\r\n                  {tooltipContent.mdrInfo && (\r\n                    <div className=\"additional-info\">\r\n                      <span>MDR: {tooltipContent.mdrInfo.count} ({tooltipContent.mdrInfo.percentage}%)</span>\r\n                    </div>\r\n                  )}\r\n                  {tooltipContent.stadInfo && (\r\n                    <div className=\"additional-info\">\r\n                      <span>Susceptible: {tooltipContent.stadInfo.count} ({tooltipContent.stadInfo.percentage}%)</span>\r\n                    </div>\r\n                  )}\r\n                  {tooltipContent.xdrInfo && (\r\n                    <div className=\"additional-info\">\r\n                      <span>XDR: {tooltipContent.xdrInfo.count} ({tooltipContent.xdrInfo.percentage}%)</span>\r\n                    </div>\r\n                  )}\r\n                  {tooltipContent.azInfo && (\r\n                    <div className=\"additional-info\">\r\n                      <span>AzithR: {tooltipContent.azInfo.count} ({tooltipContent.azInfo.percentage}%)</span>\r\n                    </div>\r\n                  )}\r\n                  {tooltipContent.cipIInfo && (\r\n                    <div className=\"additional-info\">\r\n                      <span>CipI/R: {tooltipContent.cipIRInfo.count} ({tooltipContent.cipIRInfo.percentage}%)</span>\r\n                    </div>\r\n                  )}\r\n                  {tooltipContent.cipRInfo && (\r\n                    <div className=\"additional-info\">\r\n                      <span>CipR: {tooltipContent.cipRInfo.count} ({tooltipContent.cipRInfo.percentage}%)</span>\r\n                    </div>\r\n                  )}\r\n                  {(!tooltipContent.xdrInfo && !tooltipContent.mdrInfo && !tooltipContent.stadInfo && !tooltipContent.azInfo && !tooltipContent.cipIInfo && !tooltipContent.cipRInfo && !tooltipContent.simpleGenotypeInfo && !tooltipContent.genotypeInfo && !tooltipContent.additionalInfo) && (\r\n                    <div className=\"additional-info\">\r\n                      <span>{tooltipContent.smallerThan20 ? \"0%\" : 'Insufficient data'}</span>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              )}\r\n            </ReactTooltip>\r\n          </div>\r\n        </div>\r\n        {/* Chart Wrapper */}\r\n        <div className=\"chart-wrapper\">\r\n          <h2 className=\"showing-data\">Now showing: {dataset} data from {actualCountry === \"All\" ? \"all countries\" : actualCountry} from {actualTimeInitial} to {actualTimeFinal}</h2>\r\n          <div className=\"country-region-div\" style={{ flexDirection: dimensions.width > 560 ? 'row' : 'column' }}>\r\n            {/* Select country dropdown */}\r\n            <FormControl className={classes.formControlSelectCountryRegion}>\r\n              <label className=\"select-country-label\">Select country (or click map)</label>\r\n              <Select\r\n                value={actualCountry}\r\n                onChange={evt => { setActualCountry(evt.target.value) }}\r\n                fullWidth\r\n                className={classes.selectCountry}\r\n              >\r\n                {countriesForFilter.map((country, index) => {\r\n                  return (\r\n                    <MenuItem key={index + \"countriesFilter\"} className={classes.selectCountryValues} value={country}>\r\n                      {country}\r\n                    </MenuItem>\r\n                  )\r\n                })}\r\n              </Select>\r\n            </FormControl>\r\n            {dimensions.width > 560 && <div className=\"country-region-spacer\"></div>}\r\n            {/* Select region dropdown */}\r\n            {/* <FormControl className={`${classes.formControlSelectCountryRegion}`}>\r\n              <label className=\"select-country-label\">Select region</label>\r\n              <Select\r\n                value={actualRegion}\r\n                onChange={evt => { setActualRegion(evt.target.value) }}\r\n                fullWidth\r\n                className={classes.selectCountry}\r\n              >\r\n                {regionsForFilter.map((region, index) => {\r\n                  return (\r\n                    <MenuItem key={index + \"regionFilter\"} className={classes.selectCountryValues} value={region}>\r\n                      {region}\r\n                    </MenuItem>\r\n                  )\r\n                })}\r\n              </Select>\r\n            </FormControl> */}\r\n          </div>\r\n          {/* Charts */}\r\n          <div className=\"chart-wrapper-div\">\r\n            <div className=\"chart-wrapper-div2\" style={{ flexDirection: dimensions.width > desktop ? \"row\" : \"column\", paddingBottom: dimensions.width > desktop ? 20 : 0 }}>\r\n              <div className=\"chart-wrapper-div3\" style={{ paddingRight: dimensions.width < mobile ? 0 : 10 }}>\r\n                {/* Resistance frequencies within genotypes CHART */}\r\n                <div className=\"chart-wrapper-RFWA\">\r\n                  <div className=\"chart-wrapper-RFWA-div\">\r\n                    <span className=\"chart-title chart-wrapper-RFWA-title\">Resistance frequencies within genotypes</span>\r\n                    {/* Download chart */}\r\n                    <div className=\"chart-wrapper-RFWA-download\">\r\n                      <TooltipMaterialUI title={<span className=\"my-font\">Download Chart as PNG</span>} placement=\"right\">\r\n                        <div\r\n                          className={`button ${captureControlChartRFWGInProgress && \"disabled\"}`}\r\n                          onClick={() => {\r\n                            if (!captureControlChartRFWGInProgress)\r\n                              capturePicture('RFWG', 1, { mapView: mapView, dataset: dataset, actualTimePeriodRange: [actualTimeInitial, actualTimeFinal], country: actualCountry, region: actualRegion, RFWGCount: RFWGValues.length })\r\n                          }}\r\n                        >\r\n                          <FontAwesomeIcon icon={faCamera} size=\"sm\" />\r\n                        </div>\r\n                      </TooltipMaterialUI>\r\n                      {captureControlChartRFWGInProgress && (\r\n                        <CustomCircularProgress\r\n                          size={44}\r\n                          thickness={4} />\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                  {/* Labels */}\r\n                  <span className=\"chart-title chart-wrapper-RFWA-top\">Top Genotypes (up to {RFWGValues.length})</span>\r\n                  <div className=\"chart-wrapper-RFWA-view\" style={{ width: dimensions.width > 790 ? \"71%\" : '260px' }}>\r\n                    <div className=\"chart-wrapper-DRT-view-drugs\">\r\n                      <div className=\"chart-wrapper-DRT-view-drugs-label\">Data view</div>\r\n                      <IconTooltip\r\n                        title={<div className={classes.tooltipTitle}>Select up to 7 genotypes</div>}\r\n                        placement=\"top\"\r\n                      >\r\n                        <IconButton className={classes.tooltipButton}>\r\n                          <FontAwesomeIcon icon={faInfoCircle} size=\"xs\" className={classes.tooltipIcon} />\r\n                        </IconButton>\r\n                      </IconTooltip>\r\n                    </div>\r\n                    {/* Data view dropdown */}\r\n                    <FormControl fullWidth className={classes.formControlSelect}>\r\n                      <DropDownSelect\r\n                        options={RFWGFilterOptions}\r\n                        searchable={false}\r\n                        labelField={\"value\"}\r\n                        values={[{ value: RFWGFilterOptions[RFWGFilter - 1].value, id: RFWGFilter }]}\r\n                        onChange={evt => {\r\n                          setRFWGFilter(evt[0].id)\r\n                        }}\r\n                        className=\"dropdown-select\"\r\n                      />\r\n                    </FormControl>\r\n                    {/* Genotypes select dropdown */}\r\n                    <FormControl id=\"DDS2\" fullWidth className={classes.formControlSelect}>\r\n                      <DropDownSelect\r\n                        options={RFWGDropdownOptions}\r\n                        multi={true}\r\n                        searchable={false}\r\n                        clearable={true}\r\n                        separator={true}\r\n                        labelField={\"label\"}\r\n                        values={RFWGDropdownOptions.slice(0, 5)}\r\n                        className=\"dropdown-select\"\r\n                        contentRenderer={({ props, state }) => {\r\n                          return (\r\n                            <div className=\"chart-wrapper-DRT-view-drugs-select\">\r\n                              {state.values.length} of {props.options.length} Selected\r\n                            </div>\r\n                          );\r\n                        }}\r\n                        itemRenderer={({ item, itemIndex, props, state, methods }) => {\r\n                          return (\r\n                            <div key={item[props.valueField]} onClick={() => {\r\n                              if (RFWGValues.length >= 7) {\r\n                                if (methods.isSelected(item)) {\r\n                                  methods.addItem(item)\r\n                                }\r\n                              } else {\r\n                                methods.addItem(item)\r\n                              }\r\n                            }}>\r\n                              <div className=\"chart-wrapper-DRT-view-drugs-select-options\">\r\n                                <input type=\"checkbox\" checked={methods.isSelected(item)} onChange={() => { }} />\r\n                                &nbsp;&nbsp;&nbsp;{item[props.labelField]}\r\n                              </div>\r\n                            </div>\r\n                          )\r\n                        }}\r\n                        clearRenderer={\r\n                          ({ props, state, methods }) => {\r\n                            return (\r\n                              <Buttons>\r\n                                {state.values.length > 0 ? (\r\n                                  <ButtonClearSelect id=\"DSButton2\" className=\"clear\" onClick={methods.clearAll} checked={false}>\r\n                                    Clear all\r\n                                  </ButtonClearSelect>\r\n                                ) : (\r\n                                  <ButtonClearSelect\r\n                                    id=\"DSButton2\"\r\n                                    onClick={() => {\r\n                                      methods.selectAll(RFWGDropdownOptions.slice(0, 5))\r\n                                    }}\r\n                                    checked={true}\r\n                                  >\r\n                                    Reset\r\n                                  </ButtonClearSelect>\r\n                                )}\r\n                              </Buttons>\r\n                            );\r\n                          }\r\n                        }\r\n                        onChange={(values) => {\r\n                          setRFWGValues(values)\r\n                        }}\r\n                      />\r\n                    </FormControl>\r\n                  </div>\r\n                  <div id=\"RFWG\">\r\n                    {plotDrugsAndGenotypesChart}\r\n                  </div>\r\n                </div>\r\n                {/* Resistance determinants within genotypes CHART */}\r\n                <div className=\"chart-wrapper-RDWAG\">\r\n                  <div className=\"chart-wrapper-RDWAG-div\">\r\n                    <span className=\"chart-title chart-wrapper-RDWAG-title\">Resistance determinants within genotypes</span>\r\n                    {/* Download chart */}\r\n                    <div className=\"chart-wrapper-RDWAG-download\">\r\n                      <TooltipMaterialUI title={<span className=\"my-font\">Download Chart as PNG</span>} placement=\"right\">\r\n                        <div\r\n                          className={`button ${captureControlChartRFWAGInProgress && \"disabled\"}`}\r\n                          onClick={() => {\r\n                            if (!captureControlChartRFWAGInProgress)\r\n                              capturePicture('RFWAG', 4, { mapView: mapView, dataset: dataset, actualTimePeriodRange: [actualTimeInitial, actualTimeFinal], country: actualCountry, amrClassFilter: amrClassFilter, region: actualRegion })\r\n                          }}\r\n                        >\r\n                          <FontAwesomeIcon icon={faCamera} size=\"sm\" />\r\n                        </div>\r\n                      </TooltipMaterialUI>\r\n                      {captureControlChartRFWAGInProgress && (\r\n                        <CustomCircularProgress\r\n                          size={44}\r\n                          thickness={4} />\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                  {/* Labels */}\r\n                  <span className=\"chart-title chart-wrapper-RDWAG-top\">Top Genotypes (up to 10)</span>\r\n                  <div className=\"chart-wrapper-RDWAG-view\" style={{ width: dimensions.width > desktop ? \"71%\" : \"90%\" }}>\r\n                    <InputLabel className={classes.inputLabel}>Select Drug Class</InputLabel>\r\n                    {/* Drug class dropdown */}\r\n                    <FormControl fullWidth className={classes.formControlSelect}>\r\n                      <DropDownSelect\r\n                        options={amrClassFilterforFilterOptions}\r\n                        searchable={false}\r\n                        labelField={\"value\"}\r\n                        values={[{ value: amrClassFilter, id: (amrClassFilterforFilterOptions.find(o => o.value === amrClassFilter)).id }]}\r\n                        onChange={evt => {\r\n                          setAmrClassFilter(evt[0].value)\r\n                        }}\r\n                        className=\"dropdown-select\"\r\n                      />\r\n                    </FormControl>\r\n                    <InputLabel className={classes.inputLabel}>Data view</InputLabel>\r\n                    {/* Data view dropdown */}\r\n                    <FormControl fullWidth className={classes.formControlSelect}>\r\n                      <DropDownSelect\r\n                        options={amrClassFilterOptions}\r\n                        searchable={false}\r\n                        labelField={\"value\"}\r\n                        values={[{ value: amrClassFilterOptions[RDWAGDataviewFilter - 1].value, id: RDWAGDataviewFilter }]}\r\n                        onChange={evt => {\r\n                          setRDWAGDataviewFilter(evt[0].id)\r\n                        }}\r\n                        className=\"dropdown-select\"\r\n                      />\r\n                    </FormControl>\r\n                  </div>\r\n                  <div id=\"RFWAG\" >\r\n                    {plotAmrClassChart}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"chart-wrapper-div3\" style={{ paddingLeft: dimensions.width < mobile ? 0 : 10, marginTop: dimensions.width < desktop ? 50 : 0 }}>\r\n                {/* Drug resistance trends CHART */}\r\n                <div className=\"chart-wrapper-DRT\">\r\n                  <div className=\"chart-wrapper-DRT-div\">\r\n                    <span className=\"chart-title chart-wrapper-DRT-title\">Drug resistance trends</span>\r\n                    {/* Download button */}\r\n                    <div className=\"chart-wrapper-DRT-download\">\r\n                      <TooltipMaterialUI title={<span className=\"my-font\">Download Chart as PNG</span>} placement=\"right\">\r\n                        <div\r\n                          className={`button ${captureControlChartDRTInProgress && \"disabled\"}`}\r\n                          onClick={() => {\r\n                            if (!captureControlChartDRTInProgress)\r\n                              capturePicture('DRT', 2, { mapView: mapView, dataset: dataset, actualTimePeriodRange: [actualTimeInitial, actualTimeFinal], country: actualCountry, drugs: trendValues, region: actualRegion })\r\n                          }}\r\n                        >\r\n                          <FontAwesomeIcon icon={faCamera} size=\"sm\" />\r\n                        </div>\r\n                      </TooltipMaterialUI>\r\n                      {captureControlChartDRTInProgress && (\r\n                        <CustomCircularProgress\r\n                          size={44}\r\n                          thickness={4} />\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                  {/* Labels */}\r\n                  <span className=\"chart-title chart-wrapper-RFWA-top\">Data are plotted for years with N ≥ 10 genomes</span>\r\n                  {dimensions.width > desktop && (<span className=\"chart-title\" ></span>)}\r\n                  <div className=\"chart-wrapper-DRT-view\" style={{ width: dimensions.width > 790 ? \"71%\" : '260px' }}>\r\n                    <div className=\"chart-wrapper-DRT-view-drugs\">\r\n                      <div className=\"chart-wrapper-DRT-view-drugs-label\">Drugs view</div>\r\n                    </div>\r\n                    {/* Drugs dropdown */}\r\n                    <FormControl id=\"DDS\" fullWidth className={classes.formControlSelect}>\r\n                      <DropDownSelect\r\n                        options={trendDropdownOptions}\r\n                        multi={true}\r\n                        searchable={false}\r\n                        clearable={true}\r\n                        separator={true}\r\n                        labelField={\"value\"}\r\n                        values={trendDropdownOptions}\r\n                        className=\"dropdown-select\"\r\n                        contentRenderer={({ props, state }) => {\r\n                          return (\r\n                            <div className=\"chart-wrapper-DRT-view-drugs-select\">\r\n                              {state.values.length} of {props.options.length} Selected\r\n                            </div>\r\n                          );\r\n                        }}\r\n                        itemRenderer={({ item, itemIndex, props, state, methods }) => (\r\n                          <div key={item[props.valueField]} onClick={() => methods.addItem(item)}>\r\n                            <div className=\"chart-wrapper-DRT-view-drugs-select-options\">\r\n                              <input type=\"checkbox\" checked={methods.isSelected(item)} onChange={() => { }} />\r\n                              &nbsp;&nbsp;&nbsp;{item[props.labelField]}\r\n                            </div>\r\n                          </div>\r\n                        )}\r\n                        clearRenderer={\r\n                          ({ props, state, methods }) => {\r\n                            return (\r\n                              <Buttons>\r\n                                {methods.areAllSelected() ? (\r\n                                  <ButtonClearSelect id=\"DSButton\" className=\"clear\" onClick={methods.clearAll} checked={false}>\r\n                                    Clear all\r\n                                  </ButtonClearSelect>\r\n                                ) : (\r\n                                  <ButtonClearSelect id=\"DSButton\" onClick={methods.selectAll} checked={true}>Select all</ButtonClearSelect>\r\n                                )}\r\n                              </Buttons>\r\n                            );\r\n                          }\r\n                        }\r\n                        onChange={(values) => {\r\n                          const doc = document.getElementById('DRT');\r\n                          const lines = doc.getElementsByClassName('recharts-line')\r\n                          for (let index = 0; index < lines.length; index++) {\r\n                            const isValue = values.some(e => e.id === index)\r\n                            lines[index].style.display = isValue ? 'block' : 'none';\r\n                          }\r\n                          setTrendValues(values)\r\n                        }}\r\n                      />\r\n                    </FormControl>\r\n                  </div>\r\n                  <div id=\"DRT\">\r\n                    {plotDrugTrendsChart}\r\n                  </div>\r\n                </div>\r\n                {/* Genotype distribution CHART */}\r\n                <div className=\"chart-wrapper-GD\">\r\n                  <div className=\"chart-wrapper-GD-div\">\r\n                    <span className=\"chart-title chart-wrapper-GD-title\">Genotype distribution</span>\r\n                    {/* Download chart */}\r\n                    <div className=\"chart-wrapper-GD-download\">\r\n                      <TooltipMaterialUI title={<span className=\"my-font\">Download Chart as PNG</span>} placement=\"right\">\r\n                        <div\r\n                          className={`button ${captureControlChartGDInProgress && \"disabled\"}`}\r\n                          onClick={() => {\r\n                            if (!captureControlChartGDInProgress)\r\n                              capturePicture('GD', 3, { mapView: mapView, dataset: dataset, actualTimePeriodRange: [actualTimeInitial, actualTimeFinal], country: actualCountry, region: actualRegion })\r\n                          }}\r\n                        >\r\n                          <FontAwesomeIcon icon={faCamera} size=\"sm\" />\r\n                        </div>\r\n                      </TooltipMaterialUI>\r\n                      {captureControlChartGDInProgress && (\r\n                        <CustomCircularProgress\r\n                          size={44}\r\n                          thickness={4} />\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                  {dimensions.width > desktop && (<span className=\"chart-title chart-wrapper-GD-space\"></span>)}\r\n                  <div className=\"chart-wrapper-GD-view\" style={{ paddingTop: dimensions.width > desktop ? '67px' : '', width: dimensions.width > desktop ? \"71%\" : \"90%\" }}>\r\n                    <InputLabel className={classes.inputLabel}>Data view</InputLabel>\r\n                    {/* Data view dropdown */}\r\n                    <FormControl fullWidth className={classes.formControlSelect}>\r\n                      <DropDownSelect\r\n                        options={populationStructureFilterOptions}\r\n                        searchable={false}\r\n                        labelField={\"value\"}\r\n                        values={[{ value: populationStructureFilterOptions[populationStructureFilter - 1].value, id: populationStructureFilter }]}\r\n                        onChange={evt => {\r\n                          setPopulationStructureFilter(evt[0].id)\r\n                        }}\r\n                        className=\"dropdown-select\"\r\n                      />\r\n                    </FormControl>\r\n                  </div>\r\n                  <div id=\"GD\">\r\n                    {plotPopulationStructureChart}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {/* Download spreadsheet and report wrappper */}\r\n            <div className=\"wrapper-download-sheet-button\" style={{ flexDirection: dimensions.width > desktop ? \"row\" : \"column\", padding: dimensions.width < desktop ? '0px 12px 12px 12px' : '50px 12px 12px 12px', width: \"-webkit-fill-available\" }}>\r\n              {/* Download spreadsheet */}\r\n              <TooltipMaterialUI title={<span className=\"my-font\">Genome line list - including source information, genome-derived AMR and genotype information, and citations for each genome; pulled from Pathogenwatch.</span>} placement=\"top\">\r\n                <div className=\"download-sheet-button\" onClick={() => dowloadBaseSpreadsheet()}>\r\n                  <FontAwesomeIcon icon={faTable} style={{ marginRight: 8 }} />\r\n                  <span>Download database (CSV format, 2MB)</span>\r\n                </div>\r\n              </TooltipMaterialUI>\r\n              {/* Download report */}\r\n              <div style={{ marginTop: dimensions.width > desktop ? 0 : 20, marginLeft: dimensions.width > desktop ? 20 : 0 }} className={`download-sheet-button`} onClick={() => {\r\n                if (!captureReportInProgress) {\r\n                  setCaptureReportInProgress(true);\r\n                  capturePicture('', 5, { mapView: mapView, dataset: dataset, actualTimePeriodRange: [actualTimeInitial, actualTimeFinal], country: actualCountry, region: actualRegion, amrClassFilter: amrClassFilter, actualGenomes: actualGenomes, drugs: trendValues, dimensions: dimensions, desktop: desktop, RFWGCount: RFWGValues.length, PMID: countryPMID });\r\n                }\r\n              }}>\r\n                <FontAwesomeIcon icon={faFilePdf} style={{ marginRight: 8 }} />\r\n                <span>Download report from current view</span>\r\n                {captureReportInProgress && (<div style={{ position: 'absolute', paddingBottom: 32, paddingRight: 20 }}>\r\n                  <CustomCircularProgress\r\n                    size={44}\r\n                    thickness={4}\r\n                    style={{ position: \"absolute\", top: -5, left: -6, color: \"white\" }} />\r\n                </div>)}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* About info */}\r\n        <div className=\"about-wrapper\">\r\n          <h2>About TyphiNET</h2>\r\n          <p>\r\n              The TyphiNET dashboard collates antimicrobial resistance (AMR) and genotype (lineage) information extracted from whole genome sequence (WGS) data from the bacterial pathogen <i> Salmonella</i> Typhi, the agent of typhoid fever. Data are sourced regularly from Typhi <a href = \"https://pathogen.watch/\" target=\"_blank\" rel = \"noreferrer\">Pathogenwatch</a>, and filtered to include only genomes from unbiased sampling frames (e.g. routine or project - based enteric fever surveillance, as opposed to AMR - focused sampling). Information on genotype definitions can be found in <a href=\"https://academic.oup.com/jid/article/224/Supplement_7/S775/6358992?login=true\" target=\"_blank\" rel=\"noreferrer\">Dyson & Holt, 2021</a>.\r\n          </p> \r\n          <p>\r\n              AMR determinants identified in the genome assemblies using Pathogenwatch are used to define drug resistance variables as follows.Multidrug resistance(MDR): resistance determinants for chloramphenicol (<i>catA1</i> or <i>cmlA</i>), ampicillin (<i>bla</i>TEM-1D, <i>bla</i>OXA-7), and co-trimoxazole (at least one <i>dfrA</i> gene and at least one <i>sul</i> gene). Ciprofloxacin non-susceptible (CipI/R): one or more of the quinolone resistance determining region(QRDR) mutations at <i>gyrA</i>-83, <i>gyrA</i>-87, <i>parC</i>-80, <i>parC</i>-84, <i>gyrB</i>-464 or presence of a plasmid - mediated quinolone resistance(PMQR) gene(<i>qnrB</i>, <i>qnrD</i> , <i>qnrS</i>). Ciprofloxacin resistant (CipR): QRDR triple mutant (<i>gyrA</i>-83 and <i>gyrA</i>-87, together with either <i>parC</i>-80 or <i>parC</i>-84), or plasmid - mediated quinolone resistance(PMQR) together with <i>gyrA</i>-83, <i>gyrA</i>-87 and/or <i>gyrB</i>-464. Third - generation cephalosporin resistance (3 GCR): presence of an extended - spectrum beta-lactamase(ESBL) (<i>bla</i>CTX-M-12, <i>bla</i>CTX-M-15, <i>bla</i>CTX-M-23, <i>bla</i>CTX-M-55, <i>bla</i>SHV-12) or <i>ampC</i> gene.Extreme drug resistance(XDR): MDR plus CipR plus 3 GCR. Azithromycin resistance(AziR): mutation at <i>acrB</i>-717 and/or gene <i>ereA</i>. See <a href=\"https://www.nature.com/articles/s41467-021-23091-2\" target=\"_blank\" rel=\"noreferrer\">Argimon et al, 2021</a> for details.\r\n          </p> \r\n          <p>\r\n            The TyphiNET dashboard is coordinated by Dr Zoe Dyson, Dr Louise Cerdeira &amp; Prof Kat Holt at the <a href=\"https://www.lshtm.ac.uk/\" target=\"_blank\" rel=\"noreferrer\">London School of Hygiene and Tropical Medicine</a> &amp; <a href=\"https://www.monash.edu/\" target=\"_blank\" rel=\"noreferrer\">Monash University</a>. This project has received funding from the the Wellcome Trust (Open Research Fund, 219692/Z/19/Z) and the  European Union's Horizon 2020 research and innovation programme under the Marie Sklodowska-Curie grant agreement No 845681.\r\n            <img className=\"euFlagImage\" src={euFlagImg} alt=\"EU_FLAG\" height=\"20\" />\r\n          </p>\r\n        </div>\r\n        {/* Footer */}\r\n        <div className=\"footer-buttons-wrapper\">\r\n          {/* Contact Button */}\r\n          <div\r\n            className=\"flex-button\"\r\n            onClick={() => {\r\n              window.open('mailto:dashboard@typhi.net', '_blank')\r\n            }}\r\n          >\r\n            <FontAwesomeIcon icon={faEnvelope} className=\"fontawesome-icon\" />\r\n            <span>Contact</span>\r\n          </div>\r\n          {/* Github Button */}\r\n          <div\r\n            className=\"flex-button\"\r\n            onClick={() => {\r\n              window.open('https://github.com/zadyson/TyphiNET', '_blank')\r\n            }}\r\n          >\r\n            <FontAwesomeIcon icon={faGithub} className=\"fontawesome-icon\" />\r\n            <span>GitHub</span>\r\n          </div>\r\n          {/* Twitter Button */}\r\n          <div\r\n            className=\"flex-button\"\r\n            onClick={() => {\r\n              window.open('https://twitter.com/typhinet', '_blank')\r\n            }}\r\n          >\r\n            <FontAwesomeIcon icon={faTwitter} className=\"fontawesome-icon\" />\r\n            <span>Twitter</span>\r\n          </div>\r\n        </div>\r\n        <div style={{ flex: 1 }} />\r\n        <div className=\"footer\">\r\n          <span>Data obtained from: <a href=\"https://pathogen.watch\" rel=\"noreferrer\" target=\"_blank\">pathogen watch project</a> on 21/03/2022. <a href=\"https://holtlab.net\" rel=\"noreferrer\" target=\"_blank\">Holt Lab</a></span>\r\n        </div>\r\n        {/* FAB reset filters */}\r\n        <div className=\"fab-button\" style={{ width: dimensions.width < mobile ? '48px' : '56px' }}>\r\n          <TooltipMaterialUI title={<span className=\"my-font\">Reset Configurations</span>} placement=\"left\">\r\n            <Fab\r\n              color=\"primary\"\r\n              aria-label=\"add\"\r\n              size={dimensions.width < mobile ? 'medium' : 'large'}\r\n              onClick={() => {\r\n                setDataset('All');\r\n                setActualTimeInitial(timeInitial);\r\n                setActualTimeFinal(timeFinal);\r\n                setActualCountry('All');\r\n                setActualRegion('All');\r\n                setMapView('CipI');\r\n                setControlMapPosition({ coordinates: [0, 0], zoom: 1 });\r\n                setPopulationStructureFilter(1);\r\n                setAmrClassFilter(amrClassesForFilter[5]);\r\n                setRDWAGDataviewFilter(2)\r\n                setRFWGFilter(2)\r\n                setActualContinent(\"All\")\r\n                const text = document.getElementById('DSButton')\r\n                if (text.innerText === \"SELECT ALL\") {\r\n                  text.click()\r\n                }\r\n                const text2 = document.getElementById('DSButton2')\r\n                if (text2.innerText === \"RESET\") {\r\n                  text2.click()\r\n                }\r\n              }}\r\n            >\r\n              <FontAwesomeIcon icon={faUndoAlt} size=\"lg\" color=\"white\" />\r\n            </Fab>\r\n          </TooltipMaterialUI>\r\n        </div>\r\n        {/* Loading */}\r\n        {\r\n          loading && (<div className=\"loading-2\">\r\n            Loading...\r\n          </div>)\r\n        }\r\n      </div >\r\n      {/* Loading Screen */}\r\n      {\r\n        appLoading && (<div className=\"loading\">\r\n          {dimensions.width > desktop && (\r\n            <img className=\"logoImageMenu-loading\" src={typhinetLogoImg} alt=\"TyphiNET\" />\r\n          )}\r\n          <Loader\r\n            className=\"my-loader\"\r\n            type=\"Circles\"\r\n            color=\"#D91E45\"\r\n            height={70}\r\n            width={70}\r\n          />\r\n        </div>)\r\n      }\r\n    </div >\r\n  );\r\n};\r\n\r\nexport default DashboardPage;","import { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n// CircularProgress for 'Submit data' and 'Look for changes' dialogs\r\nconst CustomCircularProgress = withStyles({\r\n  root: {\r\n      color: \"rgb(31, 187, 211)\"\r\n  }\r\n})(CircularProgress);\r\n\r\n// CSS like classes\r\nconst useStyles = makeStyles({\r\n    cellON: {\r\n        backgroundColor: '#e9f9fc'\r\n    },\r\n    off: {},\r\n    tableID : {\r\n        position: 'sticky',\r\n        right: 0\r\n    },\r\n    tablePadding: {\r\n        marginTop: '16px'\r\n    },\r\n    actionsCell:{\r\n      borderLeft: '1px solid rgba(224, 224, 224, 1)',\r\n      backgroundColor: 'white'\r\n    },\r\n    stickyCell: {\r\n        position: 'sticky',\r\n        right: 0,\r\n        borderLeft: '1px solid rgba(224, 224, 224, 1)',\r\n        backgroundColor: 'white'\r\n    },\r\n    actionsHeaderCell: {\r\n      backgroundColor: 'black',\r\n      color: 'white',\r\n      borderLeft: '1px solid rgba(224, 224, 224, 1)'\r\n    },\r\n    stickyHeaderCell: {\r\n        position: 'sticky',\r\n        right: 0,\r\n        backgroundColor: 'black',\r\n        color: 'white',\r\n        borderLeft: '1px solid rgba(224, 224, 224, 1)'\r\n    },\r\n    changesTable: {\r\n        maxHeight: '400px',\r\n        marginBottom: 32\r\n    },\r\n    viewButton: {\r\n        width: 80\r\n    },\r\n    resetButton: {\r\n        width: 150,\r\n        height: 40,\r\n        marginRight: 16,\r\n        marginLeft: 16\r\n    },\r\n    uploadButton: {\r\n        width: 150,\r\n        height: 40\r\n    },\r\n    checkChangesButton: {\r\n      width: 100,\r\n      height: 40\r\n    }, \r\n    dialog: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        flexWrap: 'wrap'\r\n    },\r\n    input: {\r\n        marginBottom: 16\r\n    },\r\n    input2: {\r\n        marginBottom: 16\r\n    },\r\n    currentData: {\r\n      backgroundColor: 'black',\r\n      color: 'white',\r\n      whiteSpace: 'nowrap',\r\n      paddingRight: 8\r\n    },\r\n    toolbar: {\r\n      backgroundColor: 'black',\r\n      borderBottom: '1px solid white',\r\n      justifyContent: 'space-between'\r\n    },\r\n    deleteSelected: {\r\n      color: 'red'\r\n    },\r\n    checkboxCell: {\r\n      backgroundColor: 'black'\r\n    },\r\n    checkbox: {\r\n      color: 'white'\r\n    },\r\n    tableRowRoot: {\r\n      \"&$tableRowSelected, &$tableRowSelected:hover\": {\r\n        backgroundColor: '#e9f9fc'\r\n      }\r\n    },\r\n    tableRowSelected: {\r\n      backgroundColor: '#e9f9fc'\r\n    },\r\n    box: {\r\n      display: 'flex',\r\n      flexDirection: 'row',\r\n      alignItems: 'center',\r\n      paddingLeft: 16\r\n    },\r\n    select: {\r\n      textAlign: 'right',\r\n      paddingLeft: 8,\r\n      textAlignLast: 'right',\r\n      minWidth: 50,\r\n      userSelect: 'none',\r\n      borderRadius: 0,\r\n      font: 'inherit',\r\n      letterSpacing: 'inherit',\r\n      fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\r\n      fontSize: 14,\r\n      backgroundColor: 'transparent',\r\n      '&:focus': {\r\n        backgroundColor: 'transparent',\r\n      },\r\n      marginRight: 12,\r\n    },\r\n    choosePage: {\r\n      opacity: 0.87,\r\n      whiteSpace: 'nowrap',\r\n      paddingLeft: 8\r\n    },\r\n    selectFilter: {\r\n      backgroundColor: 'white',\r\n      textAlign: 'start'\r\n    },\r\n    header: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'stretch'\r\n    },\r\n    headerTitle:{\r\n      display: 'flex',\r\n      flexDirection: 'row',\r\n      justifyContent: 'flex-start'\r\n    },\r\n    rowHeader: {\r\n      display: 'flex',\r\n      flexDirection: 'row',\r\n      alignItems: 'flex-start'\r\n    },\r\n    deleteChangeButton: {\r\n      backgroundColor: 'grey',\r\n      width: 35,\r\n      borderRadius: 5,\r\n      color: 'white',\r\n      border: '1px solid rgba(0, 0, 0, 0.23)',\r\n      '&:hover': {\r\n        color: 'white',\r\n        backgroundColor: '#4F4F4F'\r\n      },\r\n    },\r\n    // dialogTransition: {\r\n    //   transition: 'none'\r\n    // }\r\n  });\r\n\r\n// Load button from the changes table\r\nconst ColorButton = withStyles((theme) => ({\r\n    root: {\r\n      backgroundColor: 'grey',\r\n      color: 'white',\r\n      '&:hover': {\r\n        color: 'white',\r\n        backgroundColor: '#4F4F4F'\r\n      },\r\n      marginRight: '16px'\r\n    },\r\n}))(Button);\r\n\r\n// 'Reset changes' and 'Add new entry' buttons\r\nconst ColorButton3 = withStyles((theme) => ({\r\n    root: {\r\n      backgroundColor: 'white',\r\n      color: '#1FBBD3',\r\n      '&:hover': {\r\n        color: 'black',\r\n        backgroundColor: '#CFCFCF'\r\n      },\r\n      borderColor: '#1FBBD3'\r\n    },\r\n}))(Button);\r\n\r\n// Submit changes button\r\nconst ColorButton4 = withStyles((theme) => ({\r\n    root: {\r\n      backgroundColor: '#1FBBD3',\r\n      color: 'white',\r\n      '&:hover': {\r\n        color: 'white',\r\n        backgroundColor: '#188C9E'\r\n      }\r\n    },\r\n}))(Button);\r\n\r\n// Refresh button\r\nconst ColorButton5 = withStyles((theme) => ({\r\n  root: {\r\n    color: 'black',\r\n    borderColor: 'black',\r\n    backgroundColor: 'transparent',\r\n    '&:hover': {\r\n      backgroundColor: '#CFCFCF'\r\n    },\r\n    fontWeight: 'bold'\r\n  },\r\n}))(Button);\r\n\r\n// Header cell for both tables\r\nconst StyledHeaderCell = withStyles((theme) => ({\r\n    head: {\r\n      backgroundColor: theme.palette.common.black,\r\n      color: theme.palette.common.white\r\n    },\r\n    body: {\r\n      fontSize: 14,\r\n    },\r\n  }))(TableCell);\r\n\r\n// Wrapper for data table\r\nconst CustomTableContainer = withStyles((theme) => ({\r\n    root: {\r\n        maxHeight: '600px'\r\n    }\r\n}))(TableContainer);\r\n\r\n// Label for header cells from the data table with order buttons\r\nconst CustomTableSortLabel = withStyles((theme) => ({\r\n    root: {\r\n        color: 'white',\r\n        \"&:hover\": {\r\n        color: 'white',\r\n      },\r\n      '&$active': {\r\n        color: 'white',\r\n      },\r\n    },\r\n    active: {},\r\n    icon: {\r\n        color: 'inherit !important'\r\n    },\r\n}))(TableSortLabel);\r\n\r\n\r\nexport { useStyles, ColorButton, ColorButton3, ColorButton4, ColorButton5, StyledHeaderCell, CustomTableContainer, CustomTableSortLabel, CustomCircularProgress};","import './index.css';\r\nimport React, { useEffect, useState } from 'react';\r\nimport Table from '@material-ui/core/Table';\r\nimport SearchBar from \"material-ui-search-bar\";\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, TextField, Tooltip, Toolbar, Typography, Checkbox, Box, IconButton, Select, MenuItem, FormControl } from '@material-ui/core';\r\nimport { FirstPage, LastPage, KeyboardArrowLeft, KeyboardArrowRight } from '@material-ui/icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTrashAlt, faEdit, faInfoCircle } from '@fortawesome/free-solid-svg-icons'\r\nimport { useStyles, ColorButton, ColorButton3, ColorButton4, ColorButton5, StyledHeaderCell, CustomTableContainer, CustomTableSortLabel, CustomCircularProgress } from './materialUI'\r\nimport { API_ENDPOINT } from '../../constants';\r\nimport axios from 'axios';\r\nimport LZString from 'lz-string';\r\nimport Loader from \"react-loader-spinner\";\r\nimport PropTypes from 'prop-types';\r\nimport { useTheme } from '@material-ui/core/styles';\r\n\r\nfunction createData(id, date, changes) {\r\n    return { id, date, changes };\r\n}\r\n\r\nconst AdminPage = () => {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [rows, setRows] = useState([])\r\n    const [data, setData] = useState([])\r\n    const [originalData, setOriginalData] = useState([])\r\n    const [currentData, setCurrentData] = useState(0)\r\n    const [tableKeys, setTableKeys] = useState([])\r\n    const [page, setPage] = useState(0)\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n    const [order, setOrder] = React.useState('asc');\r\n    const [orderBy, setOrderBy] = React.useState('NAME');\r\n    const [currentRow, setCurrentRow] = useState({})\r\n    const [open, setOpen] = React.useState(false);\r\n    const [open2, setOpen2] = React.useState(false);\r\n    const [open3, setOpen3] = React.useState(false);\r\n    const [open4, setOpen4] = React.useState(false);\r\n    const [open5, setOpen5] = React.useState(false);\r\n    const [open6, setOpen6] = React.useState(false);\r\n    const [open7, setOpen7] = React.useState(false);\r\n    const [open8, setOpen8] = React.useState(false);\r\n    const [resultMessage, setResultMessage] = React.useState(\"\");\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [selected, setSelected] = React.useState([]);\r\n    const [search, setSearch] = React.useState(\"\");\r\n    const [filters, setFilters] = React.useState({});\r\n    const [filterOptions, setFilterOptions] = React.useState({});\r\n    const [filteredData, setFilteredData] = React.useState([]);\r\n    const [isLoading, setIsLoading] = React.useState(true);\r\n    const [startProgress, setStartProgress] = React.useState(false);\r\n    const [loadingMessage, setLoadingMessage] = React.useState(\"\");\r\n    const [currentChange, setCurrentChange] = React.useState(null);\r\n\r\n    const [exceptions] = React.useState([\"NAME\", \"ACCESION\", \"Genome ID\", \"LATITUDE\", \"LONGITUDE\", \"LOCATION\", \"Mash Distance\", \"Matching Hashes\", \"SANGER LANE\", \"STRAIN\"]);\r\n\r\n    // Change table page\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    // Change number of rows per page and return to first page\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n\r\n    // Sort table by selected column in asc or desc\r\n    const handleRequestSort = (event, property) => {\r\n        const isAsc = orderBy === property && order === 'asc';\r\n        setOrder(isAsc ? 'desc' : 'asc');\r\n        setOrderBy(property);\r\n    };\r\n\r\n    // Helper function for getComparator\r\n    function descendingComparator(a, b, orderBy) {\r\n        if (b[orderBy] < a[orderBy]) {\r\n            return -1;\r\n        }\r\n        if (b[orderBy] > a[orderBy]) {\r\n            return 1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    // Main function to return data ordered to table\r\n    function stableSort(array, comparator) {\r\n        const stabilizedThis = array.map((el, index) => [el, index]);\r\n        stabilizedThis.sort((a, b) => {\r\n            const order = comparator(a[0], b[0]);\r\n            if (order !== 0) return order;\r\n            return a[1] - b[1];\r\n        });\r\n        return stabilizedThis.map((el) => el[0]);\r\n    }\r\n\r\n    // Comparator to order table for stableSort\r\n    function getComparator(order, orderBy) {\r\n        return order === 'desc'\r\n            ? (a, b) => descendingComparator(a, b, orderBy)\r\n            : (a, b) => -descendingComparator(a, b, orderBy);\r\n    }\r\n\r\n    // Change current view of the table to another ID, this also resets all changes made on the table\r\n    function changeView(id) {\r\n        resetChanges()\r\n        setData(originalData)\r\n        const aux = JSON.parse(JSON.stringify(data))\r\n        if (id > 0) {\r\n            for (let index = 0; index < id; index++) {\r\n                Object.keys(rows[index].changes.added).forEach(element => {\r\n                    const genome = rows[index].changes.added[element]\r\n                    const gIndex = aux.findIndex(x => x.NAME === genome.NAME)\r\n                    aux.splice(gIndex, 1)\r\n                });\r\n\r\n                Object.keys(rows[index].changes.deleted).forEach(element => {\r\n                    const genome = rows[index].changes.deleted[element]\r\n                    aux.push(genome)\r\n                    aux.sort((a, b) => a.NAME < b.NAME ? -1 : 1)\r\n                });\r\n\r\n                Object.keys(rows[index].changes.updated).forEach(element => {\r\n                    const keys = rows[index].changes.updated[element]\r\n                    for (const key in keys) {\r\n                        const genome = aux.filter(x => x.NAME === element)\r\n                        if (genome.length > 0) {\r\n                            genome[0][key] = keys[key].old\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n            setData(aux)\r\n        }\r\n        setCurrentData(id)\r\n    }\r\n\r\n    // Beautify text for changes\r\n    function betterChanges(changes) {\r\n        const aux = JSON.parse(JSON.stringify(changes))\r\n        const added = Object.keys(aux.added).length > 0 ? Object.keys(aux.added).join(\", \") + \".\" : \"\"\r\n        const deleted = (Object.keys(aux.deleted).length > 0 ? (Object.keys(aux.deleted).join(\", \")) + \".\" : \"\")\r\n        let updated = \"\"\r\n\r\n        if (Object.keys(aux.updated).length > 0) {\r\n            updated = Object.entries(aux.updated).map(x => {\r\n                const updates = Object.entries(x[1])\r\n                const changes = updates.map((y, i) => {\r\n                    const point = i === updates.length - 1 ? \".\" : \"\"\r\n                    return y[0] + \" (new: \" + y[1].new + \", old: \" + y[1].old + \")\" + point\r\n                });\r\n                return x[0] + \": \" + changes.join(\", \");\r\n            })\r\n        }\r\n\r\n        const text = []\r\n        if (added !== \"\") text.push([\"ADDED\", added])\r\n        if (deleted !== \"\") text.push([\"DELETED\", deleted])\r\n        if (updated !== \"\") text.push([\"UPDATED\", updated])\r\n        return text\r\n    }\r\n\r\n    // The five handlers below are mediators between the button and the dialog. They set specific informations before opening the dialogs.\r\n    function handleDelete(row) {\r\n        setCurrentRow(row)\r\n        setOpen(true)\r\n    }\r\n    function handleDeleteChange(id) {\r\n        setCurrentChange(id)\r\n        setOpen8(true)\r\n    }\r\n    function handleEdit(row) {\r\n        setCurrentRow(row)\r\n        setOpen2(true)\r\n    }\r\n    function handleUpload() {\r\n        setOpen4(true)\r\n    }\r\n    function handleCheckChanges(message) {\r\n        setResultMessage(message);\r\n        setOpen5(true);\r\n    }\r\n\r\n    // Delete chosen change\r\n    async function deleteChange() {\r\n        axios.post(`${API_ENDPOINT}mongo/deleteChange`, { id: currentChange - 1 })\r\n            .then((res) => {\r\n                getChangeData(res.data)\r\n                setCurrentData(0)\r\n            })\r\n            .finally(() => {\r\n                setOpen8(false)\r\n            })\r\n    }\r\n\r\n    // Check if there were any new changes on the database and updates the table\r\n    async function checkChanges(showPopup = true) {\r\n        setStartProgress(true);\r\n        setLoading(true);\r\n        return await axios.get(`${API_ENDPOINT}mongo/checkForChanges`)\r\n            .then(async (res) => {\r\n                if (res.data.Status === \"Changes\") {\r\n                    await resetChanges();\r\n                    await getData();\r\n                    if (showPopup) {\r\n                        handleCheckChanges('Changes were found. Tables updated.');\r\n                    }\r\n                    return true\r\n                } else if (res.data.Status === \"No Changes\") {\r\n                    if (showPopup) {\r\n                        handleCheckChanges('No changes found.');\r\n                    }\r\n                    return false\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                if (showPopup) {\r\n                    handleCheckChanges('Could not check for changes. Try again later.');\r\n                }\r\n                return false\r\n            })\r\n            .finally(() => {\r\n                setOpen7(false)\r\n                setLoading(false);\r\n                setStartProgress(false);\r\n            })\r\n    }\r\n\r\n    // Handler for select all rows button\r\n    const handleSelectAllClick = (event) => {\r\n        if (event.target.checked) {\r\n            const newSelecteds = filteredData.map((n) => n.NAME);\r\n            setSelected(newSelecteds);\r\n            return;\r\n        }\r\n        setSelected([]);\r\n    };\r\n\r\n    // Handler for selecting specific row\r\n    const handleClick = (name) => {\r\n        const selectedIndex = selected.indexOf(name);\r\n        let newSelected = [];\r\n\r\n        if (selectedIndex === -1) {\r\n            newSelected = newSelected.concat(selected, name);\r\n        } else if (selectedIndex === 0) {\r\n            newSelected = newSelected.concat(selected.slice(1));\r\n        } else if (selectedIndex === selected.length - 1) {\r\n            newSelected = newSelected.concat(selected.slice(0, -1));\r\n        } else if (selectedIndex > 0) {\r\n            newSelected = newSelected.concat(\r\n                selected.slice(0, selectedIndex),\r\n                selected.slice(selectedIndex + 1),\r\n            );\r\n        }\r\n\r\n        setSelected(newSelected);\r\n    };\r\n\r\n    // Delete selected row\r\n    function deleteRow() {\r\n        const index = data.findIndex(x => x.NAME === currentRow.NAME)\r\n        const aux = JSON.parse(JSON.stringify(data))\r\n        aux.splice(index, 1)\r\n        setData(aux)\r\n        setOpen(false)\r\n    }\r\n\r\n    // If more than one row is selected than delete all of them\r\n    function deleteRows() {\r\n        const aux = JSON.parse(JSON.stringify(filteredData))\r\n        const aux2 = JSON.parse(JSON.stringify(data))\r\n        selected.forEach(row => {\r\n            const index = aux.findIndex(x => x.NAME === row);\r\n            if (index !== -1) {\r\n                aux.splice(index, 1)\r\n            }\r\n            const index2 = aux2.findIndex(x => x.NAME === row);\r\n            if (index2 !== -1) {\r\n                aux2.splice(index2, 1)\r\n            }\r\n        })\r\n        setData(aux2)\r\n        setFilteredData(aux)\r\n        setSelected([])\r\n        setOpen6(false)\r\n    }\r\n\r\n    // Edit selected row\r\n    function editRow() {\r\n        const row = {}\r\n        const aux = JSON.parse(JSON.stringify(data))\r\n\r\n        const rowIndex = aux.findIndex(x => x.NAME === currentRow.NAME)\r\n\r\n        const inputs = document.getElementsByClassName('MuiOutlinedInput-input')\r\n        Object.values(inputs).forEach(input => {\r\n            row[input.id] = input.value\r\n        });\r\n\r\n        aux[rowIndex] = row\r\n        setData(aux)\r\n        setOpen2(false)\r\n        setResultMessage(`Row ${currentRow.NAME} edited with success!`)\r\n        setOpen5(true)\r\n    }\r\n\r\n    // Add new row\r\n    function addRow() {\r\n        const row = {}\r\n        const aux = JSON.parse(JSON.stringify(data))\r\n\r\n        const inputs = document.getElementsByClassName('MuiOutlinedInput-input')\r\n        Object.values(inputs).forEach(input => {\r\n            row[input.id] = input.value\r\n        });\r\n\r\n        aux.push(row)\r\n        aux.sort((a, b) => a.NAME < b.NAME ? -1 : 1)\r\n        setData(aux)\r\n        setOpen3(false)\r\n        setResultMessage(`Row ${row.NAME} added with success!`)\r\n        setOpen5(true)\r\n    }\r\n\r\n    // Reset all changes made on the table\r\n    async function resetChanges() {\r\n        setSearch(\"\")\r\n        let aux = JSON.parse(JSON.stringify(filters))\r\n        for (const key in aux) {\r\n            aux[key] = \"\"\r\n        }\r\n        setFilters(aux)\r\n        setPage(0)\r\n        setRowsPerPage(10)\r\n        setCurrentData(0)\r\n        setData(originalData)\r\n    }\r\n\r\n    // Upload changes on the current table to the database\r\n    function uploadChanges() {\r\n        setLoading(true)\r\n        setStartProgress(true);\r\n        setResultMessage(\"\")\r\n        const times = Math.ceil(data.length / 1500)\r\n        const parts = []\r\n        for (let index = 0; index < times; index++) {\r\n            if (times === 0) {\r\n                break\r\n            }\r\n            if (times === index - 1) {\r\n                if (times === 1) {\r\n                    parts.push([data])\r\n                } else {\r\n                    parts.push([data.slice((times - 1) * 1500)])\r\n                }\r\n            } else {\r\n                parts.push([data.slice(index * 1500, (index * 1500) + 1500)])\r\n            }\r\n            axios.post(`${API_ENDPOINT}mongo/upload/admin`, {\r\n                data: LZString.compress(JSON.stringify(parts[parts.length - 1])),\r\n                parts: times,\r\n                current: index + 1\r\n            })\r\n                .then((res) => {\r\n                    if (res.data !== '' && res.data.Status === 'Uploaded') {\r\n                        axios.get(`${API_ENDPOINT}mongo/download`)\r\n                            .then(async () => {\r\n                                await checkChanges()\r\n                                setResultMessage(\"Upload and download completed!\")\r\n                            })\r\n                            .catch(() => {\r\n                                setResultMessage(\"Something went wrong with the download, please try again later!\")\r\n                            })\r\n                            .finally(() => {\r\n                                setStartProgress(false)\r\n                                setLoading(false)\r\n                                setOpen4(false)\r\n                                setOpen5(true)\r\n                            })\r\n                    }\r\n                })\r\n                .catch(() => {\r\n                    setStartProgress(false)\r\n                    setLoading(false)\r\n                    setOpen4(false)\r\n                    setResultMessage(\"Something went wrong with the upload, please try again later!\")\r\n                    setOpen5(true)\r\n                })\r\n        }\r\n\r\n    }\r\n\r\n    // Helper for function getData to get only the changes\r\n    function getChangeData(changeData) {\r\n        let aux = []\r\n        for (let index = 0; index < changeData.length - 1; index++) {\r\n            const date = new Date(changeData[index].updatedAt)\r\n            aux.push(\r\n                createData(index + 1, date.toLocaleString(), changeData[index].changes)\r\n            )\r\n        }\r\n        setRows(aux)\r\n    }\r\n\r\n    // Main function to get data for all the admin page\r\n    async function getData() {\r\n        await axios.get(`${API_ENDPOINT}file/databaseLog`)\r\n            .then((res) => {\r\n                let data = res.data\r\n\r\n                getChangeData(data)\r\n\r\n                let aux2 = Object.values(data[data.length - 1].data)\r\n                let aux4 = {}\r\n                let aux5 = {}\r\n\r\n                Object.keys(aux2[0]).forEach(key => {\r\n                    if (!exceptions.includes(key)) {\r\n                        aux4[key] = \"\"\r\n                        aux5[key] = []\r\n                        let options = aux2.map(value => value[key]);\r\n                        options.forEach(x => {\r\n                            if (!aux5[key].includes(x)) {\r\n                                aux5[key].push(x)\r\n                            }\r\n                        })\r\n                        aux5[key].sort()\r\n                    }\r\n                });\r\n\r\n                setData(aux2)\r\n                setFilters(aux4)\r\n                setFilterOptions(aux5)\r\n                setFilteredData(JSON.parse(JSON.stringify(aux2)))\r\n                setOriginalData(JSON.parse(JSON.stringify(aux2)))\r\n                setTableKeys(Object.keys(aux2[0]))\r\n            })\r\n    }\r\n\r\n    // Check for changes when admin page is opened and get data\r\n    useEffect(() => {\r\n        setLoadingMessage(\"Checking for changes...\")\r\n        checkChanges(false).then((response) => {\r\n            if (!response) {\r\n                getData().finally(() => {\r\n                    setIsLoading(false);\r\n                });\r\n            } else {\r\n                setIsLoading(false);\r\n            }\r\n        }).finally(() => {\r\n            setLoadingMessage(\"\")\r\n        })\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    // Watcher for filtering columns and search\r\n    useEffect(() => {\r\n        let aux = JSON.parse(JSON.stringify(data))\r\n        if (search === \"\" && Object.values(filters).join(\"\") === \"\") {\r\n            setFilteredData(aux)\r\n        } else {\r\n            let s = search.toLowerCase()\r\n\r\n            aux = aux.filter(x => {\r\n                let pass = true\r\n                Object.keys(x).forEach(y => {\r\n                    if (!exceptions.includes(y) && filters[y] !== \"\" && x[y] !== filters[y]) {\r\n                        pass = false\r\n                    }\r\n                    if (search !== \"\" && !Object.values(x).join(\" \").toLowerCase().includes(s)) {\r\n                        pass = false\r\n                    }\r\n                })\r\n                return pass\r\n            })\r\n\r\n            setFilteredData(aux)\r\n        }\r\n    }, [search, data, filters, exceptions])\r\n\r\n    // Component table toolbar (Above table header)\r\n    const EnhancedTableToolbar = (props) => {\r\n        const { numSelected } = props;\r\n\r\n        return (\r\n            <Toolbar className={classes.toolbar}>\r\n                {numSelected > 0 ? (\r\n                    <Typography\r\n                        sx={{ flex: '1 1 100%' }}\r\n                        color=\"inherit\"\r\n                        variant=\"subtitle1\"\r\n                        component=\"div\"\r\n                        className={classes.currentData}\r\n                    >\r\n                        {numSelected} selected\r\n                    </Typography>\r\n                ) : (\r\n                    <Typography\r\n                        sx={{ flex: '1 1 100%' }}\r\n                        variant=\"h6\"\r\n                        id=\"tableTitle\"\r\n                        component=\"div\"\r\n                        className={classes.currentData}\r\n                    >\r\n                        <b>DATA ID:</b> {currentData}\r\n                    </Typography>\r\n                )}\r\n\r\n                <SearchBar\r\n                    value={search}\r\n                    placeholder={\"Search and press enter...\"}\r\n                    onCancelSearch={() => {\r\n                        setSearch(\"\")\r\n                        setPage(0)\r\n                    }}\r\n                    onRequestSearch={(value) => {\r\n                        setSearch(value)\r\n                        setPage(0)\r\n                    }}\r\n                />\r\n\r\n                {numSelected > 0 ? (\r\n                    <Tooltip title=\"Delete\">\r\n                        <IconButton onClick={() => setOpen6(true)}>\r\n                            <FontAwesomeIcon icon={faTrashAlt} className={classes.deleteSelected} />\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                ) : null}\r\n\r\n\r\n            </Toolbar>\r\n        );\r\n    };\r\n\r\n    // Component table header\r\n    function EnhancedTableHead(props) {\r\n        const { classes, order, orderBy, onRequestSort, onSelectAllClick, numSelected, rowCount } = props;\r\n        const createSortHandler = (property) => (event) => {\r\n            onRequestSort(event, property);\r\n        };\r\n\r\n        return data.length > 0 && (\r\n            <TableHead>\r\n                <TableRow>\r\n                    <TableCell padding=\"checkbox\" className={classes.checkboxCell}>\r\n                        <Checkbox\r\n                            color=\"primary\"\r\n                            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n                            checked={rowCount > 0 && numSelected === rowCount}\r\n                            onChange={onSelectAllClick}\r\n                            className={classes.checkbox}\r\n                        />\r\n                    </TableCell>\r\n                    {tableKeys.map((headCell) => (\r\n                        <StyledHeaderCell\r\n                            key={headCell + 'table'}\r\n                            align={'center'}\r\n                            sortDirection={orderBy === headCell ? order : false}\r\n                        >\r\n                            <CustomTableSortLabel\r\n                                active={orderBy === headCell}\r\n                                direction={orderBy === headCell ? order : 'asc'}\r\n                                onClick={createSortHandler(headCell)}\r\n                                className={classes.rowHeader}\r\n                            >\r\n                                <div className={classes.header}>\r\n                                    <div className={classes.headerTitle}>{headCell}</div>\r\n                                    {!exceptions.includes(headCell) && (\r\n                                        <FormControl>\r\n                                            <Select\r\n                                                value={filters[headCell]}\r\n                                                onChange={(event) => {\r\n                                                    setPage(0)\r\n                                                    let aux = JSON.parse(JSON.stringify(filters))\r\n                                                    aux[headCell] = event.target.value\r\n                                                    setFilters(aux)\r\n                                                    event.stopPropagation()\r\n                                                }}\r\n                                                displayEmpty\r\n                                                className={classes.selectFilter}\r\n                                                onOpen={(event) => event.stopPropagation()}\r\n                                                onClose={(event) => event.stopPropagation()}\r\n                                            >\r\n                                                <MenuItem value=\"\">\r\n                                                    <em>None</em>\r\n                                                </MenuItem>\r\n                                                {filterOptions[headCell].map((option, i) => (<MenuItem key={i + option} value={option}>{option}</MenuItem>))}\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    )}\r\n                                </div>\r\n                            </CustomTableSortLabel>\r\n                        </StyledHeaderCell>\r\n                    ))}\r\n                    <TableCell className={classes.stickyHeaderCell}>\r\n                        <div className=\"actions\">ACTIONS</div>\r\n                    </TableCell>\r\n                </TableRow>\r\n            </TableHead>\r\n        );\r\n    }\r\n\r\n    // Get number of pages for the table\r\n    function NumberOfPages() {\r\n        return Math.ceil(filteredData.length / rowsPerPage)\r\n    }\r\n\r\n    // Component TablePaginationActions\r\n    function TablePaginationActions(props) {\r\n        const theme = useTheme();\r\n        const { count, page, rowsPerPage, onPageChange } = props;\r\n\r\n        const handleFirstPageButtonClick = (event) => {\r\n            onPageChange(event, 0);\r\n        };\r\n\r\n        const handleBackButtonClick = (event) => {\r\n            onPageChange(event, page - 1);\r\n        };\r\n\r\n        const handleNextButtonClick = (event) => {\r\n            onPageChange(event, page + 1);\r\n        };\r\n\r\n        const handleLastPageButtonClick = (event) => {\r\n            onPageChange(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n        };\r\n\r\n        return (\r\n            <Box sx={{ flexShrink: 0, ml: 2.5 }} className={classes.box}>\r\n                <IconButton\r\n                    onClick={handleFirstPageButtonClick}\r\n                    disabled={page === 0}\r\n                    aria-label=\"first page\"\r\n                >\r\n                    {theme.direction === 'rtl' ? <LastPage /> : <FirstPage />}\r\n                </IconButton>\r\n                <IconButton\r\n                    onClick={handleBackButtonClick}\r\n                    disabled={page === 0}\r\n                    aria-label=\"previous page\"\r\n                >\r\n                    {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n                </IconButton>\r\n                <IconButton\r\n                    onClick={handleNextButtonClick}\r\n                    disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n                    aria-label=\"next page\"\r\n                >\r\n                    {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n                </IconButton>\r\n                <IconButton\r\n                    onClick={handleLastPageButtonClick}\r\n                    disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n                    aria-label=\"last page\"\r\n                >\r\n                    {theme.direction === 'rtl' ? <FirstPage /> : <LastPage />}\r\n                </IconButton>\r\n            </Box>\r\n        );\r\n    }\r\n\r\n    TablePaginationActions.propTypes = {\r\n        count: PropTypes.number.isRequired,\r\n        onPageChange: PropTypes.func.isRequired,\r\n        page: PropTypes.number.isRequired,\r\n        rowsPerPage: PropTypes.number.isRequired,\r\n    };\r\n\r\n    const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n    return (\r\n        <div className=\"mainDiv\">\r\n            <div className=\"mainDiv-padding\">\r\n                <div className=\"titleActions\">\r\n                    <div className=\"titleButtonRow\">\r\n                        <h2 className=\"title\">MongoDB Admin Page</h2>\r\n                    </div>\r\n                    <div className=\"tooltipSubmitRow\">\r\n                        <ColorButton5 onClick={() => { setOpen7(true) }} variant=\"outlined\" size=\"small\" className={classes.checkChangesButton} >Refresh</ColorButton5>\r\n                        <Tooltip\r\n                            title={<div className=\"tooltipTitle\">Changes are only saved by pressing the <b className=\"boldTooltipText\">SUBMIT CHANGES</b> button</div>}\r\n                            placement=\"left\"\r\n                        >\r\n                            <IconButton>\r\n                                <FontAwesomeIcon icon={faInfoCircle} />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                        <ColorButton4 onClick={() => { handleUpload() }} variant=\"outlined\" size=\"small\" className={classes.uploadButton} >Submit changes</ColorButton4>\r\n                    </div>\r\n                </div>\r\n                <TableContainer component={Paper} className={classes.changesTable}>\r\n                    <Table stickyHeader size=\"small\" aria-label=\"a dense table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <StyledHeaderCell>ID</StyledHeaderCell>\r\n                                <StyledHeaderCell>Date</StyledHeaderCell>\r\n                                <StyledHeaderCell align=\"left\">Changes</StyledHeaderCell>\r\n                                <StyledHeaderCell className={classes.actionsHeaderCell} align=\"left\">Actions</StyledHeaderCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            <TableRow key={'00changes'} className={currentData === 0 ? classes.cellON : classes.off}>\r\n                                <TableCell align=\"left\">{0}</TableCell>\r\n                                <TableCell align=\"left\"></TableCell>\r\n                                <TableCell align=\"left\" width=\"70%\">{'CURRENT DATA'}</TableCell>\r\n                                <TableCell align=\"left\" className={classes.actionsCell}>\r\n                                    <div className=\"tableActions\">\r\n                                        <ColorButton onClick={() => changeView(0)} variant=\"outlined\" size=\"small\" className={classes.viewButton} >Load</ColorButton>\r\n                                    </div>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                            {rows.map((row, r) => (\r\n                                <TableRow key={row.id + 'changes'} className={row.id === currentData ? classes.cellON : classes.off}>\r\n                                    <TableCell align=\"left\">{row.id}</TableCell>\r\n                                    <TableCell align=\"left\">{row.date}</TableCell>\r\n                                    <TableCell align=\"left\" width=\"70%\">{betterChanges(row.changes).map((text, t) => (\r\n                                        <div key={`${r}${t}change`} className=\"changesText\">\r\n                                            <div>{text[0]}</div>\r\n                                            &nbsp;{\"entries with name:\"}&nbsp;\r\n                                            {text[0] !== \"UPDATED\"\r\n                                                ? (<div>{text[1]}</div>)\r\n                                                : (\r\n                                                    <div>\r\n                                                        {Object.values(text[1]).map((x, i) => (<div key={x + i}>{x}</div>))}\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                        </div>\r\n                                    ))}</TableCell>\r\n                                    <TableCell align=\"left\" className={classes.actionsCell}>\r\n                                        <div className=\"tableActions\">\r\n                                            <ColorButton onClick={() => changeView(row.id)} variant=\"outlined\" size=\"small\" className={classes.viewButton} >Load</ColorButton>\r\n                                            <IconButton aria-label=\"deleteChange\" size=\"small\" className={classes.deleteChangeButton} onClick={() => handleDeleteChange(row.id)}>\r\n                                                <FontAwesomeIcon icon={faTrashAlt} />\r\n                                            </IconButton>\r\n                                        </div>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <div className=\"addButton\">\r\n                    <ColorButton4 onClick={() => { handleUpload() }} variant=\"outlined\" size=\"small\" className={classes.uploadButton} >Submit changes</ColorButton4>\r\n                    <ColorButton3\r\n                        onClick={() => {\r\n                            resetChanges()\r\n                        }}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        className={classes.resetButton}\r\n                    >\r\n                        Reset changes\r\n                    </ColorButton3>\r\n                    <ColorButton3 onClick={() => { setOpen3(true) }} variant=\"outlined\" size=\"small\" className={classes.uploadButton} >Add new entry</ColorButton3>\r\n                </div>\r\n                <Paper className={classes.tablePadding}>\r\n                    <EnhancedTableToolbar numSelected={selected.length} />\r\n                    <CustomTableContainer>\r\n                        <Table stickyHeader size=\"small\" aria-label=\"a dense table\">\r\n                            <EnhancedTableHead\r\n                                numSelected={selected.length}\r\n                                classes={classes}\r\n                                order={order}\r\n                                orderBy={orderBy}\r\n                                onRequestSort={handleRequestSort}\r\n                                onSelectAllClick={handleSelectAllClick}\r\n                                rowCount={filteredData.length}\r\n                            />\r\n                            <TableBody>\r\n                                {stableSort(filteredData, getComparator(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => {\r\n                                    const isItemSelected = isSelected(row.NAME);\r\n                                    return (\r\n                                        <TableRow\r\n                                            key={row.NAME + index}\r\n                                            className={classes.dataRow}\r\n                                            role=\"checkbox\"\r\n                                            hover\r\n                                            aria-checked={isItemSelected}\r\n                                            selected={isItemSelected}\r\n                                            classes={{ selected: classes.tableRowSelected, root: classes.tableRowRoot }}\r\n                                        >\r\n                                            <TableCell padding=\"checkbox\">\r\n                                                <Checkbox\r\n                                                    color=\"primary\"\r\n                                                    checked={isItemSelected}\r\n                                                    onClick={() => handleClick(row.NAME)}\r\n                                                />\r\n                                            </TableCell>\r\n                                            {Object.values(row).map((cell) => (\r\n                                                <TableCell key={Math.random() + 'cell'} align=\"center\">{cell}</TableCell>\r\n                                            ))}\r\n                                            <TableCell align=\"center\" className={classes.stickyCell}>\r\n                                                <div className=\"tableActions\">\r\n                                                    <IconButton aria-label=\"edit\" size=\"small\" onClick={() => handleEdit(JSON.parse(JSON.stringify(row)))}>\r\n                                                        <FontAwesomeIcon icon={faEdit} className=\"editIcon\" />\r\n                                                    </IconButton>\r\n                                                    <IconButton aria-label=\"delete\" size=\"small\" onClick={() => handleDelete(JSON.parse(JSON.stringify(row)))}>\r\n                                                        <FontAwesomeIcon icon={faTrashAlt} className=\"trashIcon\" />\r\n                                                    </IconButton>\r\n                                                </div>\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    )\r\n                                })}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </CustomTableContainer>\r\n                    <div className=\"pagination\">\r\n                        <Typography className={classes.choosePage} variant=\"body2\">Choose Page: </Typography>\r\n                        {filteredData.length > 0 && (<Select\r\n                            value={page}\r\n                            onChange={(event) => { setPage(event.target.value) }}\r\n                            className={classes.select}\r\n                            disableUnderline\r\n                        >\r\n                            {[...Array(NumberOfPages())].map((x, i) => <MenuItem key={x + 'nPage'} value={i}>{i}</MenuItem>)}\r\n                        </Select>)}\r\n                        <TablePagination\r\n                            rowsPerPageOptions={[10, 25, 50, 100]}\r\n                            component=\"div\"\r\n                            count={filteredData.length}\r\n                            rowsPerPage={rowsPerPage}\r\n                            page={page}\r\n                            onPageChange={handleChangePage}\r\n                            onRowsPerPageChange={handleChangeRowsPerPage}\r\n                            ActionsComponent={TablePaginationActions}\r\n                        />\r\n                    </div>\r\n                </Paper>\r\n            </div>\r\n            {isLoading && (<div className=\"div-loader\">\r\n                <Loader\r\n                    type=\"Circles\"\r\n                    color=\"white\"\r\n                    height={70}\r\n                    width={70}\r\n                />\r\n                <p className=\"div-loader-msg\">{loadingMessage}</p>\r\n            </div>)}\r\n            <Dialog\r\n                open={open}\r\n                onClose={() => setOpen(false)}\r\n                style={classes.dialogTransition}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">\r\n                    {\"Delete\"}\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        Are you sure you want to delete {currentRow.NAME} ?\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => setOpen(false)}>Cancel</Button>\r\n                    <Button onClick={() => deleteRow()} autoFocus>\r\n                        Ok\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            <Dialog\r\n                open={open2}\r\n                onClose={() => setOpen2(false)}\r\n                style={classes.dialogTransition}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">\r\n                    {\"Edit\"}\r\n                </DialogTitle>\r\n                <DialogContent className={classes.dialog}>\r\n                    {Object.entries(currentRow).map(item => (\r\n                        <TextField key={item[0] + 'input'} id={item[0]} className={classes.input} label={item[0]} variant=\"outlined\" defaultValue={item[1]} />\r\n                    ))}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => setOpen2(false)}>Cancel</Button>\r\n                    <Button onClick={() => editRow()} autoFocus>\r\n                        Ok\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            <Dialog\r\n                open={open3}\r\n                onClose={() => setOpen3(false)}\r\n                style={classes.dialogTransition}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">\r\n                    {\"Add\"}\r\n                </DialogTitle>\r\n                <DialogContent className={classes.dialog}>\r\n                    {data.length > 0 && Object.keys(data[0]).map(item => (\r\n                        <TextField key={item + 'input2'} id={item} className={classes.input2} label={item} variant=\"outlined\" />\r\n                    ))}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => setOpen3(false)}>Cancel</Button>\r\n                    <Button onClick={() => addRow()} autoFocus>\r\n                        Ok\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            <Dialog\r\n                open={open4}\r\n                onClose={() => setOpen4(false)}\r\n                style={classes.dialogTransition}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">\r\n                    {\"Submit data\"}\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        Would you like to submit changes to the database and download the new version to TyphiNET ?\r\n                    </DialogContentText>\r\n                    {loading && (<div className=\"spinner\">\r\n                        <CustomCircularProgress></CustomCircularProgress>\r\n                    </div>)}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    {!startProgress && (<Button onClick={() => setOpen4(false)}>Cancel</Button>)}\r\n                    {!startProgress && (<Button onClick={() => uploadChanges()} autoFocus>\r\n                        Ok\r\n                    </Button>)}\r\n                </DialogActions>\r\n            </Dialog>\r\n            <Dialog\r\n                open={open5}\r\n                onClose={() => setOpen5(false)}\r\n                style={classes.dialogTransition}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">\r\n                    {\"Result\"}\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        {resultMessage}\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => setOpen5(false)} autoFocus>\r\n                        Ok\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            <Dialog\r\n                open={open6}\r\n                onClose={() => setOpen6(false)}\r\n                style={classes.dialogTransition}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">\r\n                    {\"Delete many\"}\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        Are you sure you want to delete {selected.length} row(s) ?\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => setOpen6(false)}>Cancel</Button>\r\n                    <Button onClick={() => deleteRows()} autoFocus>\r\n                        Ok\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            <Dialog\r\n                open={open7}\r\n                onClose={() => setOpen7(false)}\r\n                style={classes.dialogTransition}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">\r\n                    {\"Look for changes\"}\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        Look for changes in the database? If there are, your current changes in the table below will be reseted.\r\n                    </DialogContentText>\r\n                    {loading && (<div className=\"spinner\">\r\n                        <CustomCircularProgress></CustomCircularProgress>\r\n                    </div>)}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    {!startProgress && (<Button onClick={() => setOpen7(false)}>Cancel</Button>)}\r\n                    {!startProgress && (<Button onClick={() => { checkChanges() }} autoFocus>\r\n                        Ok\r\n                    </Button>)}\r\n                </DialogActions>\r\n            </Dialog>\r\n            <Dialog\r\n                open={open8}\r\n                onClose={() => setOpen8(false)}\r\n                style={classes.dialogTransition}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">\r\n                    {\"Delete changes\"}\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        Are you sure you want to delete change nº {currentChange} ?\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => setOpen8(false)}>Cancel</Button>\r\n                    <Button onClick={() => deleteChange()} autoFocus>\r\n                        Ok\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AdminPage","import React from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\nimport './App.css';\r\nimport DashboardPage from './pages/dashboard'\r\nimport AdminPage from './pages/admin'\r\n// import typhinetLogoImg from './assets/img/logo-typhinet.png';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <nav>\r\n          <Link to=\"/\"></Link>\r\n          <Link to=\"/admin\"></Link>\r\n        </nav>\r\n        <Switch>\r\n          <Route path=\"/admin\">\r\n            <div>\r\n              <AdminPage/>\r\n            </div>\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <div className=\"App\">\r\n              <div className=\"content\">\r\n                <DashboardPage/>\r\n              </div>\r\n            </div>\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n    // <div className=\"App\">\r\n    //   <div className=\"content\">\r\n    //     <DashboardPage/>\r\n    //   </div>\r\n    // </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log(\"New content is available; please refresh.\");\r\n            } else {\r\n              // At this point, everything has been pre-cached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","// capture the user experience of a web page\r\n\r\nconst reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { createTheme, ThemeProvider } from \"@material-ui/core\";\r\n\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#1fbbd3',\r\n    }\r\n  },\r\n});\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ThemeProvider theme={theme}>\r\n      <App />\r\n    </ThemeProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nregisterServiceWorker();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}